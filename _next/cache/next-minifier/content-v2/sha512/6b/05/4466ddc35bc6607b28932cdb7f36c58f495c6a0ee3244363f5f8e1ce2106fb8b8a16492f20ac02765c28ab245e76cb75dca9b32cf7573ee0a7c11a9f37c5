{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[11],{SLVX:function(t,e,r){\"use strict\";function n(t){var e,r=t.Symbol;return\"function\"===typeof r?r.observable?e=r.observable:(e=r(\"observable\"),r.observable=e):e=\"@@observable\",e}r.d(e,\"a\",(function(){return n}))},Uuew:function(t,e,r){\"use strict\";r.r(e),r.d(e,\"ApolloConsumer\",(function(){return p})),r.d(e,\"ApolloProvider\",(function(){return l})),r.d(e,\"getApolloContext\",(function(){return a})),r.d(e,\"resetApolloContext\",(function(){return u})),r.d(e,\"Mutation\",(function(){return q})),r.d(e,\"Query\",(function(){return R})),r.d(e,\"Subscription\",(function(){return k})),r.d(e,\"graphql\",(function(){return T})),r.d(e,\"withApollo\",(function(){return z})),r.d(e,\"withMutation\",(function(){return F})),r.d(e,\"withQuery\",(function(){return L})),r.d(e,\"withSubscription\",(function(){return N})),r.d(e,\"useApolloClient\",(function(){return K})),r.d(e,\"useLazyQuery\",(function(){return B})),r.d(e,\"useMutation\",(function(){return G})),r.d(e,\"useQuery\",(function(){return W})),r.d(e,\"useSubscription\",(function(){return H})),r.d(e,\"getDataFromTree\",(function(){return Y})),r.d(e,\"getMarkupFromTree\",(function(){return $})),r.d(e,\"renderToStringWithData\",(function(){return Z}));var n,i=r(\"q1tI\"),o=r.n(i),s=r(\"qVdT\");function a(){return n||(n=o.a.createContext({})),n}function u(){n=o.a.createContext({})}var c,l=function(t){var e=t.client,r=t.children,n=a();return o.a.createElement(n.Consumer,null,(function(t){return void 0===t&&(t={}),e&&t.client!==e&&(t=Object.assign({},t,{client:e})),Object(s.b)(t.client,5),o.a.createElement(n.Provider,{value:t},r)}))},p=function(t){var e=a();return o.a.createElement(e.Consumer,null,(function(e){return Object(s.b)(e&&e.client,6),t.children(e.client)}))};!function(t){t[t.Query=0]=\"Query\",t[t.Mutation=1]=\"Mutation\",t[t.Subscription=2]=\"Subscription\"}(c||(c={}));var h=new Map;function b(t){var e;switch(t){case c.Query:e=\"Query\";break;case c.Mutation:e=\"Mutation\";break;case c.Subscription:e=\"Subscription\"}return e}function f(t){var e,r,n=h.get(t);if(n)return n;Object(s.b)(!!t&&!!t.kind,1);var i=t.definitions.filter((function(t){return\"FragmentDefinition\"===t.kind})),o=t.definitions.filter((function(t){return\"OperationDefinition\"===t.kind&&\"query\"===t.operation})),a=t.definitions.filter((function(t){return\"OperationDefinition\"===t.kind&&\"mutation\"===t.operation})),u=t.definitions.filter((function(t){return\"OperationDefinition\"===t.kind&&\"subscription\"===t.operation}));Object(s.b)(!i.length||o.length||a.length||u.length,2),Object(s.b)(o.length+a.length+u.length<=1,3),r=o.length?c.Query:c.Mutation,o.length||a.length||(r=c.Subscription);var l=o.length?o:a.length?a:u;Object(s.b)(1===l.length,4);var p=l[0];e=p.variableDefinitions||[];var b={name:p.name&&\"Name\"===p.name.kind?p.name.value:\"data\",type:r,variables:e};return h.set(t,b),b}var d=r(\"mrSG\"),v=r(\"dMq0\"),y=r(\"qx2n\"),O=function(){function t(t,e){this.isMounted=!1,this.previousOptions={},this.context={},this.options={},this.options=t||{},this.context=e||{}}return t.prototype.getOptions=function(){return this.options},t.prototype.setOptions=function(t,e){void 0===e&&(e=!1),e&&!Object(y.a)(this.options,t)&&(this.previousOptions=this.options),this.options=t},t.prototype.unmount=function(){this.isMounted=!1},t.prototype.refreshClient=function(){var t=this.options&&this.options.client||this.context&&this.context.client;Object(s.b)(!!t,2);var e=!1;return t!==this.client&&(e=!0,this.client=t,this.cleanup()),{client:this.client,isNew:e}},t.prototype.verifyDocumentType=function(t,e){var r=f(t);b(e),b(r.type);Object(s.b)(r.type===e,3)},t}(),g=function(t){function e(e){var r=e.options,n=e.context,i=e.onNewData,o=t.call(this,r,n)||this;return o.previousData={},o.currentObservable={},o.runLazy=!1,o.runLazyQuery=function(t){o.cleanup(),o.runLazy=!0,o.lazyOptions=t,o.onNewData()},o.getExecuteResult=function(){var t=o.getQueryResult();return o.startQuerySubscription(),t},o.obsRefetch=function(t){return o.currentObservable.query.refetch(t)},o.obsFetchMore=function(t){return o.currentObservable.query.fetchMore(t)},o.obsUpdateQuery=function(t){return o.currentObservable.query.updateQuery(t)},o.obsStartPolling=function(t){o.currentObservable&&o.currentObservable.query&&o.currentObservable.query.startPolling(t)},o.obsStopPolling=function(){o.currentObservable&&o.currentObservable.query&&o.currentObservable.query.stopPolling()},o.obsSubscribeToMore=function(t){return o.currentObservable.query.subscribeToMore(t)},o.onNewData=i,o}return Object(d.c)(e,t),e.prototype.execute=function(){this.refreshClient();var t=this.getOptions(),e=t.skip,r=t.query;return(e||r!==this.previousData.query)&&(this.removeQuerySubscription(),this.previousData.query=r),this.updateObservableQuery(),this.isMounted&&this.startQuerySubscription(),this.getExecuteSsrResult()||this.getExecuteResult()},e.prototype.executeLazy=function(){return this.runLazy?[this.runLazyQuery,this.execute()]:[this.runLazyQuery,{loading:!1,networkStatus:v.NetworkStatus.ready,called:!1,data:void 0}]},e.prototype.fetchData=function(){var t=this.getOptions();if(t.skip||!1===t.ssr)return!1;var e=this.currentObservable.query;return!!e.getCurrentResult().loading&&e.result()},e.prototype.afterExecute=function(t){var e=(void 0===t?{}:t).lazy,r=void 0!==e&&e;return this.isMounted=!0,r&&!this.runLazy||this.handleErrorOrCompleted(),this.previousOptions=this.getOptions(),this.unmount.bind(this)},e.prototype.cleanup=function(){this.removeQuerySubscription(),delete this.currentObservable.query,delete this.previousData.result},e.prototype.getOptions=function(){var e=t.prototype.getOptions.call(this);return this.lazyOptions&&(e.variables=Object(d.a)(Object(d.a)({},e.variables),this.lazyOptions.variables),e.context=Object(d.a)(Object(d.a)({},e.context),this.lazyOptions.context)),this.runLazy&&delete e.skip,e},e.prototype.ssrInitiated=function(){return this.context&&this.context.renderPromises},e.prototype.getExecuteSsrResult=function(){var t,e=!1===this.getOptions().ssr,r=this.refreshClient().client.disableNetworkFetches,n=Object(d.a)({loading:!0,networkStatus:v.NetworkStatus.loading,called:!0,data:void 0,stale:!1,client:this.client},this.observableQueryFields());return e&&(this.ssrInitiated()||r)?(this.previousData.result=n,n):(this.ssrInitiated()&&(t=this.context.renderPromises.addQueryPromise(this,this.getExecuteResult)||n),t)},e.prototype.prepareObservableQueryOptions=function(){var t=this.getOptions();this.verifyDocumentType(t.query,c.Query);var e=t.displayName||\"Query\";return!this.ssrInitiated()||\"network-only\"!==t.fetchPolicy&&\"cache-and-network\"!==t.fetchPolicy||(t.fetchPolicy=\"cache-first\"),Object(d.a)(Object(d.a)({},t),{displayName:e,context:t.context,metadata:{reactComponent:{displayName:e}}})},e.prototype.initializeObservableQuery=function(){var t,e;if(this.ssrInitiated()&&(this.currentObservable.query=this.context.renderPromises.getSSRObservable(this.getOptions())),!this.currentObservable.query){var r=this.prepareObservableQueryOptions();this.previousData.observableQueryOptions=Object(d.a)(Object(d.a)({},r),{children:null}),this.currentObservable.query=this.refreshClient().client.watchQuery(Object(d.a)({},r)),this.ssrInitiated()&&(null===(e=null===(t=this.context)||void 0===t?void 0:t.renderPromises)||void 0===e||e.registerSSRObservable(this.currentObservable.query,r))}},e.prototype.updateObservableQuery=function(){if(this.currentObservable.query){var t=Object(d.a)(Object(d.a)({},this.prepareObservableQueryOptions()),{children:null});Object(y.a)(t,this.previousData.observableQueryOptions)||(this.previousData.observableQueryOptions=t,this.currentObservable.query.setOptions(t).catch((function(){})))}else this.initializeObservableQuery()},e.prototype.startQuerySubscription=function(){var t=this;if(!this.currentObservable.subscription&&!this.getOptions().skip){var e=this.currentObservable.query;this.currentObservable.subscription=e.subscribe({next:function(e){var r=e.loading,n=e.networkStatus,i=e.data,o=t.previousData.result;o&&o.loading===r&&o.networkStatus===n&&Object(y.a)(o.data,i)||t.onNewData()},error:function(e){if(t.resubscribeToQuery(),!e.hasOwnProperty(\"graphQLErrors\"))throw e;var r=t.previousData.result;(r&&r.loading||!Object(y.a)(e,t.previousData.error))&&(t.previousData.error=e,t.onNewData())}})}},e.prototype.resubscribeToQuery=function(){this.removeQuerySubscription();var t=this.currentObservable.query.getLastError(),e=this.currentObservable.query.getLastResult();this.currentObservable.query.resetLastResults(),this.startQuerySubscription(),Object.assign(this.currentObservable.query,{lastError:t,lastResult:e})},e.prototype.getQueryResult=function(){var t=this.observableQueryFields(),e=this.getOptions();if(e.skip)t=Object(d.a)(Object(d.a)({},t),{data:void 0,error:void 0,loading:!1,called:!0});else{var r=this.currentObservable.query.getCurrentResult(),n=r.loading,i=r.partial,o=r.networkStatus,s=r.errors,a=r.error,u=r.data;if(s&&s.length>0&&(a=new v.ApolloError({graphQLErrors:s})),t=Object(d.a)(Object(d.a)({},t),{loading:n,networkStatus:o,error:a,called:!0}),n){var c=this.previousData.result&&this.previousData.result.data;t.data=c&&u?Object(d.a)(Object(d.a)({},c),u):c||u}else if(a)Object.assign(t,{data:(this.currentObservable.query.getLastResult()||{}).data});else{var l=this.currentObservable.query.options.fetchPolicy;if(e.partialRefetch&&!u&&i&&\"cache-only\"!==l)return Object.assign(t,{loading:!0,networkStatus:v.NetworkStatus.loading}),t.refetch(),t;t.data=u}}return t.client=this.client,this.previousData.loading=this.previousData.result&&this.previousData.result.loading||!1,this.previousData.result=t,this.currentObservable.query&&this.currentObservable.query.resetQueryStoreErrors(),t},e.prototype.handleErrorOrCompleted=function(){if(this.currentObservable.query&&this.previousData.result){var t=this.previousData.result,e=t.data,r=t.loading,n=t.error;if(!r){var i=this.getOptions(),o=i.query,s=i.variables,a=i.onCompleted,u=i.onError;if(this.previousOptions&&!this.previousData.loading&&Object(y.a)(this.previousOptions.query,o)&&Object(y.a)(this.previousOptions.variables,s))return;a&&!n?a(e):u&&n&&u(n)}}},e.prototype.removeQuerySubscription=function(){this.currentObservable.subscription&&(this.currentObservable.subscription.unsubscribe(),delete this.currentObservable.subscription)},e.prototype.observableQueryFields=function(){return{variables:this.currentObservable.query.variables,refetch:this.obsRefetch,fetchMore:this.obsFetchMore,updateQuery:this.obsUpdateQuery,startPolling:this.obsStartPolling,stopPolling:this.obsStopPolling,subscribeToMore:this.obsSubscribeToMore}},e}(O);function m(t,e,r){void 0===r&&(r=!1);var n=Object(i.useContext)(a()),o=Object(i.useReducer)((function(t){return t+1}),0),s=o[0],u=o[1],c=e?Object(d.a)(Object(d.a)({},e),{query:t}):{query:t},l=Object(i.useRef)(),p=l.current||new g({options:c,context:n,onNewData:function(){p.ssrInitiated()?u():Promise.resolve().then(u)}});p.setOptions(c),p.context=n,p.ssrInitiated()&&!l.current&&(l.current=p);var h=function(t,e){var r=Object(i.useRef)();return r.current&&Object(y.a)(e,r.current.key)||(r.current={key:e,value:t()}),r.current.value}((function(){return r?p.executeLazy():p.execute()}),{options:Object(d.a)(Object(d.a)({},c),{onError:void 0,onCompleted:void 0}),context:n,tick:s}),b=r?h[1]:h;return Object(i.useEffect)((function(){return l.current||(l.current=p),function(){return p.cleanup()}}),[]),Object(i.useEffect)((function(){return p.afterExecute({lazy:r})}),[b.loading,b.networkStatus,b.error,b.data]),h}var Q=function(t){function e(e){var r=e.options,n=e.context,i=e.result,o=e.setResult,s=t.call(this,r,n)||this;return s.runMutation=function(t){void 0===t&&(t={}),s.onMutationStart();var e=s.generateNewMutationId();return s.mutate(t).then((function(t){return s.onMutationCompleted(t,e),t})).catch((function(t){if(s.onMutationError(t,e),!s.getOptions().onError)throw t}))},s.verifyDocumentType(r.mutation,c.Mutation),s.result=i,s.setResult=o,s.mostRecentMutationId=0,s}return Object(d.c)(e,t),e.prototype.execute=function(t){return this.isMounted=!0,this.verifyDocumentType(this.getOptions().mutation,c.Mutation),t.client=this.refreshClient().client,[this.runMutation,t]},e.prototype.afterExecute=function(){return this.isMounted=!0,this.unmount.bind(this)},e.prototype.cleanup=function(){},e.prototype.mutate=function(t){var e=this.getOptions(),r=e.mutation,n=e.variables,i=e.optimisticResponse,o=e.update,s=e.context,a=void 0===s?{}:s,u=e.awaitRefetchQueries,c=void 0!==u&&u,l=e.fetchPolicy,p=Object(d.a)({},t),h=Object.assign({},n,p.variables);return delete p.variables,this.refreshClient().client.mutate(Object(d.a)({mutation:r,optimisticResponse:i,refetchQueries:p.refetchQueries||this.getOptions().refetchQueries,awaitRefetchQueries:c,update:o,context:a,fetchPolicy:l,variables:h},p))},e.prototype.onMutationStart=function(){this.result.loading||this.getOptions().ignoreResults||this.updateResult({loading:!0,error:void 0,data:void 0,called:!0})},e.prototype.onMutationCompleted=function(t,e){var r=this.getOptions(),n=r.onCompleted,i=r.ignoreResults,o=t.data,s=t.errors,a=s&&s.length>0?new v.ApolloError({graphQLErrors:s}):void 0;this.isMostRecentMutation(e)&&!i&&this.updateResult({called:!0,loading:!1,data:o,error:a}),n&&n(o)},e.prototype.onMutationError=function(t,e){var r=this.getOptions().onError;this.isMostRecentMutation(e)&&this.updateResult({loading:!1,error:t,data:void 0,called:!0}),r&&r(t)},e.prototype.generateNewMutationId=function(){return++this.mostRecentMutationId},e.prototype.isMostRecentMutation=function(t){return this.mostRecentMutationId===t},e.prototype.updateResult=function(t){!this.isMounted||this.previousResult&&Object(y.a)(this.previousResult,t)||(this.setResult(t),this.previousResult=t)},e}(O);var j=function(t){function e(e){var r=e.options,n=e.context,i=e.setResult,o=t.call(this,r,n)||this;return o.currentObservable={},o.setResult=i,o.initialize(r),o}return Object(d.c)(e,t),e.prototype.execute=function(t){if(!0===this.getOptions().skip)return this.cleanup(),{loading:!1,error:void 0,data:void 0,variables:this.getOptions().variables};var e=t;this.refreshClient().isNew&&(e=this.getLoadingResult());var r=this.getOptions().shouldResubscribe;return\"function\"===typeof r&&(r=!!r(this.getOptions())),!1!==r&&this.previousOptions&&Object.keys(this.previousOptions).length>0&&(this.previousOptions.subscription!==this.getOptions().subscription||!Object(y.a)(this.previousOptions.variables,this.getOptions().variables)||this.previousOptions.skip!==this.getOptions().skip)&&(this.cleanup(),e=this.getLoadingResult()),this.initialize(this.getOptions()),this.startSubscription(),this.previousOptions=this.getOptions(),Object(d.a)(Object(d.a)({},e),{variables:this.getOptions().variables})},e.prototype.afterExecute=function(){this.isMounted=!0},e.prototype.cleanup=function(){this.endSubscription(),delete this.currentObservable.query},e.prototype.initialize=function(t){this.currentObservable.query||!0===this.getOptions().skip||(this.currentObservable.query=this.refreshClient().client.subscribe({query:t.subscription,variables:t.variables,fetchPolicy:t.fetchPolicy}))},e.prototype.startSubscription=function(){this.currentObservable.subscription||(this.currentObservable.subscription=this.currentObservable.query.subscribe({next:this.updateCurrentData.bind(this),error:this.updateError.bind(this),complete:this.completeSubscription.bind(this)}))},e.prototype.getLoadingResult=function(){return{loading:!0,error:void 0,data:void 0}},e.prototype.updateResult=function(t){this.isMounted&&this.setResult(t)},e.prototype.updateCurrentData=function(t){var e=this.getOptions().onSubscriptionData;this.updateResult({data:t.data,loading:!1,error:void 0}),e&&e({client:this.refreshClient().client,subscriptionData:t})},e.prototype.updateError=function(t){this.updateResult({error:t,loading:!1})},e.prototype.completeSubscription=function(){var t=this.getOptions().onSubscriptionComplete;t&&t(),this.endSubscription()},e.prototype.endSubscription=function(){this.currentObservable.subscription&&(this.currentObservable.subscription.unsubscribe(),delete this.currentObservable.subscription)},e}(O);!function(){function t(){this.queryPromises=new Map,this.queryInfoTrie=new Map}t.prototype.registerSSRObservable=function(t,e){this.lookupQueryInfo(e).observable=t},t.prototype.getSSRObservable=function(t){return this.lookupQueryInfo(t).observable},t.prototype.addQueryPromise=function(t,e){return this.lookupQueryInfo(t.getOptions()).seen?e():(this.queryPromises.set(t.getOptions(),new Promise((function(e){e(t.fetchData())}))),null)},t.prototype.hasPromises=function(){return this.queryPromises.size>0},t.prototype.consumeAndAwaitPromises=function(){var t=this,e=[];return this.queryPromises.forEach((function(r,n){t.lookupQueryInfo(n).seen=!0,e.push(r)})),this.queryPromises.clear(),Promise.all(e)},t.prototype.lookupQueryInfo=function(t){var e=this.queryInfoTrie,r=t.query,n=t.variables,i=e.get(r)||new Map;e.has(r)||e.set(r,i);var o=JSON.stringify(n),s=i.get(o)||{seen:!1,observable:null};return i.has(o)||i.set(o,s),s}}();var S=r(\"17x9\"),w=r.n(S);function R(t){var e=t.children,r=function(t,e){return m(t,e,!1)}(t.query,Object(d.e)(t,[\"children\",\"query\"]));return e&&r?e(r):null}function q(t){var e=function(t,e){var r=Object(i.useContext)(a()),n=Object(i.useState)({called:!1,loading:!1}),o=n[0],s=n[1],u=e?Object(d.a)(Object(d.a)({},e),{mutation:t}):{mutation:t},c=Object(i.useRef)(),l=(c.current||(c.current=new Q({options:u,context:r,result:o,setResult:s})),c.current);return l.setOptions(u),l.context=r,Object(i.useEffect)((function(){return l.afterExecute()})),l.execute(o)}(t.mutation,t),r=e[0],n=e[1];return t.children?t.children(r,n):null}function k(t){var e=function(t,e){var r=Object(i.useContext)(a()),n=e?Object(d.a)(Object(d.a)({},e),{subscription:t}):{subscription:t},o=Object(i.useState)({loading:!n.skip,error:void 0,data:void 0}),s=o[0],u=o[1],c=Object(i.useRef)(),l=(c.current||(c.current=new j({options:n,context:r,setResult:u})),c.current);return l.setOptions(n,!0),l.context=r,Object(i.useEffect)((function(){return l.afterExecute()})),Object(i.useEffect)((function(){return l.cleanup.bind(l)}),[]),l.execute(s)}(t.subscription,t);return t.children&&e?t.children(e):null}(R||(R={})).propTypes={client:w.a.object,children:w.a.func.isRequired,fetchPolicy:w.a.string,notifyOnNetworkStatusChange:w.a.bool,onCompleted:w.a.func,onError:w.a.func,pollInterval:w.a.number,query:w.a.object.isRequired,variables:w.a.object,ssr:w.a.bool,partialRefetch:w.a.bool,returnPartialData:w.a.bool},(q||(q={})).propTypes={mutation:w.a.object.isRequired,variables:w.a.object,optimisticResponse:w.a.oneOfType([w.a.object,w.a.func]),refetchQueries:w.a.oneOfType([w.a.arrayOf(w.a.oneOfType([w.a.string,w.a.object])),w.a.func]),awaitRefetchQueries:w.a.bool,update:w.a.func,children:w.a.func.isRequired,onCompleted:w.a.func,onError:w.a.func,fetchPolicy:w.a.string},(k||(k={})).propTypes={subscription:w.a.object.isRequired,variables:w.a.object,children:w.a.func,onSubscriptionData:w.a.func,onSubscriptionComplete:w.a.func,shouldResubscribe:w.a.oneOfType([w.a.func,w.a.bool])};var E=r(\"2mql\"),M=r.n(E),x=function(){return{}},P=function(){return!1};function I(t){return t.displayName||t.name||\"Component\"}function C(t,e){for(var r={},n=0,i=t.variables;n<i.length;n++){var o=i[n],s=o.variable,a=o.type;if(s.name&&s.name.value){var u=s.name.value,c=e[u];\"undefined\"===typeof c?\"NonNullType\"!==a.kind&&(r[u]=void 0):r[u]=c}}return r}var D=function(t){function e(e){var r=t.call(this,e)||this;return r.withRef=!1,r.setWrappedInstance=r.setWrappedInstance.bind(r),r}return Object(d.c)(e,t),e.prototype.getWrappedInstance=function(){return Object(s.b)(this.withRef,2),this.wrappedInstance},e.prototype.setWrappedInstance=function(t){this.wrappedInstance=t},e}(o.a.Component);function L(t,e){void 0===e&&(e={});var r=f(t),n=e.options,i=void 0===n?x:n,s=e.skip,a=void 0===s?P:s,u=e.alias,c=void 0===u?\"Apollo\":u,l=i;\"function\"!==typeof l&&(l=function(){return i});var p,h=a;return\"function\"!==typeof h&&(h=function(){return a}),function(n){var i=c+\"(\"+I(n)+\")\",s=function(s){function a(){return null!==s&&s.apply(this,arguments)||this}return Object(d.c)(a,s),a.prototype.render=function(){var s=this,a=this.props,u=h(a),c=u?Object.create(null):Object(d.a)({},l(a));return!u&&!c.variables&&r.variables.length>0&&(c.variables=C(r,a)),o.a.createElement(R,Object(d.a)({},c,{displayName:i,skip:u,query:t}),(function(t){t.client;var r,i,c=t.data,l=Object(d.e)(t,[\"client\",\"data\"]);if(e.withRef&&(s.withRef=!0,a=Object.assign({},a,{ref:s.setWrappedInstance})),u)return o.a.createElement(n,Object(d.a)({},a,{}));var h=Object.assign(l,c||{}),b=e.name||\"data\",f=((r={})[b]=h,r);if(e.props){var v=((i={})[b]=h,i.ownProps=a,i);f=p=e.props(v,p)}return o.a.createElement(n,Object(d.a)({},a,f))}))},a.displayName=i,a.WrappedComponent=n,a}(D);return M()(s,n,{})}}function F(t,e){void 0===e&&(e={});var r=f(t),n=e.options,i=void 0===n?x:n,s=e.alias,a=void 0===s?\"Apollo\":s,u=i;return\"function\"!==typeof u&&(u=function(){return i}),function(n){var i=a+\"(\"+I(n)+\")\",s=function(s){function a(){return null!==s&&s.apply(this,arguments)||this}return Object(d.c)(a,s),a.prototype.render=function(){var i=this.props,s=u(i);return e.withRef&&(this.withRef=!0,i=Object.assign({},i,{ref:this.setWrappedInstance})),!s.variables&&r.variables.length>0&&(s.variables=C(r,i)),o.a.createElement(q,Object(d.a)({ignoreResults:!0},s,{mutation:t}),(function(t,r){var s,a,u=r.data,c=Object(d.e)(r,[\"data\"]),l=Object.assign(c,u||{}),p=e.name||\"mutate\",h=e.name?p+\"Result\":\"result\",b=((s={})[p]=t,s[h]=l,s);if(e.props){var f=((a={})[p]=t,a[h]=l,a.ownProps=i,a);b=e.props(f)}return o.a.createElement(n,Object(d.a)({},i,b))}))},a.displayName=i,a.WrappedComponent=n,a}(D);return M()(s,n,{})}}function N(t,e){void 0===e&&(e={});var r=f(t),n=e.options,i=void 0===n?x:n,s=e.skip,a=void 0===s?P:s,u=e.alias,c=void 0===u?\"Apollo\":u,l=e.shouldResubscribe,p=i;\"function\"!==typeof p&&(p=function(){return i});var h,b=a;return\"function\"!==typeof b&&(b=function(){return a}),function(n){var i=c+\"(\"+I(n)+\")\",s=function(s){function a(t){var e=s.call(this,t)||this;return e.state={resubscribe:!1},e}return Object(d.c)(a,s),a.prototype.componentDidUpate=function(t){l&&this.setState({resubscribe:l(t,this.props)})},a.prototype.render=function(){var s=this,a=this.props,u=b(a),c=u?Object.create(null):p(a);return!u&&!c.variables&&r.variables.length>0&&(c.variables=C(r,a)),o.a.createElement(k,Object(d.a)({},c,{displayName:i,skip:u,subscription:t,shouldResubscribe:this.state.resubscribe}),(function(t){var r,i,c=t.data,l=Object(d.e)(t,[\"data\"]);if(e.withRef&&(s.withRef=!0,a=Object.assign({},a,{ref:s.setWrappedInstance})),u)return o.a.createElement(n,Object(d.a)({},a,{}));var p=Object.assign(l,c||{}),b=e.name||\"data\",f=((r={})[b]=p,r);if(e.props){var v=((i={})[b]=p,i.ownProps=a,i);f=h=e.props(v,h)}return o.a.createElement(n,Object(d.a)({},a,f))}))},a.displayName=i,a.WrappedComponent=n,a}(D);return M()(s,n,{})}}function T(t,e){switch(void 0===e&&(e={}),f(t).type){case c.Mutation:return F(t,e);case c.Subscription:return N(t,e);case c.Query:default:return L(t,e)}}function z(t,e){void 0===e&&(e={});var r=\"withApollo(\"+function(t){return t.displayName||t.name||\"Component\"}(t)+\")\",n=function(n){function i(t){var e=n.call(this,t)||this;return e.setWrappedInstance=e.setWrappedInstance.bind(e),e}return Object(d.c)(i,n),i.prototype.getWrappedInstance=function(){return Object(s.b)(e.withRef,1),this.wrappedInstance},i.prototype.setWrappedInstance=function(t){this.wrappedInstance=t},i.prototype.render=function(){var r=this;return o.a.createElement(p,null,(function(n){var i=Object.assign({},r.props,{client:n,ref:e.withRef?r.setWrappedInstance:void 0});return o.a.createElement(t,Object(d.a)({},i))}))},i.displayName=r,i.WrappedComponent=t,i}(o.a.Component);return M()(n,t,{})}var A=function(){function t(t,e){this.isMounted=!1,this.previousOptions={},this.context={},this.options={},this.options=t||{},this.context=e||{}}return t.prototype.getOptions=function(){return this.options},t.prototype.setOptions=function(t,e){void 0===e&&(e=!1),e&&!Object(y.a)(this.options,t)&&(this.previousOptions=this.options),this.options=t},t.prototype.unmount=function(){this.isMounted=!1},t.prototype.refreshClient=function(){var t=this.options&&this.options.client||this.context&&this.context.client;Object(s.b)(!!t,2);var e=!1;return t!==this.client&&(e=!0,this.client=t,this.cleanup()),{client:this.client,isNew:e}},t.prototype.verifyDocumentType=function(t,e){var r=f(t);b(e),b(r.type);Object(s.b)(r.type===e,3)},t}(),V=function(t){function e(e){var r=e.options,n=e.context,i=e.onNewData,o=t.call(this,r,n)||this;return o.previousData={},o.currentObservable={},o.runLazy=!1,o.runLazyQuery=function(t){o.cleanup(),o.runLazy=!0,o.lazyOptions=t,o.onNewData()},o.getExecuteResult=function(){var t=o.getQueryResult();return o.startQuerySubscription(),t},o.obsRefetch=function(t){return o.currentObservable.query.refetch(t)},o.obsFetchMore=function(t){return o.currentObservable.query.fetchMore(t)},o.obsUpdateQuery=function(t){return o.currentObservable.query.updateQuery(t)},o.obsStartPolling=function(t){o.currentObservable&&o.currentObservable.query&&o.currentObservable.query.startPolling(t)},o.obsStopPolling=function(){o.currentObservable&&o.currentObservable.query&&o.currentObservable.query.stopPolling()},o.obsSubscribeToMore=function(t){return o.currentObservable.query.subscribeToMore(t)},o.onNewData=i,o}return Object(d.c)(e,t),e.prototype.execute=function(){this.refreshClient();var t=this.getOptions(),e=t.skip,r=t.query;return(e||r!==this.previousData.query)&&(this.removeQuerySubscription(),this.previousData.query=r),this.updateObservableQuery(),this.isMounted&&this.startQuerySubscription(),this.getExecuteSsrResult()||this.getExecuteResult()},e.prototype.executeLazy=function(){return this.runLazy?[this.runLazyQuery,this.execute()]:[this.runLazyQuery,{loading:!1,networkStatus:v.NetworkStatus.ready,called:!1,data:void 0}]},e.prototype.fetchData=function(){var t=this.getOptions();if(t.skip||!1===t.ssr)return!1;var e=this.currentObservable.query;return!!e.getCurrentResult().loading&&e.result()},e.prototype.afterExecute=function(t){var e=(void 0===t?{}:t).lazy,r=void 0!==e&&e;return this.isMounted=!0,r&&!this.runLazy||this.handleErrorOrCompleted(),this.previousOptions=this.getOptions(),this.unmount.bind(this)},e.prototype.cleanup=function(){this.removeQuerySubscription(),delete this.currentObservable.query,delete this.previousData.result},e.prototype.getOptions=function(){var e=t.prototype.getOptions.call(this);return this.lazyOptions&&(e.variables=Object(d.a)(Object(d.a)({},e.variables),this.lazyOptions.variables),e.context=Object(d.a)(Object(d.a)({},e.context),this.lazyOptions.context)),this.runLazy&&delete e.skip,e},e.prototype.ssrInitiated=function(){return this.context&&this.context.renderPromises},e.prototype.getExecuteSsrResult=function(){var t,e=!1===this.getOptions().ssr,r=this.refreshClient().client.disableNetworkFetches,n=Object(d.a)({loading:!0,networkStatus:v.NetworkStatus.loading,called:!0,data:void 0,stale:!1,client:this.client},this.observableQueryFields());return e&&(this.ssrInitiated()||r)?(this.previousData.result=n,n):(this.ssrInitiated()&&(t=this.context.renderPromises.addQueryPromise(this,this.getExecuteResult)||n),t)},e.prototype.prepareObservableQueryOptions=function(){var t=this.getOptions();this.verifyDocumentType(t.query,c.Query);var e=t.displayName||\"Query\";return!this.ssrInitiated()||\"network-only\"!==t.fetchPolicy&&\"cache-and-network\"!==t.fetchPolicy||(t.fetchPolicy=\"cache-first\"),Object(d.a)(Object(d.a)({},t),{displayName:e,context:t.context,metadata:{reactComponent:{displayName:e}}})},e.prototype.initializeObservableQuery=function(){var t,e;if(this.ssrInitiated()&&(this.currentObservable.query=this.context.renderPromises.getSSRObservable(this.getOptions())),!this.currentObservable.query){var r=this.prepareObservableQueryOptions();this.previousData.observableQueryOptions=Object(d.a)(Object(d.a)({},r),{children:null}),this.currentObservable.query=this.refreshClient().client.watchQuery(Object(d.a)({},r)),this.ssrInitiated()&&(null===(e=null===(t=this.context)||void 0===t?void 0:t.renderPromises)||void 0===e||e.registerSSRObservable(this.currentObservable.query,r))}},e.prototype.updateObservableQuery=function(){if(this.currentObservable.query){var t=Object(d.a)(Object(d.a)({},this.prepareObservableQueryOptions()),{children:null});Object(y.a)(t,this.previousData.observableQueryOptions)||(this.previousData.observableQueryOptions=t,this.currentObservable.query.setOptions(t).catch((function(){})))}else this.initializeObservableQuery()},e.prototype.startQuerySubscription=function(){var t=this;if(!this.currentObservable.subscription&&!this.getOptions().skip){var e=this.currentObservable.query;this.currentObservable.subscription=e.subscribe({next:function(e){var r=e.loading,n=e.networkStatus,i=e.data,o=t.previousData.result;o&&o.loading===r&&o.networkStatus===n&&Object(y.a)(o.data,i)||t.onNewData()},error:function(e){if(t.resubscribeToQuery(),!e.hasOwnProperty(\"graphQLErrors\"))throw e;var r=t.previousData.result;(r&&r.loading||!Object(y.a)(e,t.previousData.error))&&(t.previousData.error=e,t.onNewData())}})}},e.prototype.resubscribeToQuery=function(){this.removeQuerySubscription();var t=this.currentObservable.query.getLastError(),e=this.currentObservable.query.getLastResult();this.currentObservable.query.resetLastResults(),this.startQuerySubscription(),Object.assign(this.currentObservable.query,{lastError:t,lastResult:e})},e.prototype.getQueryResult=function(){var t=this.observableQueryFields(),e=this.getOptions();if(e.skip)t=Object(d.a)(Object(d.a)({},t),{data:void 0,error:void 0,loading:!1,called:!0});else{var r=this.currentObservable.query.getCurrentResult(),n=r.loading,i=r.partial,o=r.networkStatus,s=r.errors,a=r.error,u=r.data;if(s&&s.length>0&&(a=new v.ApolloError({graphQLErrors:s})),t=Object(d.a)(Object(d.a)({},t),{loading:n,networkStatus:o,error:a,called:!0}),n){var c=this.previousData.result&&this.previousData.result.data;t.data=c&&u?Object(d.a)(Object(d.a)({},c),u):c||u}else if(a)Object.assign(t,{data:(this.currentObservable.query.getLastResult()||{}).data});else{var l=this.currentObservable.query.options.fetchPolicy;if(e.partialRefetch&&!u&&i&&\"cache-only\"!==l)return Object.assign(t,{loading:!0,networkStatus:v.NetworkStatus.loading}),t.refetch(),t;t.data=u}}return t.client=this.client,this.previousData.loading=this.previousData.result&&this.previousData.result.loading||!1,this.previousData.result=t,this.currentObservable.query&&this.currentObservable.query.resetQueryStoreErrors(),t},e.prototype.handleErrorOrCompleted=function(){if(this.currentObservable.query&&this.previousData.result){var t=this.previousData.result,e=t.data,r=t.loading,n=t.error;if(!r){var i=this.getOptions(),o=i.query,s=i.variables,a=i.onCompleted,u=i.onError;if(this.previousOptions&&!this.previousData.loading&&Object(y.a)(this.previousOptions.query,o)&&Object(y.a)(this.previousOptions.variables,s))return;a&&!n?a(e):u&&n&&u(n)}}},e.prototype.removeQuerySubscription=function(){this.currentObservable.subscription&&(this.currentObservable.subscription.unsubscribe(),delete this.currentObservable.subscription)},e.prototype.observableQueryFields=function(){return{variables:this.currentObservable.query.variables,refetch:this.obsRefetch,fetchMore:this.obsFetchMore,updateQuery:this.obsUpdateQuery,startPolling:this.obsStartPolling,stopPolling:this.obsStopPolling,subscribeToMore:this.obsSubscribeToMore}},e}(A);function _(t,e,r){void 0===r&&(r=!1);var n=Object(i.useContext)(a()),o=Object(i.useReducer)((function(t){return t+1}),0),s=o[0],u=o[1],c=e?Object(d.a)(Object(d.a)({},e),{query:t}):{query:t},l=Object(i.useRef)(),p=l.current||new V({options:c,context:n,onNewData:function(){p.ssrInitiated()?u():Promise.resolve().then(u)}});p.setOptions(c),p.context=n,p.ssrInitiated()&&!l.current&&(l.current=p);var h=function(t,e){var r=Object(i.useRef)();return r.current&&Object(y.a)(e,r.current.key)||(r.current={key:e,value:t()}),r.current.value}((function(){return r?p.executeLazy():p.execute()}),{options:Object(d.a)(Object(d.a)({},c),{onError:void 0,onCompleted:void 0}),context:n,tick:s}),b=r?h[1]:h;return Object(i.useEffect)((function(){return l.current||(l.current=p),function(){return p.cleanup()}}),[]),Object(i.useEffect)((function(){return p.afterExecute({lazy:r})}),[b.loading,b.networkStatus,b.error,b.data]),h}function W(t,e){return _(t,e,!1)}function B(t,e){return _(t,e,!0)}var U=function(t){function e(e){var r=e.options,n=e.context,i=e.result,o=e.setResult,s=t.call(this,r,n)||this;return s.runMutation=function(t){void 0===t&&(t={}),s.onMutationStart();var e=s.generateNewMutationId();return s.mutate(t).then((function(t){return s.onMutationCompleted(t,e),t})).catch((function(t){if(s.onMutationError(t,e),!s.getOptions().onError)throw t}))},s.verifyDocumentType(r.mutation,c.Mutation),s.result=i,s.setResult=o,s.mostRecentMutationId=0,s}return Object(d.c)(e,t),e.prototype.execute=function(t){return this.isMounted=!0,this.verifyDocumentType(this.getOptions().mutation,c.Mutation),t.client=this.refreshClient().client,[this.runMutation,t]},e.prototype.afterExecute=function(){return this.isMounted=!0,this.unmount.bind(this)},e.prototype.cleanup=function(){},e.prototype.mutate=function(t){var e=this.getOptions(),r=e.mutation,n=e.variables,i=e.optimisticResponse,o=e.update,s=e.context,a=void 0===s?{}:s,u=e.awaitRefetchQueries,c=void 0!==u&&u,l=e.fetchPolicy,p=Object(d.a)({},t),h=Object.assign({},n,p.variables);return delete p.variables,this.refreshClient().client.mutate(Object(d.a)({mutation:r,optimisticResponse:i,refetchQueries:p.refetchQueries||this.getOptions().refetchQueries,awaitRefetchQueries:c,update:o,context:a,fetchPolicy:l,variables:h},p))},e.prototype.onMutationStart=function(){this.result.loading||this.getOptions().ignoreResults||this.updateResult({loading:!0,error:void 0,data:void 0,called:!0})},e.prototype.onMutationCompleted=function(t,e){var r=this.getOptions(),n=r.onCompleted,i=r.ignoreResults,o=t.data,s=t.errors,a=s&&s.length>0?new v.ApolloError({graphQLErrors:s}):void 0;this.isMostRecentMutation(e)&&!i&&this.updateResult({called:!0,loading:!1,data:o,error:a}),n&&n(o)},e.prototype.onMutationError=function(t,e){var r=this.getOptions().onError;this.isMostRecentMutation(e)&&this.updateResult({loading:!1,error:t,data:void 0,called:!0}),r&&r(t)},e.prototype.generateNewMutationId=function(){return++this.mostRecentMutationId},e.prototype.isMostRecentMutation=function(t){return this.mostRecentMutationId===t},e.prototype.updateResult=function(t){!this.isMounted||this.previousResult&&Object(y.a)(this.previousResult,t)||(this.setResult(t),this.previousResult=t)},e}(A);function G(t,e){var r=Object(i.useContext)(a()),n=Object(i.useState)({called:!1,loading:!1}),o=n[0],s=n[1],u=e?Object(d.a)(Object(d.a)({},e),{mutation:t}):{mutation:t},c=Object(i.useRef)();var l=(c.current||(c.current=new U({options:u,context:r,result:o,setResult:s})),c.current);return l.setOptions(u),l.context=r,Object(i.useEffect)((function(){return l.afterExecute()})),l.execute(o)}var J=function(t){function e(e){var r=e.options,n=e.context,i=e.setResult,o=t.call(this,r,n)||this;return o.currentObservable={},o.setResult=i,o.initialize(r),o}return Object(d.c)(e,t),e.prototype.execute=function(t){if(!0===this.getOptions().skip)return this.cleanup(),{loading:!1,error:void 0,data:void 0,variables:this.getOptions().variables};var e=t;this.refreshClient().isNew&&(e=this.getLoadingResult());var r=this.getOptions().shouldResubscribe;return\"function\"===typeof r&&(r=!!r(this.getOptions())),!1!==r&&this.previousOptions&&Object.keys(this.previousOptions).length>0&&(this.previousOptions.subscription!==this.getOptions().subscription||!Object(y.a)(this.previousOptions.variables,this.getOptions().variables)||this.previousOptions.skip!==this.getOptions().skip)&&(this.cleanup(),e=this.getLoadingResult()),this.initialize(this.getOptions()),this.startSubscription(),this.previousOptions=this.getOptions(),Object(d.a)(Object(d.a)({},e),{variables:this.getOptions().variables})},e.prototype.afterExecute=function(){this.isMounted=!0},e.prototype.cleanup=function(){this.endSubscription(),delete this.currentObservable.query},e.prototype.initialize=function(t){this.currentObservable.query||!0===this.getOptions().skip||(this.currentObservable.query=this.refreshClient().client.subscribe({query:t.subscription,variables:t.variables,fetchPolicy:t.fetchPolicy}))},e.prototype.startSubscription=function(){this.currentObservable.subscription||(this.currentObservable.subscription=this.currentObservable.query.subscribe({next:this.updateCurrentData.bind(this),error:this.updateError.bind(this),complete:this.completeSubscription.bind(this)}))},e.prototype.getLoadingResult=function(){return{loading:!0,error:void 0,data:void 0}},e.prototype.updateResult=function(t){this.isMounted&&this.setResult(t)},e.prototype.updateCurrentData=function(t){var e=this.getOptions().onSubscriptionData;this.updateResult({data:t.data,loading:!1,error:void 0}),e&&e({client:this.refreshClient().client,subscriptionData:t})},e.prototype.updateError=function(t){this.updateResult({error:t,loading:!1})},e.prototype.completeSubscription=function(){var t=this.getOptions().onSubscriptionComplete;t&&t(),this.endSubscription()},e.prototype.endSubscription=function(){this.currentObservable.subscription&&(this.currentObservable.subscription.unsubscribe(),delete this.currentObservable.subscription)},e}(A);function H(t,e){var r=Object(i.useContext)(a()),n=e?Object(d.a)(Object(d.a)({},e),{subscription:t}):{subscription:t},o=Object(i.useState)({loading:!n.skip,error:void 0,data:void 0}),s=o[0],u=o[1],c=Object(i.useRef)();var l=(c.current||(c.current=new J({options:n,context:r,setResult:u})),c.current);return l.setOptions(n,!0),l.context=r,Object(i.useEffect)((function(){return l.afterExecute()})),Object(i.useEffect)((function(){return l.cleanup.bind(l)}),[]),l.execute(s)}function K(){var t=o.a.useContext(a()).client;return Object(s.b)(t,1),t}var X=function(){function t(){this.queryPromises=new Map,this.queryInfoTrie=new Map}return t.prototype.registerSSRObservable=function(t,e){this.lookupQueryInfo(e).observable=t},t.prototype.getSSRObservable=function(t){return this.lookupQueryInfo(t).observable},t.prototype.addQueryPromise=function(t,e){return this.lookupQueryInfo(t.getOptions()).seen?e():(this.queryPromises.set(t.getOptions(),new Promise((function(e){e(t.fetchData())}))),null)},t.prototype.hasPromises=function(){return this.queryPromises.size>0},t.prototype.consumeAndAwaitPromises=function(){var t=this,e=[];return this.queryPromises.forEach((function(r,n){t.lookupQueryInfo(n).seen=!0,e.push(r)})),this.queryPromises.clear(),Promise.all(e)},t.prototype.lookupQueryInfo=function(t){var e=this.queryInfoTrie,r=t.query,n=t.variables,i=e.get(r)||new Map;e.has(r)||e.set(r,i);var o=JSON.stringify(n),s=i.get(o)||{seen:!1,observable:null};return i.has(o)||i.set(o,s),s},t}();function Y(t,e){return void 0===e&&(e={}),$({tree:t,context:e,renderFunction:r(\"KAy6\").renderToStaticMarkup})}function $(t){var e=t.tree,n=t.context,i=void 0===n?{}:n,s=t.renderFunction,u=void 0===s?r(\"KAy6\").renderToStaticMarkup:s,c=new X;return Promise.resolve().then((function t(){var r=a(),n=u(o.a.createElement(r.Provider,{value:Object(d.a)(Object(d.a)({},i),{renderPromises:c})},e));return c.hasPromises()?c.consumeAndAwaitPromises().then(t):n}))}function Z(t){return $({tree:t,renderFunction:r(\"KAy6\").renderToString})}},bCCX:function(t,e,r){\"use strict\";(function(t,n){var i,o=r(\"SLVX\");i=\"undefined\"!==typeof self?self:\"undefined\"!==typeof window?window:\"undefined\"!==typeof t?t:n;var s=Object(o.a)(i);e.a=s}).call(this,r(\"ntbh\"),r(\"Az8m\")(t))},dMq0:function(t,e,r){\"use strict\";r.r(e),r.d(e,\"ApolloClient\",(function(){return M})),r.d(e,\"ApolloError\",(function(){return y})),r.d(e,\"FetchType\",(function(){return v})),r.d(e,\"NetworkStatus\",(function(){return n})),r.d(e,\"ObservableQuery\",(function(){return O})),r.d(e,\"isApolloError\",(function(){return d}));var n,i=r(\"mrSG\"),o=r(\"RRgQ\"),s=r(\"qx2n\"),a=r(\"b0dj\"),u=r(\"1jQf\"),c=r(\"bCCX\"),l=r(\"qVdT\"),p=r(\"L2ys\");function h(t){return t<7}!function(t){t[t.loading=1]=\"loading\",t[t.setVariables=2]=\"setVariables\",t[t.fetchMore=3]=\"fetchMore\",t[t.refetch=4]=\"refetch\",t[t.poll=6]=\"poll\",t[t.ready=7]=\"ready\",t[t.error=8]=\"error\"}(n||(n={}));var b=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(i.c)(e,t),e.prototype[c.a]=function(){return this},e.prototype[\"@@observable\"]=function(){return this},e}(a.a);function f(t){return Array.isArray(t)&&t.length>0}function d(t){return t.hasOwnProperty(\"graphQLErrors\")}var v,y=function(t){function e(r){var n=r.graphQLErrors,i=r.networkError,o=r.errorMessage,s=r.extraInfo,a=t.call(this,o)||this;return a.graphQLErrors=n||[],a.networkError=i||null,a.message=o||function(t){var e=\"\";return f(t.graphQLErrors)&&t.graphQLErrors.forEach((function(t){var r=t?t.message:\"Error message not found.\";e+=\"GraphQL error: \"+r+\"\\n\"})),t.networkError&&(e+=\"Network error: \"+t.networkError.message+\"\\n\"),e=e.replace(/\\n$/,\"\")}(a),a.extraInfo=s,a.__proto__=e.prototype,a}return Object(i.c)(e,t),e}(Error);!function(t){t[t.normal=1]=\"normal\",t[t.refetch=2]=\"refetch\",t[t.poll=3]=\"poll\"}(v||(v={}));var O=function(t){function e(e){var r=e.queryManager,n=e.options,i=e.shouldSubscribe,s=void 0===i||i,a=t.call(this,(function(t){return a.onSubscribe(t)}))||this;a.observers=new Set,a.subscriptions=new Set,a.isTornDown=!1,a.options=n,a.variables=n.variables||{},a.queryId=r.generateQueryId(),a.shouldSubscribe=s;var u=Object(o.m)(n.query);return a.queryName=u&&u.name&&u.name.value,a.queryManager=r,a}return Object(i.c)(e,t),e.prototype.result=function(){var t=this;return new Promise((function(e,r){var n={next:function(r){e(r),t.observers.delete(n),t.observers.size||t.queryManager.removeQuery(t.queryId),setTimeout((function(){i.unsubscribe()}),0)},error:r},i=t.subscribe(n)}))},e.prototype.currentResult=function(){var t=this.getCurrentResult();return void 0===t.data&&(t.data={}),t},e.prototype.getCurrentResult=function(){if(this.isTornDown){var t=this.lastResult;return{data:!this.lastError&&t&&t.data||void 0,error:this.lastError,loading:!1,networkStatus:n.error}}var e,r,o,s=this.queryManager.getCurrentQueryResult(this),a=s.data,u=s.partial,c=this.queryManager.queryStore.get(this.queryId),l=this.options.fetchPolicy,p=\"network-only\"===l||\"no-cache\"===l;if(c){var b=c.networkStatus;if(r=c,void 0===(o=this.options.errorPolicy)&&(o=\"none\"),r&&(r.networkError||\"none\"===o&&f(r.graphQLErrors)))return{data:void 0,loading:!1,networkStatus:b,error:new y({graphQLErrors:c.graphQLErrors,networkError:c.networkError})};c.variables&&(this.options.variables=Object(i.a)(Object(i.a)({},this.options.variables),c.variables),this.variables=this.options.variables),e={data:a,loading:h(b),networkStatus:b},c.graphQLErrors&&\"all\"===this.options.errorPolicy&&(e.errors=c.graphQLErrors)}else{var d=p||u&&\"cache-only\"!==l;e={data:a,loading:d,networkStatus:d?n.loading:n.ready}}return u||this.updateLastResult(Object(i.a)(Object(i.a)({},e),{stale:!1})),Object(i.a)(Object(i.a)({},e),{partial:u})},e.prototype.isDifferentFromLastResult=function(t){var e=this.lastResultSnapshot;return!(e&&t&&e.networkStatus===t.networkStatus&&e.stale===t.stale&&Object(s.a)(e.data,t.data))},e.prototype.getLastResult=function(){return this.lastResult},e.prototype.getLastError=function(){return this.lastError},e.prototype.resetLastResults=function(){delete this.lastResult,delete this.lastResultSnapshot,delete this.lastError,this.isTornDown=!1},e.prototype.resetQueryStoreErrors=function(){var t=this.queryManager.queryStore.get(this.queryId);t&&(t.networkError=null,t.graphQLErrors=[])},e.prototype.refetch=function(t){var e=this.options.fetchPolicy;return\"cache-only\"===e?Promise.reject(new l.a(1)):(\"no-cache\"!==e&&\"cache-and-network\"!==e&&(e=\"network-only\"),Object(s.a)(this.variables,t)||(this.variables=Object(i.a)(Object(i.a)({},this.variables),t)),Object(s.a)(this.options.variables,this.variables)||(this.options.variables=Object(i.a)(Object(i.a)({},this.options.variables),this.variables)),this.queryManager.fetchQuery(this.queryId,Object(i.a)(Object(i.a)({},this.options),{fetchPolicy:e}),v.refetch))},e.prototype.fetchMore=function(t){var e=this;Object(l.b)(t.updateQuery,2);var r=Object(i.a)(Object(i.a)({},t.query?t:Object(i.a)(Object(i.a)(Object(i.a)({},this.options),t),{variables:Object(i.a)(Object(i.a)({},this.variables),t.variables)})),{fetchPolicy:\"network-only\"}),n=this.queryManager.generateQueryId();return this.queryManager.fetchQuery(n,r,v.normal,this.queryId).then((function(i){return e.updateQuery((function(e){return t.updateQuery(e,{fetchMoreResult:i.data,variables:r.variables})})),e.queryManager.stopQuery(n),i}),(function(t){throw e.queryManager.stopQuery(n),t}))},e.prototype.subscribeToMore=function(t){var e=this,r=this.queryManager.startGraphQLSubscription({query:t.document,variables:t.variables}).subscribe({next:function(r){var n=t.updateQuery;n&&e.updateQuery((function(t,e){var i=e.variables;return n(t,{subscriptionData:r,variables:i})}))},error:function(e){t.onError&&t.onError(e)}});return this.subscriptions.add(r),function(){e.subscriptions.delete(r)&&r.unsubscribe()}},e.prototype.setOptions=function(t){var e=this.options.fetchPolicy;this.options=Object(i.a)(Object(i.a)({},this.options),t),t.pollInterval?this.startPolling(t.pollInterval):0===t.pollInterval&&this.stopPolling();var r=t.fetchPolicy;return this.setVariables(this.options.variables,e!==r&&(\"cache-only\"===e||\"standby\"===e||\"network-only\"===r),t.fetchResults)},e.prototype.setVariables=function(t,e,r){return void 0===e&&(e=!1),void 0===r&&(r=!0),this.isTornDown=!1,t=t||this.variables,!e&&Object(s.a)(t,this.variables)?this.observers.size&&r?this.result():Promise.resolve():(this.variables=this.options.variables=t,this.observers.size?this.queryManager.fetchQuery(this.queryId,this.options):Promise.resolve())},e.prototype.updateQuery=function(t){var e=this.queryManager,r=e.getQueryWithPreviousResult(this.queryId),n=r.previousResult,i=r.variables,s=r.document,a=Object(o.I)((function(){return t(n,{variables:i})}));a&&(e.dataStore.markUpdateQueryResult(s,i,a),e.broadcastQueries())},e.prototype.stopPolling=function(){this.queryManager.stopPollingQuery(this.queryId),this.options.pollInterval=void 0},e.prototype.startPolling=function(t){Q(this),this.options.pollInterval=t,this.queryManager.startPollingQuery(this.options,this.queryId)},e.prototype.updateLastResult=function(t){var e=this.lastResult;return this.lastResult=t,this.lastResultSnapshot=this.queryManager.assumeImmutableResults?t:Object(o.f)(t),e},e.prototype.onSubscribe=function(t){var e=this;try{var r=t._subscription._observer;r&&!r.error&&(r.error=g)}catch(i){}var n=!this.observers.size;return this.observers.add(t),t.next&&this.lastResult&&t.next(this.lastResult),t.error&&this.lastError&&t.error(this.lastError),n&&this.setUpQuery(),function(){e.observers.delete(t)&&!e.observers.size&&e.tearDownQuery()}},e.prototype.setUpQuery=function(){var t=this,e=this.queryManager,r=this.queryId;this.shouldSubscribe&&e.addObservableQuery(r,this),this.options.pollInterval&&(Q(this),e.startPollingQuery(this.options,r));var o=function(e){t.updateLastResult(Object(i.a)(Object(i.a)({},t.lastResult),{errors:e.graphQLErrors,networkStatus:n.error,loading:!1})),m(t.observers,\"error\",t.lastError=e)};e.observeQuery(r,this.options,{next:function(r){if(t.lastError||t.isDifferentFromLastResult(r)){var n=t.updateLastResult(r),i=t.options,o=i.query,a=i.variables,u=i.fetchPolicy;e.transform(o).hasClientExports?e.getLocalState().addExportedVariables(o,a).then((function(i){var a=t.variables;t.variables=t.options.variables=i,!r.loading&&n&&\"cache-only\"!==u&&e.transform(o).serverQuery&&!Object(s.a)(a,i)?t.refetch():m(t.observers,\"next\",r)})):m(t.observers,\"next\",r)}},error:o}).catch(o)},e.prototype.tearDownQuery=function(){var t=this.queryManager;this.isTornDown=!0,t.stopPollingQuery(this.queryId),this.subscriptions.forEach((function(t){return t.unsubscribe()})),this.subscriptions.clear(),t.removeObservableQuery(this.queryId),t.stopQuery(this.queryId),this.observers.clear()},e}(b);function g(t){}function m(t,e,r){var n=[];t.forEach((function(t){return t[e]&&n.push(t)})),n.forEach((function(t){return t[e](r)}))}function Q(t){var e=t.options.fetchPolicy;Object(l.b)(\"cache-first\"!==e&&\"cache-only\"!==e,3)}var j=function(){function t(){this.store={}}return t.prototype.getStore=function(){return this.store},t.prototype.get=function(t){return this.store[t]},t.prototype.initMutation=function(t,e,r){this.store[t]={mutation:e,variables:r||{},loading:!0,error:null}},t.prototype.markMutationError=function(t,e){var r=this.store[t];r&&(r.loading=!1,r.error=e)},t.prototype.markMutationResult=function(t){var e=this.store[t];e&&(e.loading=!1,e.error=null)},t.prototype.reset=function(){this.store={}},t}(),S=function(){function t(){this.store={}}return t.prototype.getStore=function(){return this.store},t.prototype.get=function(t){return this.store[t]},t.prototype.initQuery=function(t){var e=this.store[t.queryId];Object(l.b)(!e||e.document===t.document||Object(s.a)(e.document,t.document),19);var r,i=!1,o=null;t.storePreviousVariables&&e&&e.networkStatus!==n.loading&&(Object(s.a)(e.variables,t.variables)||(i=!0,o=e.variables)),r=i?n.setVariables:t.isPoll?n.poll:t.isRefetch?n.refetch:n.loading;var a=[];e&&e.graphQLErrors&&(a=e.graphQLErrors),this.store[t.queryId]={document:t.document,variables:t.variables,previousVariables:o,networkError:null,graphQLErrors:a,networkStatus:r,metadata:t.metadata},\"string\"===typeof t.fetchMoreForQueryId&&this.store[t.fetchMoreForQueryId]&&(this.store[t.fetchMoreForQueryId].networkStatus=n.fetchMore)},t.prototype.markQueryResult=function(t,e,r){this.store&&this.store[t]&&(this.store[t].networkError=null,this.store[t].graphQLErrors=f(e.errors)?e.errors:[],this.store[t].previousVariables=null,this.store[t].networkStatus=n.ready,\"string\"===typeof r&&this.store[r]&&(this.store[r].networkStatus=n.ready))},t.prototype.markQueryError=function(t,e,r){this.store&&this.store[t]&&(this.store[t].networkError=e,this.store[t].networkStatus=n.error,\"string\"===typeof r&&this.markQueryResultClient(r,!0))},t.prototype.markQueryResultClient=function(t,e){var r=this.store&&this.store[t];r&&(r.networkError=null,r.previousVariables=null,e&&(r.networkStatus=n.ready))},t.prototype.stopQuery=function(t){delete this.store[t]},t.prototype.reset=function(t){var e=this;Object.keys(this.store).forEach((function(r){t.indexOf(r)<0?e.stopQuery(r):e.store[r].networkStatus=n.loading}))},t}();var w=function(){function t(t){var e=t.cache,r=t.client,n=t.resolvers,i=t.fragmentMatcher;this.cache=e,r&&(this.client=r),n&&this.addResolvers(n),i&&this.setFragmentMatcher(i)}return t.prototype.addResolvers=function(t){var e=this;this.resolvers=this.resolvers||{},Array.isArray(t)?t.forEach((function(t){e.resolvers=Object(o.A)(e.resolvers,t)})):this.resolvers=Object(o.A)(this.resolvers,t)},t.prototype.setResolvers=function(t){this.resolvers={},this.addResolvers(t)},t.prototype.getResolvers=function(){return this.resolvers||{}},t.prototype.runResolvers=function(t){var e=t.document,r=t.remoteResult,n=t.context,o=t.variables,s=t.onlyRunForcedResolvers,a=void 0!==s&&s;return Object(i.b)(this,void 0,void 0,(function(){return Object(i.d)(this,(function(t){return e?[2,this.resolveDocument(e,r.data,n,o,this.fragmentMatcher,a).then((function(t){return Object(i.a)(Object(i.a)({},r),{data:t.result})}))]:[2,r]}))}))},t.prototype.setFragmentMatcher=function(t){this.fragmentMatcher=t},t.prototype.getFragmentMatcher=function(){return this.fragmentMatcher},t.prototype.clientQuery=function(t){return Object(o.s)([\"client\"],t)&&this.resolvers?t:null},t.prototype.serverQuery=function(t){return this.resolvers?Object(o.C)(t):t},t.prototype.prepareContext=function(t){void 0===t&&(t={});var e=this.cache;return Object(i.a)(Object(i.a)({},t),{cache:e,getCacheKey:function(t){if(e.config)return e.config.dataIdFromObject(t);Object(l.b)(!1,6)}})},t.prototype.addExportedVariables=function(t,e,r){return void 0===e&&(e={}),void 0===r&&(r={}),Object(i.b)(this,void 0,void 0,(function(){return Object(i.d)(this,(function(n){return t?[2,this.resolveDocument(t,this.buildRootValueFromCache(t,e)||{},this.prepareContext(r),e).then((function(t){return Object(i.a)(Object(i.a)({},e),t.exportedVariables)}))]:[2,Object(i.a)({},e)]}))}))},t.prototype.shouldForceResolvers=function(t){var e=!1;return Object(p.b)(t,{Directive:{enter:function(t){if(\"client\"===t.name.value&&t.arguments&&(e=t.arguments.some((function(t){return\"always\"===t.name.value&&\"BooleanValue\"===t.value.kind&&!0===t.value.value}))))return p.a}}}),e},t.prototype.buildRootValueFromCache=function(t,e){return this.cache.diff({query:Object(o.d)(t),variables:e,returnPartialData:!0,optimistic:!1}).result},t.prototype.resolveDocument=function(t,e,r,n,s,a){return void 0===r&&(r={}),void 0===n&&(n={}),void 0===s&&(s=function(){return!0}),void 0===a&&(a=!1),Object(i.b)(this,void 0,void 0,(function(){var u,c,l,p,h,b,f,d,v;return Object(i.d)(this,(function(y){var O;return u=Object(o.l)(t),c=Object(o.j)(t),l=Object(o.g)(c),p=u.operation,h=p?(O=p).charAt(0).toUpperCase()+O.slice(1):\"Query\",f=(b=this).cache,d=b.client,v={fragmentMap:l,context:Object(i.a)(Object(i.a)({},r),{cache:f,client:d}),variables:n,fragmentMatcher:s,defaultOperationType:h,exportedVariables:{},onlyRunForcedResolvers:a},[2,this.resolveSelectionSet(u.selectionSet,e,v).then((function(t){return{result:t,exportedVariables:v.exportedVariables}}))]}))}))},t.prototype.resolveSelectionSet=function(t,e,r){return Object(i.b)(this,void 0,void 0,(function(){var n,s,a,u,c,p=this;return Object(i.d)(this,(function(h){return n=r.fragmentMap,s=r.context,a=r.variables,u=[e],c=function(t){return Object(i.b)(p,void 0,void 0,(function(){var c,p;return Object(i.d)(this,(function(i){return Object(o.F)(t,a)?Object(o.t)(t)?[2,this.resolveField(t,e,r).then((function(e){var r;\"undefined\"!==typeof e&&u.push(((r={})[Object(o.E)(t)]=e,r))}))]:(Object(o.v)(t)?c=t:(c=n[t.name.value],Object(l.b)(c,7)),c&&c.typeCondition&&(p=c.typeCondition.name.value,r.fragmentMatcher(e,p,s))?[2,this.resolveSelectionSet(c.selectionSet,e,r).then((function(t){u.push(t)}))]:[2]):[2]}))}))},[2,Promise.all(t.selections.map(c)).then((function(){return Object(o.B)(u)}))]}))}))},t.prototype.resolveField=function(t,e,r){return Object(i.b)(this,void 0,void 0,(function(){var n,s,a,u,c,l,p,h,b,f=this;return Object(i.d)(this,(function(i){return n=r.variables,s=t.name.value,a=Object(o.E)(t),u=s!==a,c=e[a]||e[s],l=Promise.resolve(c),r.onlyRunForcedResolvers&&!this.shouldForceResolvers(t)||(p=e.__typename||r.defaultOperationType,(h=this.resolvers&&this.resolvers[p])&&(b=h[u?s:a])&&(l=Promise.resolve(b(e,Object(o.b)(t,n),r.context,{field:t,fragmentMap:r.fragmentMap})))),[2,l.then((function(e){return void 0===e&&(e=c),t.directives&&t.directives.forEach((function(t){\"export\"===t.name.value&&t.arguments&&t.arguments.forEach((function(t){\"as\"===t.name.value&&\"StringValue\"===t.value.kind&&(r.exportedVariables[t.value.value]=e)}))})),t.selectionSet?null==e?e:Array.isArray(e)?f.resolveSubSelectedArray(t,e,r):t.selectionSet?f.resolveSelectionSet(t.selectionSet,e,r):void 0:e}))]}))}))},t.prototype.resolveSubSelectedArray=function(t,e,r){var n=this;return Promise.all(e.map((function(e){return null===e?null:Array.isArray(e)?n.resolveSubSelectedArray(t,e,r):t.selectionSet?n.resolveSelectionSet(t.selectionSet,e,r):void 0})))},t}();function R(t){var e=new Set,r=null;return new b((function(n){return e.add(n),r=r||t.subscribe({next:function(t){e.forEach((function(e){return e.next&&e.next(t)}))},error:function(t){e.forEach((function(e){return e.error&&e.error(t)}))},complete:function(){e.forEach((function(t){return t.complete&&t.complete()}))}}),function(){e.delete(n)&&!e.size&&r&&(r.unsubscribe(),r=null)}}))}var q=Object.prototype.hasOwnProperty,k=function(){function t(t){var e=t.link,r=t.queryDeduplication,n=void 0!==r&&r,i=t.store,s=t.onBroadcast,a=void 0===s?function(){}:s,u=t.ssrMode,c=void 0!==u&&u,l=t.clientAwareness,p=void 0===l?{}:l,h=t.localState,b=t.assumeImmutableResults;this.mutationStore=new j,this.queryStore=new S,this.clientAwareness={},this.idCounter=1,this.queries=new Map,this.fetchQueryRejectFns=new Map,this.transformCache=new(o.e?WeakMap:Map),this.inFlightLinkObservables=new Map,this.pollingInfoByQueryId=new Map,this.link=e,this.queryDeduplication=n,this.dataStore=i,this.onBroadcast=a,this.clientAwareness=p,this.localState=h||new w({cache:i.getCache()}),this.ssrMode=c,this.assumeImmutableResults=!!b}return t.prototype.stop=function(){var t=this;this.queries.forEach((function(e,r){t.stopQueryNoBroadcast(r)})),this.fetchQueryRejectFns.forEach((function(t){t(new l.a(8))}))},t.prototype.mutate=function(t){var e=t.mutation,r=t.variables,n=t.optimisticResponse,s=t.updateQueries,a=t.refetchQueries,u=void 0===a?[]:a,c=t.awaitRefetchQueries,p=void 0!==c&&c,h=t.update,b=t.errorPolicy,d=void 0===b?\"none\":b,v=t.fetchPolicy,O=t.context,g=void 0===O?{}:O;return Object(i.b)(this,void 0,void 0,(function(){var t,a,c,b=this;return Object(i.d)(this,(function(O){switch(O.label){case 0:return Object(l.b)(e,9),Object(l.b)(!v||\"no-cache\"===v,10),t=this.generateQueryId(),e=this.transform(e).document,this.setQuery(t,(function(){return{document:e}})),r=this.getVariables(e,r),this.transform(e).hasClientExports?[4,this.localState.addExportedVariables(e,r,g)]:[3,2];case 1:r=O.sent(),O.label=2;case 2:return a=function(){var t={};return s&&b.queries.forEach((function(e,r){var n=e.observableQuery;if(n){var i=n.queryName;i&&q.call(s,i)&&(t[r]={updater:s[i],query:b.queryStore.get(r)})}})),t},this.mutationStore.initMutation(t,e,r),this.dataStore.markMutationInit({mutationId:t,document:e,variables:r,updateQueries:a(),update:h,optimisticResponse:n}),this.broadcastQueries(),c=this,[2,new Promise((function(s,l){var b,O;c.getObservableFromLink(e,Object(i.a)(Object(i.a)({},g),{optimisticResponse:n}),r,!1).subscribe({next:function(n){Object(o.q)(n)&&\"none\"===d?O=new y({graphQLErrors:n.errors}):(c.mutationStore.markMutationResult(t),\"no-cache\"!==v&&c.dataStore.markMutationResult({mutationId:t,result:n,document:e,variables:r,updateQueries:a(),update:h}),b=n)},error:function(e){c.mutationStore.markMutationError(t,e),c.dataStore.markMutationComplete({mutationId:t,optimisticResponse:n}),c.broadcastQueries(),c.setQuery(t,(function(){return{document:null}})),l(new y({networkError:e}))},complete:function(){if(O&&c.mutationStore.markMutationError(t,O),c.dataStore.markMutationComplete({mutationId:t,optimisticResponse:n}),c.broadcastQueries(),O)l(O);else{\"function\"===typeof u&&(u=u(b));var e=[];f(u)&&u.forEach((function(t){if(\"string\"===typeof t)c.queries.forEach((function(r){var n=r.observableQuery;n&&n.queryName===t&&e.push(n.refetch())}));else{var r={query:t.query,variables:t.variables,fetchPolicy:\"network-only\"};t.context&&(r.context=t.context),e.push(c.query(r))}})),Promise.all(p?e:[]).then((function(){c.setQuery(t,(function(){return{document:null}})),\"ignore\"===d&&b&&Object(o.q)(b)&&delete b.errors,s(b)}))}}})}))]}}))}))},t.prototype.fetchQuery=function(t,e,r,n){return Object(i.b)(this,void 0,void 0,(function(){var s,a,u,c,l,p,h,b,f,O,g,m,Q,j,S,w,R,q,k=this;return Object(i.d)(this,(function(E){switch(E.label){case 0:return s=e.metadata,a=void 0===s?null:s,u=e.fetchPolicy,c=void 0===u?\"cache-first\":u,l=e.context,p=void 0===l?{}:l,h=this.transform(e.query).document,b=this.getVariables(h,e.variables),this.transform(h).hasClientExports?[4,this.localState.addExportedVariables(h,b,p)]:[3,2];case 1:b=E.sent(),E.label=2;case 2:if(e=Object(i.a)(Object(i.a)({},e),{variables:b}),g=O=\"network-only\"===c||\"no-cache\"===c,O||(m=this.dataStore.getCache().diff({query:h,variables:b,returnPartialData:!0,optimistic:!1}),Q=m.complete,j=m.result,g=!Q||\"cache-and-network\"===c,f=j),S=g&&\"cache-only\"!==c&&\"standby\"!==c,Object(o.s)([\"live\"],h)&&(S=!0),w=this.idCounter++,R=\"no-cache\"!==c?this.updateQueryWatch(t,h,e):void 0,this.setQuery(t,(function(){return{document:h,lastRequestId:w,invalidated:!0,cancel:R}})),this.invalidate(n),this.queryStore.initQuery({queryId:t,document:h,storePreviousVariables:S,variables:b,isPoll:r===v.poll,isRefetch:r===v.refetch,metadata:a,fetchMoreForQueryId:n}),this.broadcastQueries(),S){if(q=this.fetchRequest({requestId:w,queryId:t,document:h,options:e,fetchMoreForQueryId:n}).catch((function(e){throw d(e)?e:(w>=k.getQuery(t).lastRequestId&&(k.queryStore.markQueryError(t,e,n),k.invalidate(t),k.invalidate(n),k.broadcastQueries()),new y({networkError:e}))})),\"cache-and-network\"!==c)return[2,q];q.catch((function(){}))}return this.queryStore.markQueryResultClient(t,!S),this.invalidate(t),this.invalidate(n),this.transform(h).hasForcedResolvers?[2,this.localState.runResolvers({document:h,remoteResult:{data:f},context:p,variables:b,onlyRunForcedResolvers:!0}).then((function(r){return k.markQueryResult(t,r,e,n),k.broadcastQueries(),r}))]:(this.broadcastQueries(),[2,{data:f}])}}))}))},t.prototype.markQueryResult=function(t,e,r,n){var i=r.fetchPolicy,o=r.variables,s=r.errorPolicy;\"no-cache\"===i?this.setQuery(t,(function(){return{newData:{result:e.data,complete:!0}}})):this.dataStore.markQueryResult(e,this.getQuery(t).document,o,n,\"ignore\"===s||\"all\"===s)},t.prototype.queryListenerForObserver=function(t,e,r){var n=this;function i(t,e){if(r[t])try{r[t](e)}catch(n){}}return function(r,o){if(n.invalidate(t,!1),r){var s=n.getQuery(t),a=s.observableQuery,u=s.document,c=a?a.options.fetchPolicy:e.fetchPolicy;if(\"standby\"!==c){var l=h(r.networkStatus),p=a&&a.getLastResult(),b=!(!p||p.networkStatus===r.networkStatus),d=e.returnPartialData||!o&&r.previousVariables||b&&e.notifyOnNetworkStatusChange||\"cache-only\"===c||\"cache-and-network\"===c;if(!l||d){var v=f(r.graphQLErrors),O=a&&a.options.errorPolicy||e.errorPolicy||\"none\";if(\"none\"===O&&v||r.networkError)return i(\"error\",new y({graphQLErrors:r.graphQLErrors,networkError:r.networkError}));try{var g=void 0,m=void 0;if(o)\"no-cache\"!==c&&\"network-only\"!==c&&n.setQuery(t,(function(){return{newData:null}})),g=o.result,m=!o.complete;else{var Q=a&&a.getLastError(),j=\"none\"!==O&&(Q&&Q.graphQLErrors)!==r.graphQLErrors;if(p&&p.data&&!j)g=p.data,m=!1;else{var S=n.dataStore.getCache().diff({query:u,variables:r.previousVariables||r.variables,returnPartialData:!0,optimistic:!0});g=S.result,m=!S.complete}}var w=m&&!(e.returnPartialData||\"cache-only\"===c),R={data:w?p&&p.data:g,loading:l,networkStatus:r.networkStatus,stale:w};\"all\"===O&&v&&(R.errors=r.graphQLErrors),i(\"next\",R)}catch(q){i(\"error\",new y({networkError:q}))}}}}}},t.prototype.transform=function(t){var e=this.transformCache;if(!e.has(t)){var r=this.dataStore.getCache(),n=r.transformDocument(t),i=Object(o.D)(r.transformForLink(n)),s=this.localState.clientQuery(n),a=this.localState.serverQuery(i),u={document:n,hasClientExports:Object(o.r)(n),hasForcedResolvers:this.localState.shouldForceResolvers(n),clientQuery:s,serverQuery:a,defaultVars:Object(o.h)(Object(o.m)(n))},c=function(t){t&&!e.has(t)&&e.set(t,u)};c(t),c(n),c(s),c(a)}return e.get(t)},t.prototype.getVariables=function(t,e){return Object(i.a)(Object(i.a)({},this.transform(t).defaultVars),e)},t.prototype.watchQuery=function(t,e){void 0===e&&(e=!0),Object(l.b)(\"standby\"!==t.fetchPolicy,11),t.variables=this.getVariables(t.query,t.variables),\"undefined\"===typeof t.notifyOnNetworkStatusChange&&(t.notifyOnNetworkStatusChange=!1);var r=Object(i.a)({},t);return new O({queryManager:this,options:r,shouldSubscribe:e})},t.prototype.query=function(t){var e=this;return Object(l.b)(t.query,12),Object(l.b)(\"Document\"===t.query.kind,13),Object(l.b)(!t.returnPartialData,14),Object(l.b)(!t.pollInterval,15),new Promise((function(r,n){var i=e.watchQuery(t,!1);e.fetchQueryRejectFns.set(\"query:\"+i.queryId,n),i.result().then(r,n).then((function(){return e.fetchQueryRejectFns.delete(\"query:\"+i.queryId)}))}))},t.prototype.generateQueryId=function(){return String(this.idCounter++)},t.prototype.stopQueryInStore=function(t){this.stopQueryInStoreNoBroadcast(t),this.broadcastQueries()},t.prototype.stopQueryInStoreNoBroadcast=function(t){this.stopPollingQuery(t),this.queryStore.stopQuery(t),this.invalidate(t)},t.prototype.addQueryListener=function(t,e){this.setQuery(t,(function(t){return t.listeners.add(e),{invalidated:!1}}))},t.prototype.updateQueryWatch=function(t,e,r){var n=this,i=this.getQuery(t).cancel;i&&i();return this.dataStore.getCache().watch({query:e,variables:r.variables,optimistic:!0,previousResult:function(){var e=null,r=n.getQuery(t).observableQuery;if(r){var i=r.getLastResult();i&&(e=i.data)}return e},callback:function(e){n.setQuery(t,(function(){return{invalidated:!0,newData:e}}))}})},t.prototype.addObservableQuery=function(t,e){this.setQuery(t,(function(){return{observableQuery:e}}))},t.prototype.removeObservableQuery=function(t){var e=this.getQuery(t).cancel;this.setQuery(t,(function(){return{observableQuery:null}})),e&&e()},t.prototype.clearStore=function(){this.fetchQueryRejectFns.forEach((function(t){t(new l.a(16))}));var t=[];return this.queries.forEach((function(e,r){e.observableQuery&&t.push(r)})),this.queryStore.reset(t),this.mutationStore.reset(),this.dataStore.reset()},t.prototype.resetStore=function(){var t=this;return this.clearStore().then((function(){return t.reFetchObservableQueries()}))},t.prototype.reFetchObservableQueries=function(t){var e=this;void 0===t&&(t=!1);var r=[];return this.queries.forEach((function(n,i){var o=n.observableQuery;if(o){var s=o.options.fetchPolicy;o.resetLastResults(),\"cache-only\"===s||!t&&\"standby\"===s||r.push(o.refetch()),e.setQuery(i,(function(){return{newData:null}})),e.invalidate(i)}})),this.broadcastQueries(),Promise.all(r)},t.prototype.observeQuery=function(t,e,r){return this.addQueryListener(t,this.queryListenerForObserver(t,e,r)),this.fetchQuery(t,e)},t.prototype.startQuery=function(t,e,r){return this.addQueryListener(t,r),this.fetchQuery(t,e).catch((function(){})),t},t.prototype.startGraphQLSubscription=function(t){var e=this,r=t.query,n=t.fetchPolicy,i=t.variables;r=this.transform(r).document,i=this.getVariables(r,i);var s=function(t){return e.getObservableFromLink(r,{},t,!1).map((function(i){if(n&&\"no-cache\"===n||(e.dataStore.markSubscriptionResult(i,r,t),e.broadcastQueries()),Object(o.q)(i))throw new y({graphQLErrors:i.errors});return i}))};if(this.transform(r).hasClientExports){var a=this.localState.addExportedVariables(r,i).then(s);return new b((function(t){var e=null;return a.then((function(r){return e=r.subscribe(t)}),t.error),function(){return e&&e.unsubscribe()}}))}return s(i)},t.prototype.stopQuery=function(t){this.stopQueryNoBroadcast(t),this.broadcastQueries()},t.prototype.stopQueryNoBroadcast=function(t){this.stopQueryInStoreNoBroadcast(t),this.removeQuery(t)},t.prototype.removeQuery=function(t){this.fetchQueryRejectFns.delete(\"query:\"+t),this.fetchQueryRejectFns.delete(\"fetchRequest:\"+t),this.getQuery(t).subscriptions.forEach((function(t){return t.unsubscribe()})),this.queries.delete(t)},t.prototype.getCurrentQueryResult=function(t,e){void 0===e&&(e=!0);var r=t.options,n=r.variables,i=r.query,o=r.fetchPolicy,s=r.returnPartialData,a=t.getLastResult(),u=this.getQuery(t.queryId).newData;if(u&&u.complete)return{data:u.result,partial:!1};if(\"no-cache\"===o||\"network-only\"===o)return{data:void 0,partial:!1};var c=this.dataStore.getCache().diff({query:i,variables:n,previousResult:a?a.data:void 0,returnPartialData:!0,optimistic:e}),l=c.result,p=c.complete;return{data:p||s?l:void 0,partial:!p}},t.prototype.getQueryWithPreviousResult=function(t){var e;if(\"string\"===typeof t){var r=this.getQuery(t).observableQuery;Object(l.b)(r,17),e=r}else e=t;var n=e.options,i=n.variables,o=n.query;return{previousResult:this.getCurrentQueryResult(e,!1).data,variables:i,document:o}},t.prototype.broadcastQueries=function(){var t=this;this.onBroadcast(),this.queries.forEach((function(e,r){e.invalidated&&e.listeners.forEach((function(n){n&&n(t.queryStore.get(r),e.newData)}))}))},t.prototype.getLocalState=function(){return this.localState},t.prototype.getObservableFromLink=function(t,e,r,n){var s,a=this;void 0===n&&(n=this.queryDeduplication);var c=this.transform(t).serverQuery;if(c){var l=this.inFlightLinkObservables,p=this.link,h={query:c,variables:r,operationName:Object(o.n)(c)||void 0,context:this.prepareContext(Object(i.a)(Object(i.a)({},e),{forceFetch:!n}))};if(e=h.context,n){var f=l.get(c)||new Map;l.set(c,f);var d=JSON.stringify(r);if(!(s=f.get(d))){f.set(d,s=R(Object(u.execute)(p,h)));var v=function(){f.delete(d),f.size||l.delete(c),y.unsubscribe()},y=s.subscribe({next:v,error:v,complete:v})}}else s=R(Object(u.execute)(p,h))}else s=b.of({data:{}}),e=this.prepareContext(e);var O=this.transform(t).clientQuery;return O&&(s=function(t,e){return new b((function(r){var n=r.next,i=r.error,o=r.complete,s=0,a=!1,u={next:function(t){++s,new Promise((function(r){r(e(t))})).then((function(t){--s,n&&n.call(r,t),a&&u.complete()}),(function(t){--s,i&&i.call(r,t)}))},error:function(t){i&&i.call(r,t)},complete:function(){a=!0,s||o&&o.call(r)}},c=t.subscribe(u);return function(){return c.unsubscribe()}}))}(s,(function(t){return a.localState.runResolvers({document:O,remoteResult:t,context:e,variables:r})}))),s},t.prototype.fetchRequest=function(t){var e,r,i=this,o=t.requestId,s=t.queryId,a=t.document,u=t.options,c=t.fetchMoreForQueryId,l=u.variables,p=u.errorPolicy,h=void 0===p?\"none\":p,b=u.fetchPolicy;return new Promise((function(t,p){var d=i.getObservableFromLink(a,u.context,l),v=\"fetchRequest:\"+s;i.fetchQueryRejectFns.set(v,p);var O=function(){i.fetchQueryRejectFns.delete(v),i.setQuery(s,(function(t){t.subscriptions.delete(g)}))},g=d.map((function(t){if(o>=i.getQuery(s).lastRequestId&&(i.markQueryResult(s,t,u,c),i.queryStore.markQueryResult(s,t,c),i.invalidate(s),i.invalidate(c),i.broadcastQueries()),\"none\"===h&&f(t.errors))return p(new y({graphQLErrors:t.errors}));if(\"all\"===h&&(r=t.errors),c||\"no-cache\"===b)e=t.data;else{var n=i.dataStore.getCache().diff({variables:l,query:a,optimistic:!1,returnPartialData:!0}),d=n.result;(n.complete||u.returnPartialData)&&(e=d)}})).subscribe({error:function(t){O(),p(t)},complete:function(){O(),t({data:e,errors:r,loading:!1,networkStatus:n.ready,stale:!1})}});i.setQuery(s,(function(t){t.subscriptions.add(g)}))}))},t.prototype.getQuery=function(t){return this.queries.get(t)||{listeners:new Set,invalidated:!1,document:null,newData:null,lastRequestId:1,observableQuery:null,subscriptions:new Set}},t.prototype.setQuery=function(t,e){var r=this.getQuery(t),n=Object(i.a)(Object(i.a)({},r),e(r));this.queries.set(t,n)},t.prototype.invalidate=function(t,e){void 0===e&&(e=!0),t&&this.setQuery(t,(function(){return{invalidated:e}}))},t.prototype.prepareContext=function(t){void 0===t&&(t={});var e=this.localState.prepareContext(t);return Object(i.a)(Object(i.a)({},e),{clientAwareness:this.clientAwareness})},t.prototype.checkInFlight=function(t){var e=this.queryStore.get(t);return e&&e.networkStatus!==n.ready&&e.networkStatus!==n.error},t.prototype.startPollingQuery=function(t,e,r){var n=this,o=t.pollInterval;if(Object(l.b)(o,18),!this.ssrMode){var s=this.pollingInfoByQueryId.get(e);s||this.pollingInfoByQueryId.set(e,s={}),s.interval=o,s.options=Object(i.a)(Object(i.a)({},t),{fetchPolicy:\"network-only\"});var a=function(){var t=n.pollingInfoByQueryId.get(e);t&&(n.checkInFlight(e)?u():n.fetchQuery(e,t.options,v.poll).then(u,u))},u=function(){var t=n.pollingInfoByQueryId.get(e);t&&(clearTimeout(t.timeout),t.timeout=setTimeout(a,t.interval))};r&&this.addQueryListener(e,r),u()}return e},t.prototype.stopPollingQuery=function(t){this.pollingInfoByQueryId.delete(t)},t}(),E=function(){function t(t){this.cache=t}return t.prototype.getCache=function(){return this.cache},t.prototype.markQueryResult=function(t,e,r,n,i){void 0===i&&(i=!1);var s=!Object(o.q)(t);i&&Object(o.q)(t)&&t.data&&(s=!0),!n&&s&&this.cache.write({result:t.data,dataId:\"ROOT_QUERY\",query:e,variables:r})},t.prototype.markSubscriptionResult=function(t,e,r){Object(o.q)(t)||this.cache.write({result:t.data,dataId:\"ROOT_SUBSCRIPTION\",query:e,variables:r})},t.prototype.markMutationInit=function(t){var e,r=this;t.optimisticResponse&&(e=\"function\"===typeof t.optimisticResponse?t.optimisticResponse(t.variables):t.optimisticResponse,this.cache.recordOptimisticTransaction((function(n){var i=r.cache;r.cache=n;try{r.markMutationResult({mutationId:t.mutationId,result:{data:e},document:t.document,variables:t.variables,updateQueries:t.updateQueries,update:t.update})}finally{r.cache=i}}),t.mutationId))},t.prototype.markMutationResult=function(t){var e=this;if(!Object(o.q)(t.result)){var r=[{result:t.result.data,dataId:\"ROOT_MUTATION\",query:t.document,variables:t.variables}],n=t.updateQueries;n&&Object.keys(n).forEach((function(i){var s=n[i],a=s.query,u=s.updater,c=e.cache.diff({query:a.document,variables:a.variables,returnPartialData:!0,optimistic:!1}),l=c.result;if(c.complete){var p=Object(o.I)((function(){return u(l,{mutationResult:t.result,queryName:Object(o.n)(a.document)||void 0,queryVariables:a.variables})}));p&&r.push({result:p,dataId:\"ROOT_QUERY\",query:a.document,variables:a.variables})}})),this.cache.performTransaction((function(e){r.forEach((function(t){return e.write(t)}));var n=t.update;n&&Object(o.I)((function(){return n(e,t.result)}))}))}},t.prototype.markMutationComplete=function(t){var e=t.mutationId;t.optimisticResponse&&this.cache.removeOptimistic(e)},t.prototype.markUpdateQueryResult=function(t,e,r){this.cache.write({result:r,dataId:\"ROOT_QUERY\",variables:e,query:t})},t.prototype.reset=function(){return this.cache.reset()},t}(),M=function(){function t(t){var e=this;this.defaultOptions={},this.resetStoreCallbacks=[],this.clearStoreCallbacks=[];var r=t.cache,n=t.ssrMode,i=void 0!==n&&n,o=t.ssrForceFetchDelay,s=void 0===o?0:o,a=t.connectToDevTools,c=t.queryDeduplication,p=void 0===c||c,h=t.defaultOptions,b=t.assumeImmutableResults,f=void 0!==b&&b,d=t.resolvers,v=t.typeDefs,y=t.fragmentMatcher,O=t.name,g=t.version,m=t.link;if(!m&&d&&(m=u.ApolloLink.empty()),!m||!r)throw new l.a(4);this.link=m,this.cache=r,this.store=new E(r),this.disableNetworkFetches=i||s>0,this.queryDeduplication=p,this.defaultOptions=h||{},this.typeDefs=v,s&&setTimeout((function(){return e.disableNetworkFetches=!1}),s),this.watchQuery=this.watchQuery.bind(this),this.query=this.query.bind(this),this.mutate=this.mutate.bind(this),this.resetStore=this.resetStore.bind(this),this.reFetchObservableQueries=this.reFetchObservableQueries.bind(this);\"undefined\"!==typeof a&&(a&&\"undefined\"!==typeof window)&&(window.__APOLLO_CLIENT__=this),this.version=\"2.6.10\",this.localState=new w({cache:r,client:this,resolvers:d,fragmentMatcher:y}),this.queryManager=new k({link:this.link,store:this.store,queryDeduplication:p,ssrMode:i,clientAwareness:{name:O,version:g},localState:this.localState,assumeImmutableResults:f,onBroadcast:function(){e.devToolsHookCb&&e.devToolsHookCb({action:{},state:{queries:e.queryManager.queryStore.getStore(),mutations:e.queryManager.mutationStore.getStore()},dataWithOptimisticResults:e.cache.extract(!0)})}})}return t.prototype.stop=function(){this.queryManager.stop()},t.prototype.watchQuery=function(t){return this.defaultOptions.watchQuery&&(t=Object(i.a)(Object(i.a)({},this.defaultOptions.watchQuery),t)),!this.disableNetworkFetches||\"network-only\"!==t.fetchPolicy&&\"cache-and-network\"!==t.fetchPolicy||(t=Object(i.a)(Object(i.a)({},t),{fetchPolicy:\"cache-first\"})),this.queryManager.watchQuery(t)},t.prototype.query=function(t){return this.defaultOptions.query&&(t=Object(i.a)(Object(i.a)({},this.defaultOptions.query),t)),Object(l.b)(\"cache-and-network\"!==t.fetchPolicy,5),this.disableNetworkFetches&&\"network-only\"===t.fetchPolicy&&(t=Object(i.a)(Object(i.a)({},t),{fetchPolicy:\"cache-first\"})),this.queryManager.query(t)},t.prototype.mutate=function(t){return this.defaultOptions.mutate&&(t=Object(i.a)(Object(i.a)({},this.defaultOptions.mutate),t)),this.queryManager.mutate(t)},t.prototype.subscribe=function(t){return this.queryManager.startGraphQLSubscription(t)},t.prototype.readQuery=function(t,e){return void 0===e&&(e=!1),this.cache.readQuery(t,e)},t.prototype.readFragment=function(t,e){return void 0===e&&(e=!1),this.cache.readFragment(t,e)},t.prototype.writeQuery=function(t){var e=this.cache.writeQuery(t);return this.queryManager.broadcastQueries(),e},t.prototype.writeFragment=function(t){var e=this.cache.writeFragment(t);return this.queryManager.broadcastQueries(),e},t.prototype.writeData=function(t){var e=this.cache.writeData(t);return this.queryManager.broadcastQueries(),e},t.prototype.__actionHookForDevTools=function(t){this.devToolsHookCb=t},t.prototype.__requestRaw=function(t){return Object(u.execute)(this.link,t)},t.prototype.initQueryManager=function(){return this.queryManager},t.prototype.resetStore=function(){var t=this;return Promise.resolve().then((function(){return t.queryManager.clearStore()})).then((function(){return Promise.all(t.resetStoreCallbacks.map((function(t){return t()})))})).then((function(){return t.reFetchObservableQueries()}))},t.prototype.clearStore=function(){var t=this;return Promise.resolve().then((function(){return t.queryManager.clearStore()})).then((function(){return Promise.all(t.clearStoreCallbacks.map((function(t){return t()})))}))},t.prototype.onResetStore=function(t){var e=this;return this.resetStoreCallbacks.push(t),function(){e.resetStoreCallbacks=e.resetStoreCallbacks.filter((function(e){return e!==t}))}},t.prototype.onClearStore=function(t){var e=this;return this.clearStoreCallbacks.push(t),function(){e.clearStoreCallbacks=e.clearStoreCallbacks.filter((function(e){return e!==t}))}},t.prototype.reFetchObservableQueries=function(t){return this.queryManager.reFetchObservableQueries(t)},t.prototype.extract=function(t){return this.cache.extract(t)},t.prototype.restore=function(t){return this.cache.restore(t)},t.prototype.addResolvers=function(t){this.localState.addResolvers(t)},t.prototype.setResolvers=function(t){this.localState.setResolvers(t)},t.prototype.getResolvers=function(){return this.localState.getResolvers()},t.prototype.setLocalStateFragmentMatcher=function(t){this.localState.setFragmentMatcher(t)},t}();e.default=M}}]);","map":{"version":3,"sources":["static/chunks/b8994ca0cade71a5d22b11dcb41dfdc16e60167f.0ce0b7b4bde684dc8f91.js"],"names":["window","push","SLVX","module","__webpack_exports__","__webpack_require__","symbolObservablePonyfill","root","result","Symbol","observable","d","Uuew","r","ApolloConsumer","ApolloProvider","getApolloContext","resetApolloContext","react_components_esm_Mutation","react_components_esm_Query","react_components_esm_Subscription","graphql","withApollo","withMutation","withQuery","withSubscription","react_hooks_esm_useApolloClient","react_hooks_esm_useLazyQuery","react_hooks_esm_useMutation","react_hooks_esm_useQuery","react_hooks_esm_useSubscription","getDataFromTree","getMarkupFromTree","renderToStringWithData","apolloContext","react","react_default","n","invariant_esm","a","createContext","DocumentType","_a","client","children","ApolloContext","createElement","Consumer","context","Object","assign","Provider","value","props","cache","Map","operationName","type","name","Query","Mutation","Subscription","parser","document","variables","cached","get","kind","fragments","definitions","filter","x","queries","operation","mutations","subscriptions","length","definition","variableDefinitions","payload","set","tslib_es6","bundle_esm","equality_esm","react_hooks_esm_OperationData","OperationData","options","this","isMounted","previousOptions","prototype","getOptions","setOptions","newOptions","storePrevious","unmount","refreshClient","isNew","cleanup","verifyDocumentType","react_hooks_esm_QueryData","_super","QueryData","onNewData","_this","call","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","getQueryResult","startQuerySubscription","obsRefetch","query","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","loading","networkStatus","ready","called","data","undefined","fetchData","ssr","obs","getCurrentResult","afterExecute","_b","lazy","handleErrorOrCompleted","bind","ssrInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","stale","observableQueryFields","addQueryPromise","prepareObservableQueryOptions","displayName","fetchPolicy","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","subscription","obsQuery","subscribe","next","previousResult","error","resubscribeToQuery","hasOwnProperty","lastError","getLastError","lastResult","getLastResult","resetLastResults","currentResult","partial","errors","graphQLErrors","partialRefetch","resetQueryStoreErrors","onCompleted","onError","unsubscribe","useBaseQuery","tick","forceUpdate","updatedOptions","queryDataRef","queryData","current","Promise","resolve","then","memoFn","key","ref","useDeepMemo","queryResult","react_hooks_esm_MutationData","MutationData","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","response","onMutationCompleted","onMutationError","mutation","mostRecentMutationId","optimisticResponse","update","mutationContext","_c","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","ignoreResults","updateResult","isMostRecentMutation","react_hooks_esm_SubscriptionData","SubscriptionData","initialize","getLoadingResult","shouldResubscribe","keys","startSubscription","endSubscription","updateCurrentData","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","RenderPromises","queryPromises","queryInfoTrie","lookupQueryInfo","queryInstance","finish","seen","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","clear","all","varMap","has","variablesString","JSON","stringify","info","prop_types","prop_types_default","useQuery","mutationDataRef","mutationData","useMutation","subscriptionDataRef","useSubscription","propTypes","object","func","isRequired","string","notifyOnNetworkStatusChange","bool","number","returnPartialData","oneOfType","arrayOf","hoist_non_react_statics_cjs","hoist_non_react_statics_cjs_default","defaultMapPropsToOptions","defaultMapPropsToSkip","getDisplayName","WrappedComponent","calculateVariablesFromProps","_i","variable","variableName","variableProp","react_hoc_esm_GraphQLBase","GraphQLBase","withRef","setWrappedInstance","getWrappedInstance","wrappedInstance","Component","operationOptions","alias","mapPropsToOptions","lastResultProps","mapPropsToSkip","graphQLDisplayName","GraphQL","apply","arguments","render","shouldSkip","opts","create","childProps","newResult","ownProps","resultName","state","resubscribe","componentDidUpate","prevProps","setState","withDisplayName","getDisplayName$1","WithApollo","lib_react_hooks_esm_OperationData","lib_react_hooks_esm_QueryData","react_hooks_esm_useBaseQuery","react_hooks_esm_useDeepMemo","lib_react_hooks_esm_MutationData","lib_react_hooks_esm_SubscriptionData","useContext","react_hooks_esm_RenderPromises","tree","renderFunction","renderToStaticMarkup","process","html","component","renderToString","bCCX","global","_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__","self","dMq0","ApolloClient","ApolloError","FetchType","NetworkStatus","ObservableQuery","isApolloError","tslib__WEBPACK_IMPORTED_MODULE_0__","apollo_utilities__WEBPACK_IMPORTED_MODULE_1__","apollo_utilities__WEBPACK_IMPORTED_MODULE_2__","apollo_link__WEBPACK_IMPORTED_MODULE_3__","apollo_link__WEBPACK_IMPORTED_MODULE_4__","symbol_observable__WEBPACK_IMPORTED_MODULE_5__","ts_invariant__WEBPACK_IMPORTED_MODULE_6__","graphql_language_visitor__WEBPACK_IMPORTED_MODULE_7__","isNetworkRequestInFlight","Observable","isNonEmptyArray","Array","isArray","err","networkError","errorMessage","extraInfo","message","graphQLError","replace","generateErrorMessage","__proto__","Error","queryManager","shouldSubscribe","observer","onSubscribe","observers","Set","isTornDown","queryId","generateQueryId","opDef","queryName","reject","delete","removeQuery","setTimeout","storeValue","policy","getCurrentQueryResult","queryStoreValue","queryStore","isNetworkFetchPolicy","errorPolicy","updateLastResult","isDifferentFromLastResult","snapshot","lastResultSnapshot","fetchQuery","combinedOptions","qid","normal","fetchMoreResult","stopQuery","startGraphQLSubscription","previous","add","oldFetchPolicy","setVariables","fetchResults","tryFetch","getQueryWithPreviousResult","dataStore","markUpdateQueryResult","broadcastQueries","stopPollingQuery","assertNotCacheFirstOrOnly","startPollingQuery","assumeImmutableResults","subObserver","_subscription","_observer","defaultSubscriptionObserverErrorCallback","first","setUpQuery","tearDownQuery","addObservableQuery","iterateObserversSafely","observeQuery","previousResult_1","query_1","fetchPolicy_1","transform","hasClientExports","getLocalState","addExportedVariables","previousVariables","serverQuery","sub","removeObservableQuery","method","argument","observersWithMethod","MutationStore","store","getStore","initMutation","markMutationError","markMutationResult","reset","QueryStore","initQuery","previousQuery","isSetVariables","storePreviousVariables","isPoll","poll","isRefetch","fetchMoreForQueryId","markQueryResult","markQueryError","markQueryResultClient","observableQueryIds","indexOf","LocalState","resolvers","fragmentMatcher","addResolvers","setFragmentMatcher","resolverGroup","setResolvers","getResolvers","runResolvers","remoteResult","onlyRunForcedResolvers","resolveDocument","localResult","getFragmentMatcher","clientQuery","prepareContext","getCacheKey","obj","config","dataIdFromObject","buildRootValueFromCache","exportedVariables","shouldForceResolvers","forceResolvers","Directive","enter","node","some","arg","diff","optimistic","rootValue","mainDefinition","fragmentMap","definitionOperation","defaultOperationType","execContext","str","charAt","toUpperCase","slice","resolveSelectionSet","selectionSet","resultsToMerge","selection","fragment","typeCondition","resolveField","fieldResult","fragmentResult","selections","map","field","fieldName","aliasedFieldName","aliasUsed","defaultResult","resultPromise","resolverType","resolverMap","__typename","directives","directive","resolveSubSelectedArray","item","multiplex","inner","QueryManager","link","queryDeduplication","onBroadcast","_d","ssrMode","_e","clientAwareness","localState","mutationStore","idCounter","fetchQueryRejectFns","transformCache","WeakMap","inFlightLinkObservables","pollingInfoByQueryId","getCache","stop","_info","stopQueryNoBroadcast","updateQueriesByName","updateQueries","updateWithProxyFn","generateUpdateQueriesInfo","_f","label","setQuery","getVariables","sent","ret","observableQuery","updater","markMutationInit","storeResult","getObservableFromLink","markMutationComplete","refetchQueryPromises","refetchQuery","queryOptions","fetchType","isNetworkOnly","needToFetch","shouldFetch","requestId","cancel","networkResult","updateQueryWatch","lastRequestId","invalidated","invalidate","fetchRequest","getQuery","hasForcedResolvers","newData","queryListenerForObserver","invoke","e","networkStatusChanged","shouldNotifyIfLoading","hasGraphQLErrors","isMissing","errorStatusChanged","diffResult","resultFromStore","transformed","transformDocument","forLink","transformForLink","cacheEntry_1","defaultVars","doc","transformedOptions","watchedQuery","String","stopQueryInStore","stopQueryInStoreNoBroadcast","addQueryListener","listener","listeners","watch","callback","clearStore","resetIds","resetStore","reFetchObservableQueries","includeStandby","observableQueryPromises","startQuery","makeObservable","markSubscriptionResult","observablePromise_1","queryIdOrObservable","foundObserveableQuery","id","deduplication","inFlightLinkObservables_1","forceFetch","byVariables_1","varJson_1","cleanupSub_1","of","activeNextCount","completed","handler","asyncMap","errorsFromStore","fqrfId","result_1","prev","newInfo","newContext","checkInFlight","interval","maybeFetch_1","poll_1","clearTimeout","timeout","DataStore","initialCache","ignoreErrors","writeWithErrors","write","dataId","optimistic_1","recordOptimisticTransaction","c","orig","cacheWrites_1","updateQueries_1","currentQueryResult","nextQueryResult","mutationResult","queryVariables","performTransaction","removeOptimistic","defaultOptions","resetStoreCallbacks","clearStoreCallbacks","ssrForceFetchDelay","connectToDevTools","typeDefs","clientAwarenessName","clientAwarenessVersion","version","empty","__APOLLO_CLIENT__","devToolsHookCb","action","dataWithOptimisticResults","extract","readQuery","readFragment","writeQuery","writeFragment","writeData","__actionHookForDevTools","cb","__requestRaw","initQueryManager","fn","onResetStore","onClearStore","restore","serializedState","setLocalStateFragmentMatcher"],"mappings":"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"},"name":"static/chunks/b8994ca0cade71a5d22b11dcb41dfdc16e60167f.0ce0b7b4bde684dc8f91.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[11],{\n\n/***/ \"SLVX\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return symbolObservablePonyfill; });\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n/***/ }),\n\n/***/ \"Uuew\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"ApolloConsumer\", function() { return /* reexport */ ApolloConsumer; });\n__webpack_require__.d(__webpack_exports__, \"ApolloProvider\", function() { return /* reexport */ ApolloProvider; });\n__webpack_require__.d(__webpack_exports__, \"getApolloContext\", function() { return /* reexport */ getApolloContext; });\n__webpack_require__.d(__webpack_exports__, \"resetApolloContext\", function() { return /* reexport */ resetApolloContext; });\n__webpack_require__.d(__webpack_exports__, \"Mutation\", function() { return /* reexport */ react_components_esm_Mutation; });\n__webpack_require__.d(__webpack_exports__, \"Query\", function() { return /* reexport */ react_components_esm_Query; });\n__webpack_require__.d(__webpack_exports__, \"Subscription\", function() { return /* reexport */ react_components_esm_Subscription; });\n__webpack_require__.d(__webpack_exports__, \"graphql\", function() { return /* reexport */ graphql; });\n__webpack_require__.d(__webpack_exports__, \"withApollo\", function() { return /* reexport */ withApollo; });\n__webpack_require__.d(__webpack_exports__, \"withMutation\", function() { return /* reexport */ withMutation; });\n__webpack_require__.d(__webpack_exports__, \"withQuery\", function() { return /* reexport */ withQuery; });\n__webpack_require__.d(__webpack_exports__, \"withSubscription\", function() { return /* reexport */ withSubscription; });\n__webpack_require__.d(__webpack_exports__, \"useApolloClient\", function() { return /* reexport */ react_hooks_esm_useApolloClient; });\n__webpack_require__.d(__webpack_exports__, \"useLazyQuery\", function() { return /* reexport */ react_hooks_esm_useLazyQuery; });\n__webpack_require__.d(__webpack_exports__, \"useMutation\", function() { return /* reexport */ react_hooks_esm_useMutation; });\n__webpack_require__.d(__webpack_exports__, \"useQuery\", function() { return /* reexport */ react_hooks_esm_useQuery; });\n__webpack_require__.d(__webpack_exports__, \"useSubscription\", function() { return /* reexport */ react_hooks_esm_useSubscription; });\n__webpack_require__.d(__webpack_exports__, \"getDataFromTree\", function() { return /* reexport */ getDataFromTree; });\n__webpack_require__.d(__webpack_exports__, \"getMarkupFromTree\", function() { return /* reexport */ getMarkupFromTree; });\n__webpack_require__.d(__webpack_exports__, \"renderToStringWithData\", function() { return /* reexport */ renderToStringWithData; });\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(\"q1tI\");\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/ts-invariant/lib/invariant.esm.js\nvar invariant_esm = __webpack_require__(\"qVdT\");\n\n// CONCATENATED MODULE: ./node_modules/@apollo/react-common/lib/react-common.esm.js\n\n\n\nvar apolloContext;\nfunction getApolloContext() {\n    if (!apolloContext) {\n        apolloContext = react_default.a.createContext({});\n    }\n    return apolloContext;\n}\nfunction resetApolloContext() {\n    apolloContext = react_default.a.createContext({});\n}\n\nvar ApolloProvider = function (_a) {\n    var client = _a.client, children = _a.children;\n    var ApolloContext = getApolloContext();\n    return react_default.a.createElement(ApolloContext.Consumer, null, function (context) {\n        if (context === void 0) { context = {}; }\n        if (client && context.client !== client) {\n            context = Object.assign({}, context, { client: client });\n        }\n         true ? Object(invariant_esm[\"b\" /* invariant */])(context.client, 5) : undefined;\n        return (react_default.a.createElement(ApolloContext.Provider, { value: context }, children));\n    });\n};\n\nvar ApolloConsumer = function (props) {\n    var ApolloContext = getApolloContext();\n    return react_default.a.createElement(ApolloContext.Consumer, null, function (context) {\n         true ? Object(invariant_esm[\"b\" /* invariant */])(context && context.client, 6) : undefined;\n        return props.children(context.client);\n    });\n};\n\nvar DocumentType;\n(function (DocumentType) {\n    DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n    DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n    DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\nvar cache = new Map();\nfunction operationName(type) {\n    var name;\n    switch (type) {\n        case DocumentType.Query:\n            name = 'Query';\n            break;\n        case DocumentType.Mutation:\n            name = 'Mutation';\n            break;\n        case DocumentType.Subscription:\n            name = 'Subscription';\n            break;\n    }\n    return name;\n}\nfunction parser(document) {\n    var cached = cache.get(document);\n    if (cached)\n        return cached;\n    var variables, type, name;\n     true ? Object(invariant_esm[\"b\" /* invariant */])(!!document && !!document.kind, 1) : undefined;\n    var fragments = document.definitions.filter(function (x) { return x.kind === 'FragmentDefinition'; });\n    var queries = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'query';\n    });\n    var mutations = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'mutation';\n    });\n    var subscriptions = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'subscription';\n    });\n     true ? Object(invariant_esm[\"b\" /* invariant */])(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), 2) : undefined;\n     true ? Object(invariant_esm[\"b\" /* invariant */])(queries.length + mutations.length + subscriptions.length <= 1, 3) : undefined;\n    type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n    if (!queries.length && !mutations.length)\n        type = DocumentType.Subscription;\n    var definitions = queries.length\n        ? queries\n        : mutations.length\n            ? mutations\n            : subscriptions;\n     true ? Object(invariant_esm[\"b\" /* invariant */])(definitions.length === 1, 4) : undefined;\n    var definition = definitions[0];\n    variables = definition.variableDefinitions || [];\n    if (definition.name && definition.name.kind === 'Name') {\n        name = definition.name.value;\n    }\n    else {\n        name = 'data';\n    }\n    var payload = { name: name, type: type, variables: variables };\n    cache.set(document, payload);\n    return payload;\n}\n\n\n//# sourceMappingURL=react-common.esm.js.map\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(\"mrSG\");\n\n// EXTERNAL MODULE: ./node_modules/apollo-client/bundle.esm.js\nvar bundle_esm = __webpack_require__(\"dMq0\");\n\n// EXTERNAL MODULE: ./node_modules/@wry/equality/lib/equality.esm.js\nvar equality_esm = __webpack_require__(\"qx2n\");\n\n// CONCATENATED MODULE: ./node_modules/@apollo/react-components/node_modules/@apollo/react-hooks/lib/react-hooks.esm.js\n\n\n\n\n\n\n\n\nvar react_hooks_esm_OperationData = (function () {\n    function OperationData(options, context) {\n        this.isMounted = false;\n        this.previousOptions = {};\n        this.context = {};\n        this.options = {};\n        this.options = options || {};\n        this.context = context || {};\n    }\n    OperationData.prototype.getOptions = function () {\n        return this.options;\n    };\n    OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n        if (storePrevious === void 0) { storePrevious = false; }\n        if (storePrevious && !Object(equality_esm[\"a\" /* equal */])(this.options, newOptions)) {\n            this.previousOptions = this.options;\n        }\n        this.options = newOptions;\n    };\n    OperationData.prototype.unmount = function () {\n        this.isMounted = false;\n    };\n    OperationData.prototype.refreshClient = function () {\n        var client = (this.options && this.options.client) ||\n            (this.context && this.context.client);\n         true ? Object(invariant_esm[\"b\" /* invariant */])(!!client, 2) : undefined;\n        var isNew = false;\n        if (client !== this.client) {\n            isNew = true;\n            this.client = client;\n            this.cleanup();\n        }\n        return {\n            client: this.client,\n            isNew: isNew\n        };\n    };\n    OperationData.prototype.verifyDocumentType = function (document, type) {\n        var operation = parser(document);\n        var requiredOperationName = operationName(type);\n        var usedOperationName = operationName(operation.type);\n         true ? Object(invariant_esm[\"b\" /* invariant */])(operation.type === type, 3) : undefined;\n    };\n    return OperationData;\n}());\n\nvar react_hooks_esm_QueryData = (function (_super) {\n    Object(tslib_es6[\"c\" /* __extends */])(QueryData, _super);\n    function QueryData(_a) {\n        var options = _a.options, context = _a.context, onNewData = _a.onNewData;\n        var _this = _super.call(this, options, context) || this;\n        _this.previousData = {};\n        _this.currentObservable = {};\n        _this.runLazy = false;\n        _this.runLazyQuery = function (options) {\n            _this.cleanup();\n            _this.runLazy = true;\n            _this.lazyOptions = options;\n            _this.onNewData();\n        };\n        _this.getExecuteResult = function () {\n            var result = _this.getQueryResult();\n            _this.startQuerySubscription();\n            return result;\n        };\n        _this.obsRefetch = function (variables) {\n            return _this.currentObservable.query.refetch(variables);\n        };\n        _this.obsFetchMore = function (fetchMoreOptions) { return _this.currentObservable.query.fetchMore(fetchMoreOptions); };\n        _this.obsUpdateQuery = function (mapFn) { return _this.currentObservable.query.updateQuery(mapFn); };\n        _this.obsStartPolling = function (pollInterval) {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.startPolling(pollInterval);\n        };\n        _this.obsStopPolling = function () {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.stopPolling();\n        };\n        _this.obsSubscribeToMore = function (options) { return _this.currentObservable.query.subscribeToMore(options); };\n        _this.onNewData = onNewData;\n        return _this;\n    }\n    QueryData.prototype.execute = function () {\n        this.refreshClient();\n        var _a = this.getOptions(), skip = _a.skip, query = _a.query;\n        if (skip || query !== this.previousData.query) {\n            this.removeQuerySubscription();\n            this.previousData.query = query;\n        }\n        this.updateObservableQuery();\n        if (this.isMounted)\n            this.startQuerySubscription();\n        return this.getExecuteSsrResult() || this.getExecuteResult();\n    };\n    QueryData.prototype.executeLazy = function () {\n        return !this.runLazy\n            ? [\n                this.runLazyQuery,\n                {\n                    loading: false,\n                    networkStatus: bundle_esm[\"NetworkStatus\"].ready,\n                    called: false,\n                    data: undefined,\n                },\n            ]\n            : [this.runLazyQuery, this.execute()];\n    };\n    QueryData.prototype.fetchData = function () {\n        var options = this.getOptions();\n        if (options.skip || options.ssr === false)\n            return false;\n        var obs = this.currentObservable.query;\n        var currentResult = obs.getCurrentResult();\n        return currentResult.loading ? obs.result() : false;\n    };\n    QueryData.prototype.afterExecute = function (_a) {\n        var _b = (_a === void 0 ? {} : _a).lazy, lazy = _b === void 0 ? false : _b;\n        this.isMounted = true;\n        if (!lazy || this.runLazy) {\n            this.handleErrorOrCompleted();\n        }\n        this.previousOptions = this.getOptions();\n        return this.unmount.bind(this);\n    };\n    QueryData.prototype.cleanup = function () {\n        this.removeQuerySubscription();\n        delete this.currentObservable.query;\n        delete this.previousData.result;\n    };\n    QueryData.prototype.getOptions = function () {\n        var options = _super.prototype.getOptions.call(this);\n        if (this.lazyOptions) {\n            options.variables = Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, options.variables), this.lazyOptions.variables);\n            options.context = Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, options.context), this.lazyOptions.context);\n        }\n        if (this.runLazy) {\n            delete options.skip;\n        }\n        return options;\n    };\n    QueryData.prototype.ssrInitiated = function () {\n        return this.context && this.context.renderPromises;\n    };\n    QueryData.prototype.getExecuteSsrResult = function () {\n        var ssrDisabled = this.getOptions().ssr === false;\n        var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n        var ssrLoading = Object(tslib_es6[\"a\" /* __assign */])({ loading: true, networkStatus: bundle_esm[\"NetworkStatus\"].loading, called: true, data: undefined, stale: false, client: this.client }, this.observableQueryFields());\n        if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n            this.previousData.result = ssrLoading;\n            return ssrLoading;\n        }\n        var result;\n        if (this.ssrInitiated()) {\n            result =\n                this.context.renderPromises.addQueryPromise(this, this.getExecuteResult) || ssrLoading;\n        }\n        return result;\n    };\n    QueryData.prototype.prepareObservableQueryOptions = function () {\n        var options = this.getOptions();\n        this.verifyDocumentType(options.query, DocumentType.Query);\n        var displayName = options.displayName || 'Query';\n        if (this.ssrInitiated() &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options.fetchPolicy = 'cache-first';\n        }\n        return Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, options), { displayName: displayName, context: options.context, metadata: { reactComponent: { displayName: displayName } } });\n    };\n    QueryData.prototype.initializeObservableQuery = function () {\n        var _a, _b;\n        if (this.ssrInitiated()) {\n            this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n        }\n        if (!this.currentObservable.query) {\n            var observableQueryOptions = this.prepareObservableQueryOptions();\n            this.previousData.observableQueryOptions = Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, observableQueryOptions), { children: null });\n            this.currentObservable.query = this.refreshClient().client.watchQuery(Object(tslib_es6[\"a\" /* __assign */])({}, observableQueryOptions));\n            if (this.ssrInitiated()) {\n                (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.renderPromises) === null || _b === void 0 ? void 0 : _b.registerSSRObservable(this.currentObservable.query, observableQueryOptions);\n            }\n        }\n    };\n    QueryData.prototype.updateObservableQuery = function () {\n        if (!this.currentObservable.query) {\n            this.initializeObservableQuery();\n            return;\n        }\n        var newObservableQueryOptions = Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, this.prepareObservableQueryOptions()), { children: null });\n        if (!Object(equality_esm[\"a\" /* equal */])(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n            this.previousData.observableQueryOptions = newObservableQueryOptions;\n            this.currentObservable\n                .query.setOptions(newObservableQueryOptions)\n                .catch(function () { });\n        }\n    };\n    QueryData.prototype.startQuerySubscription = function () {\n        var _this = this;\n        if (this.currentObservable.subscription || this.getOptions().skip)\n            return;\n        var obsQuery = this.currentObservable.query;\n        this.currentObservable.subscription = obsQuery.subscribe({\n            next: function (_a) {\n                var loading = _a.loading, networkStatus = _a.networkStatus, data = _a.data;\n                var previousResult = _this.previousData.result;\n                if (previousResult &&\n                    previousResult.loading === loading &&\n                    previousResult.networkStatus === networkStatus &&\n                    Object(equality_esm[\"a\" /* equal */])(previousResult.data, data)) {\n                    return;\n                }\n                _this.onNewData();\n            },\n            error: function (error) {\n                _this.resubscribeToQuery();\n                if (!error.hasOwnProperty('graphQLErrors'))\n                    throw error;\n                var previousResult = _this.previousData.result;\n                if ((previousResult && previousResult.loading) ||\n                    !Object(equality_esm[\"a\" /* equal */])(error, _this.previousData.error)) {\n                    _this.previousData.error = error;\n                    _this.onNewData();\n                }\n            },\n        });\n    };\n    QueryData.prototype.resubscribeToQuery = function () {\n        this.removeQuerySubscription();\n        var lastError = this.currentObservable.query.getLastError();\n        var lastResult = this.currentObservable.query.getLastResult();\n        this.currentObservable.query.resetLastResults();\n        this.startQuerySubscription();\n        Object.assign(this.currentObservable.query, {\n            lastError: lastError,\n            lastResult: lastResult,\n        });\n    };\n    QueryData.prototype.getQueryResult = function () {\n        var result = this.observableQueryFields();\n        var options = this.getOptions();\n        if (options.skip) {\n            result = Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, result), { data: undefined, error: undefined, loading: false, called: true });\n        }\n        else {\n            var currentResult = this.currentObservable.query.getCurrentResult();\n            var loading = currentResult.loading, partial = currentResult.partial, networkStatus = currentResult.networkStatus, errors = currentResult.errors;\n            var error = currentResult.error, data = currentResult.data;\n            if (errors && errors.length > 0) {\n                error = new bundle_esm[\"ApolloError\"]({ graphQLErrors: errors });\n            }\n            result = Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, result), { loading: loading,\n                networkStatus: networkStatus,\n                error: error, called: true });\n            if (loading) {\n                var previousData = this.previousData.result && this.previousData.result.data;\n                result.data =\n                    previousData && data\n                        ? Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, previousData), data) : previousData || data;\n            }\n            else if (error) {\n                Object.assign(result, {\n                    data: (this.currentObservable.query.getLastResult() || {})\n                        .data,\n                });\n            }\n            else {\n                var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n                var partialRefetch = options.partialRefetch;\n                if (partialRefetch &&\n                    !data &&\n                    partial &&\n                    fetchPolicy !== 'cache-only') {\n                    Object.assign(result, {\n                        loading: true,\n                        networkStatus: bundle_esm[\"NetworkStatus\"].loading,\n                    });\n                    result.refetch();\n                    return result;\n                }\n                result.data = data;\n            }\n        }\n        result.client = this.client;\n        this.previousData.loading =\n            (this.previousData.result && this.previousData.result.loading) || false;\n        this.previousData.result = result;\n        this.currentObservable.query &&\n            this.currentObservable.query.resetQueryStoreErrors();\n        return result;\n    };\n    QueryData.prototype.handleErrorOrCompleted = function () {\n        var obsQuery = this.currentObservable.query;\n        if (!obsQuery || !this.previousData.result)\n            return;\n        var _a = this.previousData.result, data = _a.data, loading = _a.loading, error = _a.error;\n        if (!loading) {\n            var _b = this.getOptions(), query = _b.query, variables = _b.variables, onCompleted = _b.onCompleted, onError = _b.onError;\n            if (this.previousOptions &&\n                !this.previousData.loading &&\n                Object(equality_esm[\"a\" /* equal */])(this.previousOptions.query, query) &&\n                Object(equality_esm[\"a\" /* equal */])(this.previousOptions.variables, variables)) {\n                return;\n            }\n            if (onCompleted && !error) {\n                onCompleted(data);\n            }\n            else if (onError && error) {\n                onError(error);\n            }\n        }\n    };\n    QueryData.prototype.removeQuerySubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    QueryData.prototype.observableQueryFields = function () {\n        var observable = this.currentObservable.query;\n        return {\n            variables: observable.variables,\n            refetch: this.obsRefetch,\n            fetchMore: this.obsFetchMore,\n            updateQuery: this.obsUpdateQuery,\n            startPolling: this.obsStartPolling,\n            stopPolling: this.obsStopPolling,\n            subscribeToMore: this.obsSubscribeToMore,\n        };\n    };\n    return QueryData;\n}(react_hooks_esm_OperationData));\n\nfunction useDeepMemo(memoFn, key) {\n    var ref = Object(react[\"useRef\"])();\n    if (!ref.current || !Object(equality_esm[\"a\" /* equal */])(key, ref.current.key)) {\n        ref.current = { key: key, value: memoFn() };\n    }\n    return ref.current.value;\n}\n\nfunction useBaseQuery(query, options, lazy) {\n    if (lazy === void 0) { lazy = false; }\n    var context = Object(react[\"useContext\"])(getApolloContext());\n    var _a = Object(react[\"useReducer\"])(function (x) { return x + 1; }, 0), tick = _a[0], forceUpdate = _a[1];\n    var updatedOptions = options ? Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, options), { query: query }) : { query: query };\n    var queryDataRef = Object(react[\"useRef\"])();\n    var queryData = queryDataRef.current ||\n        new react_hooks_esm_QueryData({\n            options: updatedOptions,\n            context: context,\n            onNewData: function () {\n                if (!queryData.ssrInitiated()) {\n                    Promise.resolve().then(forceUpdate);\n                }\n                else {\n                    forceUpdate();\n                }\n            },\n        });\n    queryData.setOptions(updatedOptions);\n    queryData.context = context;\n    if (queryData.ssrInitiated() && !queryDataRef.current) {\n        queryDataRef.current = queryData;\n    }\n    var memo = {\n        options: Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, updatedOptions), { onError: undefined, onCompleted: undefined }),\n        context: context,\n        tick: tick,\n    };\n    var result = useDeepMemo(function () { return (lazy ? queryData.executeLazy() : queryData.execute()); }, memo);\n    var queryResult = lazy\n        ? result[1]\n        : result;\n    Object(react[\"useEffect\"])(function () {\n        if (!queryDataRef.current) {\n            queryDataRef.current = queryData;\n        }\n        return function () { return queryData.cleanup(); };\n    }, []);\n    Object(react[\"useEffect\"])(function () { return queryData.afterExecute({ lazy: lazy }); }, [\n        queryResult.loading,\n        queryResult.networkStatus,\n        queryResult.error,\n        queryResult.data,\n    ]);\n    return result;\n}\n\nfunction useQuery(query, options) {\n    return useBaseQuery(query, options, false);\n}\n\nfunction useLazyQuery(query, options) {\n    return useBaseQuery(query, options, true);\n}\n\nvar react_hooks_esm_MutationData = (function (_super) {\n    Object(tslib_es6[\"c\" /* __extends */])(MutationData, _super);\n    function MutationData(_a) {\n        var options = _a.options, context = _a.context, result = _a.result, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.runMutation = function (mutationFunctionOptions) {\n            if (mutationFunctionOptions === void 0) { mutationFunctionOptions = {}; }\n            _this.onMutationStart();\n            var mutationId = _this.generateNewMutationId();\n            return _this.mutate(mutationFunctionOptions)\n                .then(function (response) {\n                _this.onMutationCompleted(response, mutationId);\n                return response;\n            })\n                .catch(function (error) {\n                _this.onMutationError(error, mutationId);\n                if (!_this.getOptions().onError)\n                    throw error;\n            });\n        };\n        _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n        _this.result = result;\n        _this.setResult = setResult;\n        _this.mostRecentMutationId = 0;\n        return _this;\n    }\n    MutationData.prototype.execute = function (result) {\n        this.isMounted = true;\n        this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n        result.client = this.refreshClient().client;\n        return [this.runMutation, result];\n    };\n    MutationData.prototype.afterExecute = function () {\n        this.isMounted = true;\n        return this.unmount.bind(this);\n    };\n    MutationData.prototype.cleanup = function () {\n    };\n    MutationData.prototype.mutate = function (mutationFunctionOptions) {\n        var _a = this.getOptions(), mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, update = _a.update, _b = _a.context, mutationContext = _b === void 0 ? {} : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, fetchPolicy = _a.fetchPolicy;\n        var mutateOptions = Object(tslib_es6[\"a\" /* __assign */])({}, mutationFunctionOptions);\n        var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n        delete mutateOptions.variables;\n        return this.refreshClient().client.mutate(Object(tslib_es6[\"a\" /* __assign */])({ mutation: mutation,\n            optimisticResponse: optimisticResponse, refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries, awaitRefetchQueries: awaitRefetchQueries,\n            update: update, context: mutationContext, fetchPolicy: fetchPolicy, variables: mutateVariables }, mutateOptions));\n    };\n    MutationData.prototype.onMutationStart = function () {\n        if (!this.result.loading && !this.getOptions().ignoreResults) {\n            this.updateResult({\n                loading: true,\n                error: undefined,\n                data: undefined,\n                called: true\n            });\n        }\n    };\n    MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n        var _a = this.getOptions(), onCompleted = _a.onCompleted, ignoreResults = _a.ignoreResults;\n        var data = response.data, errors = response.errors;\n        var error = errors && errors.length > 0\n            ? new bundle_esm[\"ApolloError\"]({ graphQLErrors: errors })\n            : undefined;\n        var callOncomplete = function () {\n            return onCompleted ? onCompleted(data) : null;\n        };\n        if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n            this.updateResult({\n                called: true,\n                loading: false,\n                data: data,\n                error: error\n            });\n        }\n        callOncomplete();\n    };\n    MutationData.prototype.onMutationError = function (error, mutationId) {\n        var onError = this.getOptions().onError;\n        if (this.isMostRecentMutation(mutationId)) {\n            this.updateResult({\n                loading: false,\n                error: error,\n                data: undefined,\n                called: true\n            });\n        }\n        if (onError) {\n            onError(error);\n        }\n    };\n    MutationData.prototype.generateNewMutationId = function () {\n        return ++this.mostRecentMutationId;\n    };\n    MutationData.prototype.isMostRecentMutation = function (mutationId) {\n        return this.mostRecentMutationId === mutationId;\n    };\n    MutationData.prototype.updateResult = function (result) {\n        if (this.isMounted &&\n            (!this.previousResult || !Object(equality_esm[\"a\" /* equal */])(this.previousResult, result))) {\n            this.setResult(result);\n            this.previousResult = result;\n        }\n    };\n    return MutationData;\n}(react_hooks_esm_OperationData));\n\nfunction useMutation(mutation, options) {\n    var context = Object(react[\"useContext\"])(getApolloContext());\n    var _a = Object(react[\"useState\"])({ called: false, loading: false }), result = _a[0], setResult = _a[1];\n    var updatedOptions = options ? Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, options), { mutation: mutation }) : { mutation: mutation };\n    var mutationDataRef = Object(react[\"useRef\"])();\n    function getMutationDataRef() {\n        if (!mutationDataRef.current) {\n            mutationDataRef.current = new react_hooks_esm_MutationData({\n                options: updatedOptions,\n                context: context,\n                result: result,\n                setResult: setResult\n            });\n        }\n        return mutationDataRef.current;\n    }\n    var mutationData = getMutationDataRef();\n    mutationData.setOptions(updatedOptions);\n    mutationData.context = context;\n    Object(react[\"useEffect\"])(function () { return mutationData.afterExecute(); });\n    return mutationData.execute(result);\n}\n\nvar react_hooks_esm_SubscriptionData = (function (_super) {\n    Object(tslib_es6[\"c\" /* __extends */])(SubscriptionData, _super);\n    function SubscriptionData(_a) {\n        var options = _a.options, context = _a.context, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.currentObservable = {};\n        _this.setResult = setResult;\n        _this.initialize(options);\n        return _this;\n    }\n    SubscriptionData.prototype.execute = function (result) {\n        if (this.getOptions().skip === true) {\n            this.cleanup();\n            return {\n                loading: false,\n                error: undefined,\n                data: undefined,\n                variables: this.getOptions().variables\n            };\n        }\n        var currentResult = result;\n        if (this.refreshClient().isNew) {\n            currentResult = this.getLoadingResult();\n        }\n        var shouldResubscribe = this.getOptions().shouldResubscribe;\n        if (typeof shouldResubscribe === 'function') {\n            shouldResubscribe = !!shouldResubscribe(this.getOptions());\n        }\n        if (shouldResubscribe !== false &&\n            this.previousOptions &&\n            Object.keys(this.previousOptions).length > 0 &&\n            (this.previousOptions.subscription !== this.getOptions().subscription ||\n                !Object(equality_esm[\"a\" /* equal */])(this.previousOptions.variables, this.getOptions().variables) ||\n                this.previousOptions.skip !== this.getOptions().skip)) {\n            this.cleanup();\n            currentResult = this.getLoadingResult();\n        }\n        this.initialize(this.getOptions());\n        this.startSubscription();\n        this.previousOptions = this.getOptions();\n        return Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, currentResult), { variables: this.getOptions().variables });\n    };\n    SubscriptionData.prototype.afterExecute = function () {\n        this.isMounted = true;\n    };\n    SubscriptionData.prototype.cleanup = function () {\n        this.endSubscription();\n        delete this.currentObservable.query;\n    };\n    SubscriptionData.prototype.initialize = function (options) {\n        if (this.currentObservable.query || this.getOptions().skip === true)\n            return;\n        this.currentObservable.query = this.refreshClient().client.subscribe({\n            query: options.subscription,\n            variables: options.variables,\n            fetchPolicy: options.fetchPolicy\n        });\n    };\n    SubscriptionData.prototype.startSubscription = function () {\n        if (this.currentObservable.subscription)\n            return;\n        this.currentObservable.subscription = this.currentObservable.query.subscribe({\n            next: this.updateCurrentData.bind(this),\n            error: this.updateError.bind(this),\n            complete: this.completeSubscription.bind(this)\n        });\n    };\n    SubscriptionData.prototype.getLoadingResult = function () {\n        return {\n            loading: true,\n            error: undefined,\n            data: undefined\n        };\n    };\n    SubscriptionData.prototype.updateResult = function (result) {\n        if (this.isMounted) {\n            this.setResult(result);\n        }\n    };\n    SubscriptionData.prototype.updateCurrentData = function (result) {\n        var onSubscriptionData = this.getOptions().onSubscriptionData;\n        this.updateResult({\n            data: result.data,\n            loading: false,\n            error: undefined\n        });\n        if (onSubscriptionData) {\n            onSubscriptionData({\n                client: this.refreshClient().client,\n                subscriptionData: result\n            });\n        }\n    };\n    SubscriptionData.prototype.updateError = function (error) {\n        this.updateResult({\n            error: error,\n            loading: false\n        });\n    };\n    SubscriptionData.prototype.completeSubscription = function () {\n        var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n        if (onSubscriptionComplete)\n            onSubscriptionComplete();\n        this.endSubscription();\n    };\n    SubscriptionData.prototype.endSubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    return SubscriptionData;\n}(react_hooks_esm_OperationData));\n\nfunction useSubscription(subscription, options) {\n    var context = Object(react[\"useContext\"])(getApolloContext());\n    var updatedOptions = options\n        ? Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, options), { subscription: subscription }) : { subscription: subscription };\n    var _a = Object(react[\"useState\"])({\n        loading: !updatedOptions.skip,\n        error: undefined,\n        data: undefined\n    }), result = _a[0], setResult = _a[1];\n    var subscriptionDataRef = Object(react[\"useRef\"])();\n    function getSubscriptionDataRef() {\n        if (!subscriptionDataRef.current) {\n            subscriptionDataRef.current = new react_hooks_esm_SubscriptionData({\n                options: updatedOptions,\n                context: context,\n                setResult: setResult\n            });\n        }\n        return subscriptionDataRef.current;\n    }\n    var subscriptionData = getSubscriptionDataRef();\n    subscriptionData.setOptions(updatedOptions, true);\n    subscriptionData.context = context;\n    Object(react[\"useEffect\"])(function () { return subscriptionData.afterExecute(); });\n    Object(react[\"useEffect\"])(function () { return subscriptionData.cleanup.bind(subscriptionData); }, []);\n    return subscriptionData.execute(result);\n}\n\nfunction useApolloClient() {\n    var client = react_default.a.useContext(getApolloContext()).client;\n     true ? Object(invariant_esm[\"b\" /* invariant */])(client, 1) : undefined;\n    return client;\n}\n\nfunction makeDefaultQueryInfo() {\n    return {\n        seen: false,\n        observable: null\n    };\n}\nvar RenderPromises = (function () {\n    function RenderPromises() {\n        this.queryPromises = new Map();\n        this.queryInfoTrie = new Map();\n    }\n    RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n        this.lookupQueryInfo(props).observable = observable;\n    };\n    RenderPromises.prototype.getSSRObservable = function (props) {\n        return this.lookupQueryInfo(props).observable;\n    };\n    RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n        var info = this.lookupQueryInfo(queryInstance.getOptions());\n        if (!info.seen) {\n            this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n                resolve(queryInstance.fetchData());\n            }));\n            return null;\n        }\n        return finish();\n    };\n    RenderPromises.prototype.hasPromises = function () {\n        return this.queryPromises.size > 0;\n    };\n    RenderPromises.prototype.consumeAndAwaitPromises = function () {\n        var _this = this;\n        var promises = [];\n        this.queryPromises.forEach(function (promise, queryInstance) {\n            _this.lookupQueryInfo(queryInstance).seen = true;\n            promises.push(promise);\n        });\n        this.queryPromises.clear();\n        return Promise.all(promises);\n    };\n    RenderPromises.prototype.lookupQueryInfo = function (props) {\n        var queryInfoTrie = this.queryInfoTrie;\n        var query = props.query, variables = props.variables;\n        var varMap = queryInfoTrie.get(query) || new Map();\n        if (!queryInfoTrie.has(query))\n            queryInfoTrie.set(query, varMap);\n        var variablesString = JSON.stringify(variables);\n        var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n        if (!varMap.has(variablesString))\n            varMap.set(variablesString, info);\n        return info;\n    };\n    return RenderPromises;\n}());\n\n\n//# sourceMappingURL=react-hooks.esm.js.map\n\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(\"17x9\");\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// CONCATENATED MODULE: ./node_modules/@apollo/react-components/lib/react-components.esm.js\n\n\n\n\n\nfunction react_components_esm_Query(props) {\n    var children = props.children, query = props.query, options = Object(tslib_es6[\"e\" /* __rest */])(props, [\"children\", \"query\"]);\n    var result = useQuery(query, options);\n    return children && result ? children(result) : null;\n}\n(function (Query) {\n    Query.propTypes = {\n        client: prop_types_default.a.object,\n        children: prop_types_default.a.func.isRequired,\n        fetchPolicy: prop_types_default.a.string,\n        notifyOnNetworkStatusChange: prop_types_default.a.bool,\n        onCompleted: prop_types_default.a.func,\n        onError: prop_types_default.a.func,\n        pollInterval: prop_types_default.a.number,\n        query: prop_types_default.a.object.isRequired,\n        variables: prop_types_default.a.object,\n        ssr: prop_types_default.a.bool,\n        partialRefetch: prop_types_default.a.bool,\n        returnPartialData: prop_types_default.a.bool\n    };\n})(react_components_esm_Query || (react_components_esm_Query = {}));\n\nfunction react_components_esm_Mutation(props) {\n    var _a = useMutation(props.mutation, props), runMutation = _a[0], result = _a[1];\n    return props.children ? props.children(runMutation, result) : null;\n}\n(function (Mutation) {\n    Mutation.propTypes = {\n        mutation: prop_types_default.a.object.isRequired,\n        variables: prop_types_default.a.object,\n        optimisticResponse: prop_types_default.a.oneOfType([prop_types_default.a.object, prop_types_default.a.func]),\n        refetchQueries: prop_types_default.a.oneOfType([\n            prop_types_default.a.arrayOf(prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.object])),\n            prop_types_default.a.func\n        ]),\n        awaitRefetchQueries: prop_types_default.a.bool,\n        update: prop_types_default.a.func,\n        children: prop_types_default.a.func.isRequired,\n        onCompleted: prop_types_default.a.func,\n        onError: prop_types_default.a.func,\n        fetchPolicy: prop_types_default.a.string\n    };\n})(react_components_esm_Mutation || (react_components_esm_Mutation = {}));\n\nfunction react_components_esm_Subscription(props) {\n    var result = useSubscription(props.subscription, props);\n    return props.children && result ? props.children(result) : null;\n}\n(function (Subscription) {\n    Subscription.propTypes = {\n        subscription: prop_types_default.a.object.isRequired,\n        variables: prop_types_default.a.object,\n        children: prop_types_default.a.func,\n        onSubscriptionData: prop_types_default.a.func,\n        onSubscriptionComplete: prop_types_default.a.func,\n        shouldResubscribe: prop_types_default.a.oneOfType([prop_types_default.a.func, prop_types_default.a.bool]),\n    };\n})(react_components_esm_Subscription || (react_components_esm_Subscription = {}));\n\n\n//# sourceMappingURL=react-components.esm.js.map\n\n// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\nvar hoist_non_react_statics_cjs = __webpack_require__(\"2mql\");\nvar hoist_non_react_statics_cjs_default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics_cjs);\n\n// CONCATENATED MODULE: ./node_modules/@apollo/react-hoc/lib/react-hoc.esm.js\n\n\n\n\n\n\n\n\nvar defaultMapPropsToOptions = function () { return ({}); };\nvar defaultMapPropsToSkip = function () { return false; };\nfunction getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\nfunction calculateVariablesFromProps(operation, props) {\n    var variables = {};\n    for (var _i = 0, _a = operation.variables; _i < _a.length; _i++) {\n        var _b = _a[_i], variable = _b.variable, type = _b.type;\n        if (!variable.name || !variable.name.value)\n            continue;\n        var variableName = variable.name.value;\n        var variableProp = props[variableName];\n        if (typeof variableProp !== 'undefined') {\n            variables[variableName] = variableProp;\n            continue;\n        }\n        if (type.kind !== 'NonNullType') {\n            variables[variableName] = undefined;\n        }\n    }\n    return variables;\n}\nvar react_hoc_esm_GraphQLBase = (function (_super) {\n    Object(tslib_es6[\"c\" /* __extends */])(GraphQLBase, _super);\n    function GraphQLBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this.withRef = false;\n        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n        return _this;\n    }\n    GraphQLBase.prototype.getWrappedInstance = function () {\n         true ? Object(invariant_esm[\"b\" /* invariant */])(this.withRef, 2) : undefined;\n        return this.wrappedInstance;\n    };\n    GraphQLBase.prototype.setWrappedInstance = function (ref) {\n        this.wrappedInstance = ref;\n    };\n    return GraphQLBase;\n}(react_default.a.Component));\n\nfunction withQuery(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var operation = parser(document);\n    var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.skip, skip = _b === void 0 ? defaultMapPropsToSkip : _b, _c = operationOptions.alias, alias = _c === void 0 ? 'Apollo' : _c;\n    var mapPropsToOptions = options;\n    if (typeof mapPropsToOptions !== 'function') {\n        mapPropsToOptions = function () { return options; };\n    }\n    var mapPropsToSkip = skip;\n    if (typeof mapPropsToSkip !== 'function') {\n        mapPropsToSkip = function () { return skip; };\n    }\n    var lastResultProps;\n    return function (WrappedComponent) {\n        var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n        var GraphQL = (function (_super) {\n            Object(tslib_es6[\"c\" /* __extends */])(GraphQL, _super);\n            function GraphQL() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            GraphQL.prototype.render = function () {\n                var _this = this;\n                var props = this.props;\n                var shouldSkip = mapPropsToSkip(props);\n                var opts = shouldSkip\n                    ? Object.create(null)\n                    : Object(tslib_es6[\"a\" /* __assign */])({}, mapPropsToOptions(props));\n                if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n                    opts.variables = calculateVariablesFromProps(operation, props);\n                }\n                return (react_default.a.createElement(react_components_esm_Query, Object(tslib_es6[\"a\" /* __assign */])({}, opts, { displayName: graphQLDisplayName, skip: shouldSkip, query: document }), function (_a) {\n                    var _b, _c;\n                    var _ = _a.client, data = _a.data, r = Object(tslib_es6[\"e\" /* __rest */])(_a, [\"client\", \"data\"]);\n                    if (operationOptions.withRef) {\n                        _this.withRef = true;\n                        props = Object.assign({}, props, {\n                            ref: _this.setWrappedInstance\n                        });\n                    }\n                    if (shouldSkip) {\n                        return (react_default.a.createElement(WrappedComponent, Object(tslib_es6[\"a\" /* __assign */])({}, props, {})));\n                    }\n                    var result = Object.assign(r, data || {});\n                    var name = operationOptions.name || 'data';\n                    var childProps = (_b = {}, _b[name] = result, _b);\n                    if (operationOptions.props) {\n                        var newResult = (_c = {},\n                            _c[name] = result,\n                            _c.ownProps = props,\n                            _c);\n                        lastResultProps = operationOptions.props(newResult, lastResultProps);\n                        childProps = lastResultProps;\n                    }\n                    return (react_default.a.createElement(WrappedComponent, Object(tslib_es6[\"a\" /* __assign */])({}, props, childProps)));\n                }));\n            };\n            GraphQL.displayName = graphQLDisplayName;\n            GraphQL.WrappedComponent = WrappedComponent;\n            return GraphQL;\n        }(react_hoc_esm_GraphQLBase));\n        return hoist_non_react_statics_cjs_default()(GraphQL, WrappedComponent, {});\n    };\n}\n\nfunction withMutation(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var operation = parser(document);\n    var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.alias, alias = _b === void 0 ? 'Apollo' : _b;\n    var mapPropsToOptions = options;\n    if (typeof mapPropsToOptions !== 'function')\n        mapPropsToOptions = function () { return options; };\n    return function (WrappedComponent) {\n        var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n        var GraphQL = (function (_super) {\n            Object(tslib_es6[\"c\" /* __extends */])(GraphQL, _super);\n            function GraphQL() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            GraphQL.prototype.render = function () {\n                var props = this.props;\n                var opts = mapPropsToOptions(props);\n                if (operationOptions.withRef) {\n                    this.withRef = true;\n                    props = Object.assign({}, props, {\n                        ref: this.setWrappedInstance\n                    });\n                }\n                if (!opts.variables && operation.variables.length > 0) {\n                    opts.variables = calculateVariablesFromProps(operation, props);\n                }\n                return (react_default.a.createElement(react_components_esm_Mutation, Object(tslib_es6[\"a\" /* __assign */])({ ignoreResults: true }, opts, { mutation: document }), function (mutate, _a) {\n                    var _b, _c;\n                    var data = _a.data, r = Object(tslib_es6[\"e\" /* __rest */])(_a, [\"data\"]);\n                    var result = Object.assign(r, data || {});\n                    var name = operationOptions.name || 'mutate';\n                    var resultName = operationOptions.name\n                        ? name + \"Result\"\n                        : 'result';\n                    var childProps = (_b = {},\n                        _b[name] = mutate,\n                        _b[resultName] = result,\n                        _b);\n                    if (operationOptions.props) {\n                        var newResult = (_c = {},\n                            _c[name] = mutate,\n                            _c[resultName] = result,\n                            _c.ownProps = props,\n                            _c);\n                        childProps = operationOptions.props(newResult);\n                    }\n                    return react_default.a.createElement(WrappedComponent, Object(tslib_es6[\"a\" /* __assign */])({}, props, childProps));\n                }));\n            };\n            GraphQL.displayName = graphQLDisplayName;\n            GraphQL.WrappedComponent = WrappedComponent;\n            return GraphQL;\n        }(react_hoc_esm_GraphQLBase));\n        return hoist_non_react_statics_cjs_default()(GraphQL, WrappedComponent, {});\n    };\n}\n\nfunction withSubscription(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var operation = parser(document);\n    var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.skip, skip = _b === void 0 ? defaultMapPropsToSkip : _b, _c = operationOptions.alias, alias = _c === void 0 ? 'Apollo' : _c, shouldResubscribe = operationOptions.shouldResubscribe;\n    var mapPropsToOptions = options;\n    if (typeof mapPropsToOptions !== 'function')\n        mapPropsToOptions = function () { return options; };\n    var mapPropsToSkip = skip;\n    if (typeof mapPropsToSkip !== 'function')\n        mapPropsToSkip = function () { return skip; };\n    var lastResultProps;\n    return function (WrappedComponent) {\n        var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n        var GraphQL = (function (_super) {\n            Object(tslib_es6[\"c\" /* __extends */])(GraphQL, _super);\n            function GraphQL(props) {\n                var _this = _super.call(this, props) || this;\n                _this.state = { resubscribe: false };\n                return _this;\n            }\n            GraphQL.prototype.componentDidUpate = function (prevProps) {\n                if (shouldResubscribe) {\n                    this.setState({\n                        resubscribe: shouldResubscribe(prevProps, this.props)\n                    });\n                }\n            };\n            GraphQL.prototype.render = function () {\n                var _this = this;\n                var props = this.props;\n                var shouldSkip = mapPropsToSkip(props);\n                var opts = shouldSkip\n                    ? Object.create(null)\n                    : mapPropsToOptions(props);\n                if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n                    opts.variables = calculateVariablesFromProps(operation, props);\n                }\n                return (react_default.a.createElement(react_components_esm_Subscription, Object(tslib_es6[\"a\" /* __assign */])({}, opts, { displayName: graphQLDisplayName, skip: shouldSkip, subscription: document, shouldResubscribe: this.state.resubscribe }), function (_a) {\n                    var _b, _c;\n                    var data = _a.data, r = Object(tslib_es6[\"e\" /* __rest */])(_a, [\"data\"]);\n                    if (operationOptions.withRef) {\n                        _this.withRef = true;\n                        props = Object.assign({}, props, {\n                            ref: _this.setWrappedInstance\n                        });\n                    }\n                    if (shouldSkip) {\n                        return (react_default.a.createElement(WrappedComponent, Object(tslib_es6[\"a\" /* __assign */])({}, props, {})));\n                    }\n                    var result = Object.assign(r, data || {});\n                    var name = operationOptions.name || 'data';\n                    var childProps = (_b = {}, _b[name] = result, _b);\n                    if (operationOptions.props) {\n                        var newResult = (_c = {},\n                            _c[name] = result,\n                            _c.ownProps = props,\n                            _c);\n                        lastResultProps = operationOptions.props(newResult, lastResultProps);\n                        childProps = lastResultProps;\n                    }\n                    return (react_default.a.createElement(WrappedComponent, Object(tslib_es6[\"a\" /* __assign */])({}, props, childProps)));\n                }));\n            };\n            GraphQL.displayName = graphQLDisplayName;\n            GraphQL.WrappedComponent = WrappedComponent;\n            return GraphQL;\n        }(react_hoc_esm_GraphQLBase));\n        return hoist_non_react_statics_cjs_default()(GraphQL, WrappedComponent, {});\n    };\n}\n\nfunction graphql(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    switch (parser(document).type) {\n        case DocumentType.Mutation:\n            return withMutation(document, operationOptions);\n        case DocumentType.Subscription:\n            return withSubscription(document, operationOptions);\n        case DocumentType.Query:\n        default:\n            return withQuery(document, operationOptions);\n    }\n}\n\nfunction getDisplayName$1(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\nfunction withApollo(WrappedComponent, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var withDisplayName = \"withApollo(\" + getDisplayName$1(WrappedComponent) + \")\";\n    var WithApollo = (function (_super) {\n        Object(tslib_es6[\"c\" /* __extends */])(WithApollo, _super);\n        function WithApollo(props) {\n            var _this = _super.call(this, props) || this;\n            _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n            return _this;\n        }\n        WithApollo.prototype.getWrappedInstance = function () {\n             true ? Object(invariant_esm[\"b\" /* invariant */])(operationOptions.withRef, 1) : undefined;\n            return this.wrappedInstance;\n        };\n        WithApollo.prototype.setWrappedInstance = function (ref) {\n            this.wrappedInstance = ref;\n        };\n        WithApollo.prototype.render = function () {\n            var _this = this;\n            return (react_default.a.createElement(ApolloConsumer, null, function (client) {\n                var props = Object.assign({}, _this.props, {\n                    client: client,\n                    ref: operationOptions.withRef\n                        ? _this.setWrappedInstance\n                        : undefined\n                });\n                return react_default.a.createElement(WrappedComponent, Object(tslib_es6[\"a\" /* __assign */])({}, props));\n            }));\n        };\n        WithApollo.displayName = withDisplayName;\n        WithApollo.WrappedComponent = WrappedComponent;\n        return WithApollo;\n    }(react_default.a.Component));\n    return hoist_non_react_statics_cjs_default()(WithApollo, WrappedComponent, {});\n}\n\n\n//# sourceMappingURL=react-hoc.esm.js.map\n\n// CONCATENATED MODULE: ./node_modules/react-apollo/node_modules/@apollo/react-hooks/lib/react-hooks.esm.js\n\n\n\n\n\n\n\n\nvar lib_react_hooks_esm_OperationData = (function () {\n    function OperationData(options, context) {\n        this.isMounted = false;\n        this.previousOptions = {};\n        this.context = {};\n        this.options = {};\n        this.options = options || {};\n        this.context = context || {};\n    }\n    OperationData.prototype.getOptions = function () {\n        return this.options;\n    };\n    OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n        if (storePrevious === void 0) { storePrevious = false; }\n        if (storePrevious && !Object(equality_esm[\"a\" /* equal */])(this.options, newOptions)) {\n            this.previousOptions = this.options;\n        }\n        this.options = newOptions;\n    };\n    OperationData.prototype.unmount = function () {\n        this.isMounted = false;\n    };\n    OperationData.prototype.refreshClient = function () {\n        var client = (this.options && this.options.client) ||\n            (this.context && this.context.client);\n         true ? Object(invariant_esm[\"b\" /* invariant */])(!!client, 2) : undefined;\n        var isNew = false;\n        if (client !== this.client) {\n            isNew = true;\n            this.client = client;\n            this.cleanup();\n        }\n        return {\n            client: this.client,\n            isNew: isNew\n        };\n    };\n    OperationData.prototype.verifyDocumentType = function (document, type) {\n        var operation = parser(document);\n        var requiredOperationName = operationName(type);\n        var usedOperationName = operationName(operation.type);\n         true ? Object(invariant_esm[\"b\" /* invariant */])(operation.type === type, 3) : undefined;\n    };\n    return OperationData;\n}());\n\nvar lib_react_hooks_esm_QueryData = (function (_super) {\n    Object(tslib_es6[\"c\" /* __extends */])(QueryData, _super);\n    function QueryData(_a) {\n        var options = _a.options, context = _a.context, onNewData = _a.onNewData;\n        var _this = _super.call(this, options, context) || this;\n        _this.previousData = {};\n        _this.currentObservable = {};\n        _this.runLazy = false;\n        _this.runLazyQuery = function (options) {\n            _this.cleanup();\n            _this.runLazy = true;\n            _this.lazyOptions = options;\n            _this.onNewData();\n        };\n        _this.getExecuteResult = function () {\n            var result = _this.getQueryResult();\n            _this.startQuerySubscription();\n            return result;\n        };\n        _this.obsRefetch = function (variables) {\n            return _this.currentObservable.query.refetch(variables);\n        };\n        _this.obsFetchMore = function (fetchMoreOptions) { return _this.currentObservable.query.fetchMore(fetchMoreOptions); };\n        _this.obsUpdateQuery = function (mapFn) { return _this.currentObservable.query.updateQuery(mapFn); };\n        _this.obsStartPolling = function (pollInterval) {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.startPolling(pollInterval);\n        };\n        _this.obsStopPolling = function () {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.stopPolling();\n        };\n        _this.obsSubscribeToMore = function (options) { return _this.currentObservable.query.subscribeToMore(options); };\n        _this.onNewData = onNewData;\n        return _this;\n    }\n    QueryData.prototype.execute = function () {\n        this.refreshClient();\n        var _a = this.getOptions(), skip = _a.skip, query = _a.query;\n        if (skip || query !== this.previousData.query) {\n            this.removeQuerySubscription();\n            this.previousData.query = query;\n        }\n        this.updateObservableQuery();\n        if (this.isMounted)\n            this.startQuerySubscription();\n        return this.getExecuteSsrResult() || this.getExecuteResult();\n    };\n    QueryData.prototype.executeLazy = function () {\n        return !this.runLazy\n            ? [\n                this.runLazyQuery,\n                {\n                    loading: false,\n                    networkStatus: bundle_esm[\"NetworkStatus\"].ready,\n                    called: false,\n                    data: undefined,\n                },\n            ]\n            : [this.runLazyQuery, this.execute()];\n    };\n    QueryData.prototype.fetchData = function () {\n        var options = this.getOptions();\n        if (options.skip || options.ssr === false)\n            return false;\n        var obs = this.currentObservable.query;\n        var currentResult = obs.getCurrentResult();\n        return currentResult.loading ? obs.result() : false;\n    };\n    QueryData.prototype.afterExecute = function (_a) {\n        var _b = (_a === void 0 ? {} : _a).lazy, lazy = _b === void 0 ? false : _b;\n        this.isMounted = true;\n        if (!lazy || this.runLazy) {\n            this.handleErrorOrCompleted();\n        }\n        this.previousOptions = this.getOptions();\n        return this.unmount.bind(this);\n    };\n    QueryData.prototype.cleanup = function () {\n        this.removeQuerySubscription();\n        delete this.currentObservable.query;\n        delete this.previousData.result;\n    };\n    QueryData.prototype.getOptions = function () {\n        var options = _super.prototype.getOptions.call(this);\n        if (this.lazyOptions) {\n            options.variables = Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, options.variables), this.lazyOptions.variables);\n            options.context = Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, options.context), this.lazyOptions.context);\n        }\n        if (this.runLazy) {\n            delete options.skip;\n        }\n        return options;\n    };\n    QueryData.prototype.ssrInitiated = function () {\n        return this.context && this.context.renderPromises;\n    };\n    QueryData.prototype.getExecuteSsrResult = function () {\n        var ssrDisabled = this.getOptions().ssr === false;\n        var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n        var ssrLoading = Object(tslib_es6[\"a\" /* __assign */])({ loading: true, networkStatus: bundle_esm[\"NetworkStatus\"].loading, called: true, data: undefined, stale: false, client: this.client }, this.observableQueryFields());\n        if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n            this.previousData.result = ssrLoading;\n            return ssrLoading;\n        }\n        var result;\n        if (this.ssrInitiated()) {\n            result =\n                this.context.renderPromises.addQueryPromise(this, this.getExecuteResult) || ssrLoading;\n        }\n        return result;\n    };\n    QueryData.prototype.prepareObservableQueryOptions = function () {\n        var options = this.getOptions();\n        this.verifyDocumentType(options.query, DocumentType.Query);\n        var displayName = options.displayName || 'Query';\n        if (this.ssrInitiated() &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options.fetchPolicy = 'cache-first';\n        }\n        return Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, options), { displayName: displayName, context: options.context, metadata: { reactComponent: { displayName: displayName } } });\n    };\n    QueryData.prototype.initializeObservableQuery = function () {\n        var _a, _b;\n        if (this.ssrInitiated()) {\n            this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n        }\n        if (!this.currentObservable.query) {\n            var observableQueryOptions = this.prepareObservableQueryOptions();\n            this.previousData.observableQueryOptions = Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, observableQueryOptions), { children: null });\n            this.currentObservable.query = this.refreshClient().client.watchQuery(Object(tslib_es6[\"a\" /* __assign */])({}, observableQueryOptions));\n            if (this.ssrInitiated()) {\n                (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.renderPromises) === null || _b === void 0 ? void 0 : _b.registerSSRObservable(this.currentObservable.query, observableQueryOptions);\n            }\n        }\n    };\n    QueryData.prototype.updateObservableQuery = function () {\n        if (!this.currentObservable.query) {\n            this.initializeObservableQuery();\n            return;\n        }\n        var newObservableQueryOptions = Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, this.prepareObservableQueryOptions()), { children: null });\n        if (!Object(equality_esm[\"a\" /* equal */])(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n            this.previousData.observableQueryOptions = newObservableQueryOptions;\n            this.currentObservable\n                .query.setOptions(newObservableQueryOptions)\n                .catch(function () { });\n        }\n    };\n    QueryData.prototype.startQuerySubscription = function () {\n        var _this = this;\n        if (this.currentObservable.subscription || this.getOptions().skip)\n            return;\n        var obsQuery = this.currentObservable.query;\n        this.currentObservable.subscription = obsQuery.subscribe({\n            next: function (_a) {\n                var loading = _a.loading, networkStatus = _a.networkStatus, data = _a.data;\n                var previousResult = _this.previousData.result;\n                if (previousResult &&\n                    previousResult.loading === loading &&\n                    previousResult.networkStatus === networkStatus &&\n                    Object(equality_esm[\"a\" /* equal */])(previousResult.data, data)) {\n                    return;\n                }\n                _this.onNewData();\n            },\n            error: function (error) {\n                _this.resubscribeToQuery();\n                if (!error.hasOwnProperty('graphQLErrors'))\n                    throw error;\n                var previousResult = _this.previousData.result;\n                if ((previousResult && previousResult.loading) ||\n                    !Object(equality_esm[\"a\" /* equal */])(error, _this.previousData.error)) {\n                    _this.previousData.error = error;\n                    _this.onNewData();\n                }\n            },\n        });\n    };\n    QueryData.prototype.resubscribeToQuery = function () {\n        this.removeQuerySubscription();\n        var lastError = this.currentObservable.query.getLastError();\n        var lastResult = this.currentObservable.query.getLastResult();\n        this.currentObservable.query.resetLastResults();\n        this.startQuerySubscription();\n        Object.assign(this.currentObservable.query, {\n            lastError: lastError,\n            lastResult: lastResult,\n        });\n    };\n    QueryData.prototype.getQueryResult = function () {\n        var result = this.observableQueryFields();\n        var options = this.getOptions();\n        if (options.skip) {\n            result = Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, result), { data: undefined, error: undefined, loading: false, called: true });\n        }\n        else {\n            var currentResult = this.currentObservable.query.getCurrentResult();\n            var loading = currentResult.loading, partial = currentResult.partial, networkStatus = currentResult.networkStatus, errors = currentResult.errors;\n            var error = currentResult.error, data = currentResult.data;\n            if (errors && errors.length > 0) {\n                error = new bundle_esm[\"ApolloError\"]({ graphQLErrors: errors });\n            }\n            result = Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, result), { loading: loading,\n                networkStatus: networkStatus,\n                error: error, called: true });\n            if (loading) {\n                var previousData = this.previousData.result && this.previousData.result.data;\n                result.data =\n                    previousData && data\n                        ? Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, previousData), data) : previousData || data;\n            }\n            else if (error) {\n                Object.assign(result, {\n                    data: (this.currentObservable.query.getLastResult() || {})\n                        .data,\n                });\n            }\n            else {\n                var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n                var partialRefetch = options.partialRefetch;\n                if (partialRefetch &&\n                    !data &&\n                    partial &&\n                    fetchPolicy !== 'cache-only') {\n                    Object.assign(result, {\n                        loading: true,\n                        networkStatus: bundle_esm[\"NetworkStatus\"].loading,\n                    });\n                    result.refetch();\n                    return result;\n                }\n                result.data = data;\n            }\n        }\n        result.client = this.client;\n        this.previousData.loading =\n            (this.previousData.result && this.previousData.result.loading) || false;\n        this.previousData.result = result;\n        this.currentObservable.query &&\n            this.currentObservable.query.resetQueryStoreErrors();\n        return result;\n    };\n    QueryData.prototype.handleErrorOrCompleted = function () {\n        var obsQuery = this.currentObservable.query;\n        if (!obsQuery || !this.previousData.result)\n            return;\n        var _a = this.previousData.result, data = _a.data, loading = _a.loading, error = _a.error;\n        if (!loading) {\n            var _b = this.getOptions(), query = _b.query, variables = _b.variables, onCompleted = _b.onCompleted, onError = _b.onError;\n            if (this.previousOptions &&\n                !this.previousData.loading &&\n                Object(equality_esm[\"a\" /* equal */])(this.previousOptions.query, query) &&\n                Object(equality_esm[\"a\" /* equal */])(this.previousOptions.variables, variables)) {\n                return;\n            }\n            if (onCompleted && !error) {\n                onCompleted(data);\n            }\n            else if (onError && error) {\n                onError(error);\n            }\n        }\n    };\n    QueryData.prototype.removeQuerySubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    QueryData.prototype.observableQueryFields = function () {\n        var observable = this.currentObservable.query;\n        return {\n            variables: observable.variables,\n            refetch: this.obsRefetch,\n            fetchMore: this.obsFetchMore,\n            updateQuery: this.obsUpdateQuery,\n            startPolling: this.obsStartPolling,\n            stopPolling: this.obsStopPolling,\n            subscribeToMore: this.obsSubscribeToMore,\n        };\n    };\n    return QueryData;\n}(lib_react_hooks_esm_OperationData));\n\nfunction react_hooks_esm_useDeepMemo(memoFn, key) {\n    var ref = Object(react[\"useRef\"])();\n    if (!ref.current || !Object(equality_esm[\"a\" /* equal */])(key, ref.current.key)) {\n        ref.current = { key: key, value: memoFn() };\n    }\n    return ref.current.value;\n}\n\nfunction react_hooks_esm_useBaseQuery(query, options, lazy) {\n    if (lazy === void 0) { lazy = false; }\n    var context = Object(react[\"useContext\"])(getApolloContext());\n    var _a = Object(react[\"useReducer\"])(function (x) { return x + 1; }, 0), tick = _a[0], forceUpdate = _a[1];\n    var updatedOptions = options ? Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, options), { query: query }) : { query: query };\n    var queryDataRef = Object(react[\"useRef\"])();\n    var queryData = queryDataRef.current ||\n        new lib_react_hooks_esm_QueryData({\n            options: updatedOptions,\n            context: context,\n            onNewData: function () {\n                if (!queryData.ssrInitiated()) {\n                    Promise.resolve().then(forceUpdate);\n                }\n                else {\n                    forceUpdate();\n                }\n            },\n        });\n    queryData.setOptions(updatedOptions);\n    queryData.context = context;\n    if (queryData.ssrInitiated() && !queryDataRef.current) {\n        queryDataRef.current = queryData;\n    }\n    var memo = {\n        options: Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, updatedOptions), { onError: undefined, onCompleted: undefined }),\n        context: context,\n        tick: tick,\n    };\n    var result = react_hooks_esm_useDeepMemo(function () { return (lazy ? queryData.executeLazy() : queryData.execute()); }, memo);\n    var queryResult = lazy\n        ? result[1]\n        : result;\n    Object(react[\"useEffect\"])(function () {\n        if (!queryDataRef.current) {\n            queryDataRef.current = queryData;\n        }\n        return function () { return queryData.cleanup(); };\n    }, []);\n    Object(react[\"useEffect\"])(function () { return queryData.afterExecute({ lazy: lazy }); }, [\n        queryResult.loading,\n        queryResult.networkStatus,\n        queryResult.error,\n        queryResult.data,\n    ]);\n    return result;\n}\n\nfunction react_hooks_esm_useQuery(query, options) {\n    return react_hooks_esm_useBaseQuery(query, options, false);\n}\n\nfunction react_hooks_esm_useLazyQuery(query, options) {\n    return react_hooks_esm_useBaseQuery(query, options, true);\n}\n\nvar lib_react_hooks_esm_MutationData = (function (_super) {\n    Object(tslib_es6[\"c\" /* __extends */])(MutationData, _super);\n    function MutationData(_a) {\n        var options = _a.options, context = _a.context, result = _a.result, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.runMutation = function (mutationFunctionOptions) {\n            if (mutationFunctionOptions === void 0) { mutationFunctionOptions = {}; }\n            _this.onMutationStart();\n            var mutationId = _this.generateNewMutationId();\n            return _this.mutate(mutationFunctionOptions)\n                .then(function (response) {\n                _this.onMutationCompleted(response, mutationId);\n                return response;\n            })\n                .catch(function (error) {\n                _this.onMutationError(error, mutationId);\n                if (!_this.getOptions().onError)\n                    throw error;\n            });\n        };\n        _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n        _this.result = result;\n        _this.setResult = setResult;\n        _this.mostRecentMutationId = 0;\n        return _this;\n    }\n    MutationData.prototype.execute = function (result) {\n        this.isMounted = true;\n        this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n        result.client = this.refreshClient().client;\n        return [this.runMutation, result];\n    };\n    MutationData.prototype.afterExecute = function () {\n        this.isMounted = true;\n        return this.unmount.bind(this);\n    };\n    MutationData.prototype.cleanup = function () {\n    };\n    MutationData.prototype.mutate = function (mutationFunctionOptions) {\n        var _a = this.getOptions(), mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, update = _a.update, _b = _a.context, mutationContext = _b === void 0 ? {} : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, fetchPolicy = _a.fetchPolicy;\n        var mutateOptions = Object(tslib_es6[\"a\" /* __assign */])({}, mutationFunctionOptions);\n        var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n        delete mutateOptions.variables;\n        return this.refreshClient().client.mutate(Object(tslib_es6[\"a\" /* __assign */])({ mutation: mutation,\n            optimisticResponse: optimisticResponse, refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries, awaitRefetchQueries: awaitRefetchQueries,\n            update: update, context: mutationContext, fetchPolicy: fetchPolicy, variables: mutateVariables }, mutateOptions));\n    };\n    MutationData.prototype.onMutationStart = function () {\n        if (!this.result.loading && !this.getOptions().ignoreResults) {\n            this.updateResult({\n                loading: true,\n                error: undefined,\n                data: undefined,\n                called: true\n            });\n        }\n    };\n    MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n        var _a = this.getOptions(), onCompleted = _a.onCompleted, ignoreResults = _a.ignoreResults;\n        var data = response.data, errors = response.errors;\n        var error = errors && errors.length > 0\n            ? new bundle_esm[\"ApolloError\"]({ graphQLErrors: errors })\n            : undefined;\n        var callOncomplete = function () {\n            return onCompleted ? onCompleted(data) : null;\n        };\n        if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n            this.updateResult({\n                called: true,\n                loading: false,\n                data: data,\n                error: error\n            });\n        }\n        callOncomplete();\n    };\n    MutationData.prototype.onMutationError = function (error, mutationId) {\n        var onError = this.getOptions().onError;\n        if (this.isMostRecentMutation(mutationId)) {\n            this.updateResult({\n                loading: false,\n                error: error,\n                data: undefined,\n                called: true\n            });\n        }\n        if (onError) {\n            onError(error);\n        }\n    };\n    MutationData.prototype.generateNewMutationId = function () {\n        return ++this.mostRecentMutationId;\n    };\n    MutationData.prototype.isMostRecentMutation = function (mutationId) {\n        return this.mostRecentMutationId === mutationId;\n    };\n    MutationData.prototype.updateResult = function (result) {\n        if (this.isMounted &&\n            (!this.previousResult || !Object(equality_esm[\"a\" /* equal */])(this.previousResult, result))) {\n            this.setResult(result);\n            this.previousResult = result;\n        }\n    };\n    return MutationData;\n}(lib_react_hooks_esm_OperationData));\n\nfunction react_hooks_esm_useMutation(mutation, options) {\n    var context = Object(react[\"useContext\"])(getApolloContext());\n    var _a = Object(react[\"useState\"])({ called: false, loading: false }), result = _a[0], setResult = _a[1];\n    var updatedOptions = options ? Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, options), { mutation: mutation }) : { mutation: mutation };\n    var mutationDataRef = Object(react[\"useRef\"])();\n    function getMutationDataRef() {\n        if (!mutationDataRef.current) {\n            mutationDataRef.current = new lib_react_hooks_esm_MutationData({\n                options: updatedOptions,\n                context: context,\n                result: result,\n                setResult: setResult\n            });\n        }\n        return mutationDataRef.current;\n    }\n    var mutationData = getMutationDataRef();\n    mutationData.setOptions(updatedOptions);\n    mutationData.context = context;\n    Object(react[\"useEffect\"])(function () { return mutationData.afterExecute(); });\n    return mutationData.execute(result);\n}\n\nvar lib_react_hooks_esm_SubscriptionData = (function (_super) {\n    Object(tslib_es6[\"c\" /* __extends */])(SubscriptionData, _super);\n    function SubscriptionData(_a) {\n        var options = _a.options, context = _a.context, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.currentObservable = {};\n        _this.setResult = setResult;\n        _this.initialize(options);\n        return _this;\n    }\n    SubscriptionData.prototype.execute = function (result) {\n        if (this.getOptions().skip === true) {\n            this.cleanup();\n            return {\n                loading: false,\n                error: undefined,\n                data: undefined,\n                variables: this.getOptions().variables\n            };\n        }\n        var currentResult = result;\n        if (this.refreshClient().isNew) {\n            currentResult = this.getLoadingResult();\n        }\n        var shouldResubscribe = this.getOptions().shouldResubscribe;\n        if (typeof shouldResubscribe === 'function') {\n            shouldResubscribe = !!shouldResubscribe(this.getOptions());\n        }\n        if (shouldResubscribe !== false &&\n            this.previousOptions &&\n            Object.keys(this.previousOptions).length > 0 &&\n            (this.previousOptions.subscription !== this.getOptions().subscription ||\n                !Object(equality_esm[\"a\" /* equal */])(this.previousOptions.variables, this.getOptions().variables) ||\n                this.previousOptions.skip !== this.getOptions().skip)) {\n            this.cleanup();\n            currentResult = this.getLoadingResult();\n        }\n        this.initialize(this.getOptions());\n        this.startSubscription();\n        this.previousOptions = this.getOptions();\n        return Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, currentResult), { variables: this.getOptions().variables });\n    };\n    SubscriptionData.prototype.afterExecute = function () {\n        this.isMounted = true;\n    };\n    SubscriptionData.prototype.cleanup = function () {\n        this.endSubscription();\n        delete this.currentObservable.query;\n    };\n    SubscriptionData.prototype.initialize = function (options) {\n        if (this.currentObservable.query || this.getOptions().skip === true)\n            return;\n        this.currentObservable.query = this.refreshClient().client.subscribe({\n            query: options.subscription,\n            variables: options.variables,\n            fetchPolicy: options.fetchPolicy\n        });\n    };\n    SubscriptionData.prototype.startSubscription = function () {\n        if (this.currentObservable.subscription)\n            return;\n        this.currentObservable.subscription = this.currentObservable.query.subscribe({\n            next: this.updateCurrentData.bind(this),\n            error: this.updateError.bind(this),\n            complete: this.completeSubscription.bind(this)\n        });\n    };\n    SubscriptionData.prototype.getLoadingResult = function () {\n        return {\n            loading: true,\n            error: undefined,\n            data: undefined\n        };\n    };\n    SubscriptionData.prototype.updateResult = function (result) {\n        if (this.isMounted) {\n            this.setResult(result);\n        }\n    };\n    SubscriptionData.prototype.updateCurrentData = function (result) {\n        var onSubscriptionData = this.getOptions().onSubscriptionData;\n        this.updateResult({\n            data: result.data,\n            loading: false,\n            error: undefined\n        });\n        if (onSubscriptionData) {\n            onSubscriptionData({\n                client: this.refreshClient().client,\n                subscriptionData: result\n            });\n        }\n    };\n    SubscriptionData.prototype.updateError = function (error) {\n        this.updateResult({\n            error: error,\n            loading: false\n        });\n    };\n    SubscriptionData.prototype.completeSubscription = function () {\n        var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n        if (onSubscriptionComplete)\n            onSubscriptionComplete();\n        this.endSubscription();\n    };\n    SubscriptionData.prototype.endSubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    return SubscriptionData;\n}(lib_react_hooks_esm_OperationData));\n\nfunction react_hooks_esm_useSubscription(subscription, options) {\n    var context = Object(react[\"useContext\"])(getApolloContext());\n    var updatedOptions = options\n        ? Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, options), { subscription: subscription }) : { subscription: subscription };\n    var _a = Object(react[\"useState\"])({\n        loading: !updatedOptions.skip,\n        error: undefined,\n        data: undefined\n    }), result = _a[0], setResult = _a[1];\n    var subscriptionDataRef = Object(react[\"useRef\"])();\n    function getSubscriptionDataRef() {\n        if (!subscriptionDataRef.current) {\n            subscriptionDataRef.current = new lib_react_hooks_esm_SubscriptionData({\n                options: updatedOptions,\n                context: context,\n                setResult: setResult\n            });\n        }\n        return subscriptionDataRef.current;\n    }\n    var subscriptionData = getSubscriptionDataRef();\n    subscriptionData.setOptions(updatedOptions, true);\n    subscriptionData.context = context;\n    Object(react[\"useEffect\"])(function () { return subscriptionData.afterExecute(); });\n    Object(react[\"useEffect\"])(function () { return subscriptionData.cleanup.bind(subscriptionData); }, []);\n    return subscriptionData.execute(result);\n}\n\nfunction react_hooks_esm_useApolloClient() {\n    var client = react_default.a.useContext(getApolloContext()).client;\n     true ? Object(invariant_esm[\"b\" /* invariant */])(client, 1) : undefined;\n    return client;\n}\n\nfunction react_hooks_esm_makeDefaultQueryInfo() {\n    return {\n        seen: false,\n        observable: null\n    };\n}\nvar react_hooks_esm_RenderPromises = (function () {\n    function RenderPromises() {\n        this.queryPromises = new Map();\n        this.queryInfoTrie = new Map();\n    }\n    RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n        this.lookupQueryInfo(props).observable = observable;\n    };\n    RenderPromises.prototype.getSSRObservable = function (props) {\n        return this.lookupQueryInfo(props).observable;\n    };\n    RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n        var info = this.lookupQueryInfo(queryInstance.getOptions());\n        if (!info.seen) {\n            this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n                resolve(queryInstance.fetchData());\n            }));\n            return null;\n        }\n        return finish();\n    };\n    RenderPromises.prototype.hasPromises = function () {\n        return this.queryPromises.size > 0;\n    };\n    RenderPromises.prototype.consumeAndAwaitPromises = function () {\n        var _this = this;\n        var promises = [];\n        this.queryPromises.forEach(function (promise, queryInstance) {\n            _this.lookupQueryInfo(queryInstance).seen = true;\n            promises.push(promise);\n        });\n        this.queryPromises.clear();\n        return Promise.all(promises);\n    };\n    RenderPromises.prototype.lookupQueryInfo = function (props) {\n        var queryInfoTrie = this.queryInfoTrie;\n        var query = props.query, variables = props.variables;\n        var varMap = queryInfoTrie.get(query) || new Map();\n        if (!queryInfoTrie.has(query))\n            queryInfoTrie.set(query, varMap);\n        var variablesString = JSON.stringify(variables);\n        var info = varMap.get(variablesString) || react_hooks_esm_makeDefaultQueryInfo();\n        if (!varMap.has(variablesString))\n            varMap.set(variablesString, info);\n        return info;\n    };\n    return RenderPromises;\n}());\n\n\n//# sourceMappingURL=react-hooks.esm.js.map\n\n// CONCATENATED MODULE: ./node_modules/react-apollo/node_modules/@apollo/react-ssr/lib/react-ssr.esm.js\n\n\n\n\n\nfunction getDataFromTree(tree, context) {\n    if (context === void 0) { context = {}; }\n    return getMarkupFromTree({\n        tree: tree,\n        context: context,\n        renderFunction: __webpack_require__(\"KAy6\").renderToStaticMarkup\n    });\n}\nfunction getMarkupFromTree(_a) {\n    var tree = _a.tree, _b = _a.context, context = _b === void 0 ? {} : _b, _c = _a.renderFunction, renderFunction = _c === void 0 ? __webpack_require__(\"KAy6\").renderToStaticMarkup : _c;\n    var renderPromises = new react_hooks_esm_RenderPromises();\n    function process() {\n        var ApolloContext = getApolloContext();\n        var html = renderFunction(react_default.a.createElement(ApolloContext.Provider, { value: Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, context), { renderPromises: renderPromises }) }, tree));\n        return renderPromises.hasPromises()\n            ? renderPromises.consumeAndAwaitPromises().then(process)\n            : html;\n    }\n    return Promise.resolve().then(process);\n}\n\nfunction renderToStringWithData(component) {\n    return getMarkupFromTree({\n        tree: component,\n        renderFunction: __webpack_require__(\"KAy6\").renderToString\n    });\n}\n\n\n//# sourceMappingURL=react-ssr.esm.js.map\n\n// CONCATENATED MODULE: ./node_modules/react-apollo/lib/react-apollo.esm.js\n\n\n\n\n\n//# sourceMappingURL=react-apollo.esm.js.map\n\n\n/***/ }),\n\n/***/ \"bCCX\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, module) {/* harmony import */ var _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"SLVX\");\n/* global window */\n\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (true) {\n  root = module;\n} else {}\n\nvar result = Object(_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(root);\n/* harmony default export */ __webpack_exports__[\"a\"] = (result);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"ntbh\"), __webpack_require__(\"Az8m\")(module)))\n\n/***/ }),\n\n/***/ \"dMq0\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ApolloClient\", function() { return ApolloClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ApolloError\", function() { return ApolloError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FetchType\", function() { return FetchType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NetworkStatus\", function() { return NetworkStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ObservableQuery\", function() { return ObservableQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isApolloError\", function() { return isApolloError; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"mrSG\");\n/* harmony import */ var apollo_utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"RRgQ\");\n/* harmony import */ var apollo_utilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"qx2n\");\n/* harmony import */ var apollo_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"b0dj\");\n/* harmony import */ var apollo_link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"1jQf\");\n/* harmony import */ var symbol_observable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"bCCX\");\n/* harmony import */ var ts_invariant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"qVdT\");\n/* harmony import */ var graphql_language_visitor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"L2ys\");\n\n\n\n\n\n\n\nvar NetworkStatus;\n(function (NetworkStatus) {\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\nfunction isNetworkRequestInFlight(networkStatus) {\n    return networkStatus < 7;\n}\n\nvar Observable = (function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ \"c\"])(Observable, _super);\n    function Observable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Observable.prototype[symbol_observable__WEBPACK_IMPORTED_MODULE_5__[/* default */ \"a\"]] = function () {\n        return this;\n    };\n    Observable.prototype['@@observable'] = function () {\n        return this;\n    };\n    return Observable;\n}(apollo_link__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"]));\n\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\n\nfunction isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n    var message = '';\n    if (isNonEmptyArray(err.graphQLErrors)) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += \"GraphQL error: \" + errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += 'Network error: ' + err.networkError.message + '\\n';\n    }\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = (function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ \"c\"])(ApolloError, _super);\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        if (!errorMessage) {\n            _this.message = generateErrorMessage(_this);\n        }\n        else {\n            _this.message = errorMessage;\n        }\n        _this.extraInfo = extraInfo;\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\n\nvar FetchType;\n(function (FetchType) {\n    FetchType[FetchType[\"normal\"] = 1] = \"normal\";\n    FetchType[FetchType[\"refetch\"] = 2] = \"refetch\";\n    FetchType[FetchType[\"poll\"] = 3] = \"poll\";\n})(FetchType || (FetchType = {}));\n\nvar hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue && (storeValue.networkError ||\n        (policy === 'none' && isNonEmptyArray(storeValue.graphQLErrors)));\n};\nvar ObservableQuery = (function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ \"c\"])(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var queryManager = _a.queryManager, options = _a.options, _b = _a.shouldSubscribe, shouldSubscribe = _b === void 0 ? true : _b;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        _this.observers = new Set();\n        _this.subscriptions = new Set();\n        _this.isTornDown = false;\n        _this.options = options;\n        _this.variables = options.variables || {};\n        _this.queryId = queryManager.generateQueryId();\n        _this.shouldSubscribe = shouldSubscribe;\n        var opDef = Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* getOperationDefinition */ \"m\"])(options.query);\n        _this.queryName = opDef && opDef.name && opDef.name.value;\n        _this.queryManager = queryManager;\n        return _this;\n    }\n    ObservableQuery.prototype.result = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    _this.observers.delete(observer);\n                    if (!_this.observers.size) {\n                        _this.queryManager.removeQuery(_this.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: reject,\n            };\n            var subscription = _this.subscribe(observer);\n        });\n    };\n    ObservableQuery.prototype.currentResult = function () {\n        var result = this.getCurrentResult();\n        if (result.data === undefined) {\n            result.data = {};\n        }\n        return result;\n    };\n    ObservableQuery.prototype.getCurrentResult = function () {\n        if (this.isTornDown) {\n            var lastResult = this.lastResult;\n            return {\n                data: !this.lastError && lastResult && lastResult.data || void 0,\n                error: this.lastError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n            };\n        }\n        var _a = this.queryManager.getCurrentQueryResult(this), data = _a.data, partial = _a.partial;\n        var queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n        var result;\n        var fetchPolicy = this.options.fetchPolicy;\n        var isNetworkFetchPolicy = fetchPolicy === 'network-only' ||\n            fetchPolicy === 'no-cache';\n        if (queryStoreValue) {\n            var networkStatus = queryStoreValue.networkStatus;\n            if (hasError(queryStoreValue, this.options.errorPolicy)) {\n                return {\n                    data: void 0,\n                    loading: false,\n                    networkStatus: networkStatus,\n                    error: new ApolloError({\n                        graphQLErrors: queryStoreValue.graphQLErrors,\n                        networkError: queryStoreValue.networkError,\n                    }),\n                };\n            }\n            if (queryStoreValue.variables) {\n                this.options.variables = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, this.options.variables), queryStoreValue.variables);\n                this.variables = this.options.variables;\n            }\n            result = {\n                data: data,\n                loading: isNetworkRequestInFlight(networkStatus),\n                networkStatus: networkStatus,\n            };\n            if (queryStoreValue.graphQLErrors && this.options.errorPolicy === 'all') {\n                result.errors = queryStoreValue.graphQLErrors;\n            }\n        }\n        else {\n            var loading = isNetworkFetchPolicy ||\n                (partial && fetchPolicy !== 'cache-only');\n            result = {\n                data: data,\n                loading: loading,\n                networkStatus: loading ? NetworkStatus.loading : NetworkStatus.ready,\n            };\n        }\n        if (!partial) {\n            this.updateLastResult(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, result), { stale: false }));\n        }\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, result), { partial: partial });\n    };\n    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult) {\n        var snapshot = this.lastResultSnapshot;\n        return !(snapshot &&\n            newResult &&\n            snapshot.networkStatus === newResult.networkStatus &&\n            snapshot.stale === newResult.stale &&\n            Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_2__[/* equal */ \"a\"])(snapshot.data, newResult.data));\n    };\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastResultSnapshot;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.resetQueryStoreErrors = function () {\n        var queryStore = this.queryManager.queryStore.get(this.queryId);\n        if (queryStore) {\n            queryStore.networkError = null;\n            queryStore.graphQLErrors = [];\n        }\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var fetchPolicy = this.options.fetchPolicy;\n        if (fetchPolicy === 'cache-only') {\n            return Promise.reject( true ? new ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* InvariantError */ \"a\"](1) : undefined);\n        }\n        if (fetchPolicy !== 'no-cache' &&\n            fetchPolicy !== 'cache-and-network') {\n            fetchPolicy = 'network-only';\n        }\n        if (!Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_2__[/* equal */ \"a\"])(this.variables, variables)) {\n            this.variables = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, this.variables), variables);\n        }\n        if (!Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_2__[/* equal */ \"a\"])(this.options.variables, this.variables)) {\n            this.options.variables = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, this.options.variables), this.variables);\n        }\n        return this.queryManager.fetchQuery(this.queryId, Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, this.options), { fetchPolicy: fetchPolicy }), FetchType.refetch);\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n         true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(fetchMoreOptions.updateQuery, 2) : undefined;\n        var combinedOptions = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, (fetchMoreOptions.query ? fetchMoreOptions : Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, this.options), fetchMoreOptions), { variables: Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, this.variables), fetchMoreOptions.variables) }))), { fetchPolicy: 'network-only' });\n        var qid = this.queryManager.generateQueryId();\n        return this.queryManager\n            .fetchQuery(qid, combinedOptions, FetchType.normal, this.queryId)\n            .then(function (fetchMoreResult) {\n            _this.updateQuery(function (previousResult) {\n                return fetchMoreOptions.updateQuery(previousResult, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables,\n                });\n            });\n            _this.queryManager.stopQuery(qid);\n            return fetchMoreResult;\n        }, function (error) {\n            _this.queryManager.stopQuery(qid);\n            throw error;\n        });\n    };\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n        })\n            .subscribe({\n            next: function (subscriptionData) {\n                var updateQuery = options.updateQuery;\n                if (updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return updateQuery(previous, {\n                            subscriptionData: subscriptionData,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                 true || false;\n            },\n        });\n        this.subscriptions.add(subscription);\n        return function () {\n            if (_this.subscriptions.delete(subscription)) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function (opts) {\n        var oldFetchPolicy = this.options.fetchPolicy;\n        this.options = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, this.options), opts);\n        if (opts.pollInterval) {\n            this.startPolling(opts.pollInterval);\n        }\n        else if (opts.pollInterval === 0) {\n            this.stopPolling();\n        }\n        var fetchPolicy = opts.fetchPolicy;\n        return this.setVariables(this.options.variables, oldFetchPolicy !== fetchPolicy && (oldFetchPolicy === 'cache-only' ||\n            oldFetchPolicy === 'standby' ||\n            fetchPolicy === 'network-only'), opts.fetchResults);\n    };\n    ObservableQuery.prototype.setVariables = function (variables, tryFetch, fetchResults) {\n        if (tryFetch === void 0) { tryFetch = false; }\n        if (fetchResults === void 0) { fetchResults = true; }\n        this.isTornDown = false;\n        variables = variables || this.variables;\n        if (!tryFetch && Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_2__[/* equal */ \"a\"])(variables, this.variables)) {\n            return this.observers.size && fetchResults\n                ? this.result()\n                : Promise.resolve();\n        }\n        this.variables = this.options.variables = variables;\n        if (!this.observers.size) {\n            return Promise.resolve();\n        }\n        return this.queryManager.fetchQuery(this.queryId, this.options);\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var queryManager = this.queryManager;\n        var _a = queryManager.getQueryWithPreviousResult(this.queryId), previousResult = _a.previousResult, variables = _a.variables, document = _a.document;\n        var newResult = Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* tryFunctionOrLogError */ \"I\"])(function () {\n            return mapFn(previousResult, { variables: variables });\n        });\n        if (newResult) {\n            queryManager.dataStore.markUpdateQueryResult(document, variables, newResult);\n            queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        this.queryManager.stopPollingQuery(this.queryId);\n        this.options.pollInterval = undefined;\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        assertNotCacheFirstOrOnly(this);\n        this.options.pollInterval = pollInterval;\n        this.queryManager.startPollingQuery(this.options, this.queryId);\n    };\n    ObservableQuery.prototype.updateLastResult = function (newResult) {\n        var previousResult = this.lastResult;\n        this.lastResult = newResult;\n        this.lastResultSnapshot = this.queryManager.assumeImmutableResults\n            ? newResult\n            : Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* cloneDeep */ \"f\"])(newResult);\n        return previousResult;\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        try {\n            var subObserver = observer._subscription._observer;\n            if (subObserver && !subObserver.error) {\n                subObserver.error = defaultSubscriptionObserverErrorCallback;\n            }\n        }\n        catch (_a) { }\n        var first = !this.observers.size;\n        this.observers.add(observer);\n        if (observer.next && this.lastResult)\n            observer.next(this.lastResult);\n        if (observer.error && this.lastError)\n            observer.error(this.lastError);\n        if (first) {\n            this.setUpQuery();\n        }\n        return function () {\n            if (_this.observers.delete(observer) && !_this.observers.size) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.setUpQuery = function () {\n        var _this = this;\n        var _a = this, queryManager = _a.queryManager, queryId = _a.queryId;\n        if (this.shouldSubscribe) {\n            queryManager.addObservableQuery(queryId, this);\n        }\n        if (this.options.pollInterval) {\n            assertNotCacheFirstOrOnly(this);\n            queryManager.startPollingQuery(this.options, queryId);\n        }\n        var onError = function (error) {\n            _this.updateLastResult(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, _this.lastResult), { errors: error.graphQLErrors, networkStatus: NetworkStatus.error, loading: false }));\n            iterateObserversSafely(_this.observers, 'error', _this.lastError = error);\n        };\n        queryManager.observeQuery(queryId, this.options, {\n            next: function (result) {\n                if (_this.lastError || _this.isDifferentFromLastResult(result)) {\n                    var previousResult_1 = _this.updateLastResult(result);\n                    var _a = _this.options, query_1 = _a.query, variables = _a.variables, fetchPolicy_1 = _a.fetchPolicy;\n                    if (queryManager.transform(query_1).hasClientExports) {\n                        queryManager.getLocalState().addExportedVariables(query_1, variables).then(function (variables) {\n                            var previousVariables = _this.variables;\n                            _this.variables = _this.options.variables = variables;\n                            if (!result.loading &&\n                                previousResult_1 &&\n                                fetchPolicy_1 !== 'cache-only' &&\n                                queryManager.transform(query_1).serverQuery &&\n                                !Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_2__[/* equal */ \"a\"])(previousVariables, variables)) {\n                                _this.refetch();\n                            }\n                            else {\n                                iterateObserversSafely(_this.observers, 'next', result);\n                            }\n                        });\n                    }\n                    else {\n                        iterateObserversSafely(_this.observers, 'next', result);\n                    }\n                }\n            },\n            error: onError,\n        }).catch(onError);\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        var queryManager = this.queryManager;\n        this.isTornDown = true;\n        queryManager.stopPollingQuery(this.queryId);\n        this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptions.clear();\n        queryManager.removeObservableQuery(this.queryId);\n        queryManager.stopQuery(this.queryId);\n        this.observers.clear();\n    };\n    return ObservableQuery;\n}(Observable));\nfunction defaultSubscriptionObserverErrorCallback(error) {\n     true || false;\n}\nfunction iterateObserversSafely(observers, method, argument) {\n    var observersWithMethod = [];\n    observers.forEach(function (obs) { return obs[method] && observersWithMethod.push(obs); });\n    observersWithMethod.forEach(function (obs) { return obs[method](argument); });\n}\nfunction assertNotCacheFirstOrOnly(obsQuery) {\n    var fetchPolicy = obsQuery.options.fetchPolicy;\n     true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 3) : undefined;\n}\n\nvar MutationStore = (function () {\n    function MutationStore() {\n        this.store = {};\n    }\n    MutationStore.prototype.getStore = function () {\n        return this.store;\n    };\n    MutationStore.prototype.get = function (mutationId) {\n        return this.store[mutationId];\n    };\n    MutationStore.prototype.initMutation = function (mutationId, mutation, variables) {\n        this.store[mutationId] = {\n            mutation: mutation,\n            variables: variables || {},\n            loading: true,\n            error: null,\n        };\n    };\n    MutationStore.prototype.markMutationError = function (mutationId, error) {\n        var mutation = this.store[mutationId];\n        if (mutation) {\n            mutation.loading = false;\n            mutation.error = error;\n        }\n    };\n    MutationStore.prototype.markMutationResult = function (mutationId) {\n        var mutation = this.store[mutationId];\n        if (mutation) {\n            mutation.loading = false;\n            mutation.error = null;\n        }\n    };\n    MutationStore.prototype.reset = function () {\n        this.store = {};\n    };\n    return MutationStore;\n}());\n\nvar QueryStore = (function () {\n    function QueryStore() {\n        this.store = {};\n    }\n    QueryStore.prototype.getStore = function () {\n        return this.store;\n    };\n    QueryStore.prototype.get = function (queryId) {\n        return this.store[queryId];\n    };\n    QueryStore.prototype.initQuery = function (query) {\n        var previousQuery = this.store[query.queryId];\n         true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(!previousQuery ||\n            previousQuery.document === query.document ||\n            Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_2__[/* equal */ \"a\"])(previousQuery.document, query.document), 19) : undefined;\n        var isSetVariables = false;\n        var previousVariables = null;\n        if (query.storePreviousVariables &&\n            previousQuery &&\n            previousQuery.networkStatus !== NetworkStatus.loading) {\n            if (!Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_2__[/* equal */ \"a\"])(previousQuery.variables, query.variables)) {\n                isSetVariables = true;\n                previousVariables = previousQuery.variables;\n            }\n        }\n        var networkStatus;\n        if (isSetVariables) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        else if (query.isPoll) {\n            networkStatus = NetworkStatus.poll;\n        }\n        else if (query.isRefetch) {\n            networkStatus = NetworkStatus.refetch;\n        }\n        else {\n            networkStatus = NetworkStatus.loading;\n        }\n        var graphQLErrors = [];\n        if (previousQuery && previousQuery.graphQLErrors) {\n            graphQLErrors = previousQuery.graphQLErrors;\n        }\n        this.store[query.queryId] = {\n            document: query.document,\n            variables: query.variables,\n            previousVariables: previousVariables,\n            networkError: null,\n            graphQLErrors: graphQLErrors,\n            networkStatus: networkStatus,\n            metadata: query.metadata,\n        };\n        if (typeof query.fetchMoreForQueryId === 'string' &&\n            this.store[query.fetchMoreForQueryId]) {\n            this.store[query.fetchMoreForQueryId].networkStatus =\n                NetworkStatus.fetchMore;\n        }\n    };\n    QueryStore.prototype.markQueryResult = function (queryId, result, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = NetworkStatus.ready;\n        if (typeof fetchMoreForQueryId === 'string' &&\n            this.store[fetchMoreForQueryId]) {\n            this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n        }\n    };\n    QueryStore.prototype.markQueryError = function (queryId, error, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = error;\n        this.store[queryId].networkStatus = NetworkStatus.error;\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.markQueryResultClient(fetchMoreForQueryId, true);\n        }\n    };\n    QueryStore.prototype.markQueryResultClient = function (queryId, complete) {\n        var storeValue = this.store && this.store[queryId];\n        if (storeValue) {\n            storeValue.networkError = null;\n            storeValue.previousVariables = null;\n            if (complete) {\n                storeValue.networkStatus = NetworkStatus.ready;\n            }\n        }\n    };\n    QueryStore.prototype.stopQuery = function (queryId) {\n        delete this.store[queryId];\n    };\n    QueryStore.prototype.reset = function (observableQueryIds) {\n        var _this = this;\n        Object.keys(this.store).forEach(function (queryId) {\n            if (observableQueryIds.indexOf(queryId) < 0) {\n                _this.stopQuery(queryId);\n            }\n            else {\n                _this.store[queryId].networkStatus = NetworkStatus.loading;\n            }\n        });\n    };\n    return QueryStore;\n}());\n\nfunction capitalizeFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar LocalState = (function () {\n    function LocalState(_a) {\n        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;\n        this.cache = cache;\n        if (client) {\n            this.client = client;\n        }\n        if (resolvers) {\n            this.addResolvers(resolvers);\n        }\n        if (fragmentMatcher) {\n            this.setFragmentMatcher(fragmentMatcher);\n        }\n    }\n    LocalState.prototype.addResolvers = function (resolvers) {\n        var _this = this;\n        this.resolvers = this.resolvers || {};\n        if (Array.isArray(resolvers)) {\n            resolvers.forEach(function (resolverGroup) {\n                _this.resolvers = Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* mergeDeep */ \"A\"])(_this.resolvers, resolverGroup);\n            });\n        }\n        else {\n            this.resolvers = Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* mergeDeep */ \"A\"])(this.resolvers, resolvers);\n        }\n    };\n    LocalState.prototype.setResolvers = function (resolvers) {\n        this.resolvers = {};\n        this.addResolvers(resolvers);\n    };\n    LocalState.prototype.getResolvers = function () {\n        return this.resolvers || {};\n    };\n    LocalState.prototype.runResolvers = function (_a) {\n        var document = _a.document, remoteResult = _a.remoteResult, context = _a.context, variables = _a.variables, _b = _a.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"b\"])(this, void 0, void 0, function () {\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __generator */ \"d\"])(this, function (_c) {\n                if (document) {\n                    return [2, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) { return (Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, remoteResult), { data: localResult.result })); })];\n                }\n                return [2, remoteResult];\n            });\n        });\n    };\n    LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {\n        this.fragmentMatcher = fragmentMatcher;\n    };\n    LocalState.prototype.getFragmentMatcher = function () {\n        return this.fragmentMatcher;\n    };\n    LocalState.prototype.clientQuery = function (document) {\n        if (Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* hasDirectives */ \"s\"])(['client'], document)) {\n            if (this.resolvers) {\n                return document;\n            }\n             true || false;\n        }\n        return null;\n    };\n    LocalState.prototype.serverQuery = function (document) {\n        return this.resolvers ? Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* removeClientSetsFromDocument */ \"C\"])(document) : document;\n    };\n    LocalState.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var cache = this.cache;\n        var newContext = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, context), { cache: cache, getCacheKey: function (obj) {\n                if (cache.config) {\n                    return cache.config.dataIdFromObject(obj);\n                }\n                else {\n                     true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(false, 6) : undefined;\n                }\n            } });\n        return newContext;\n    };\n    LocalState.prototype.addExportedVariables = function (document, variables, context) {\n        if (variables === void 0) { variables = {}; }\n        if (context === void 0) { context = {}; }\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"b\"])(this, void 0, void 0, function () {\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __generator */ \"d\"])(this, function (_a) {\n                if (document) {\n                    return [2, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) { return (Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, variables), data.exportedVariables)); })];\n                }\n                return [2, Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, variables)];\n            });\n        });\n    };\n    LocalState.prototype.shouldForceResolvers = function (document) {\n        var forceResolvers = false;\n        Object(graphql_language_visitor__WEBPACK_IMPORTED_MODULE_7__[/* visit */ \"b\"])(document, {\n            Directive: {\n                enter: function (node) {\n                    if (node.name.value === 'client' && node.arguments) {\n                        forceResolvers = node.arguments.some(function (arg) {\n                            return arg.name.value === 'always' &&\n                                arg.value.kind === 'BooleanValue' &&\n                                arg.value.value === true;\n                        });\n                        if (forceResolvers) {\n                            return graphql_language_visitor__WEBPACK_IMPORTED_MODULE_7__[/* BREAK */ \"a\"];\n                        }\n                    }\n                },\n            },\n        });\n        return forceResolvers;\n    };\n    LocalState.prototype.buildRootValueFromCache = function (document, variables) {\n        return this.cache.diff({\n            query: Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* buildQueryFromSelectionSet */ \"d\"])(document),\n            variables: variables,\n            returnPartialData: true,\n            optimistic: false,\n        }).result;\n    };\n    LocalState.prototype.resolveDocument = function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\n        if (context === void 0) { context = {}; }\n        if (variables === void 0) { variables = {}; }\n        if (fragmentMatcher === void 0) { fragmentMatcher = function () { return true; }; }\n        if (onlyRunForcedResolvers === void 0) { onlyRunForcedResolvers = false; }\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"b\"])(this, void 0, void 0, function () {\n            var mainDefinition, fragments, fragmentMap, definitionOperation, defaultOperationType, _a, cache, client, execContext;\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __generator */ \"d\"])(this, function (_b) {\n                mainDefinition = Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* getMainDefinition */ \"l\"])(document);\n                fragments = Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* getFragmentDefinitions */ \"j\"])(document);\n                fragmentMap = Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* createFragmentMap */ \"g\"])(fragments);\n                definitionOperation = mainDefinition\n                    .operation;\n                defaultOperationType = definitionOperation\n                    ? capitalizeFirstLetter(definitionOperation)\n                    : 'Query';\n                _a = this, cache = _a.cache, client = _a.client;\n                execContext = {\n                    fragmentMap: fragmentMap,\n                    context: Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, context), { cache: cache,\n                        client: client }),\n                    variables: variables,\n                    fragmentMatcher: fragmentMatcher,\n                    defaultOperationType: defaultOperationType,\n                    exportedVariables: {},\n                    onlyRunForcedResolvers: onlyRunForcedResolvers,\n                };\n                return [2, this.resolveSelectionSet(mainDefinition.selectionSet, rootValue, execContext).then(function (result) { return ({\n                        result: result,\n                        exportedVariables: execContext.exportedVariables,\n                    }); })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSelectionSet = function (selectionSet, rootValue, execContext) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"b\"])(this, void 0, void 0, function () {\n            var fragmentMap, context, variables, resultsToMerge, execute;\n            var _this = this;\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __generator */ \"d\"])(this, function (_a) {\n                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\n                resultsToMerge = [rootValue];\n                execute = function (selection) { return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"b\"])(_this, void 0, void 0, function () {\n                    var fragment, typeCondition;\n                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __generator */ \"d\"])(this, function (_a) {\n                        if (!Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* shouldInclude */ \"F\"])(selection, variables)) {\n                            return [2];\n                        }\n                        if (Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* isField */ \"t\"])(selection)) {\n                            return [2, this.resolveField(selection, rootValue, execContext).then(function (fieldResult) {\n                                    var _a;\n                                    if (typeof fieldResult !== 'undefined') {\n                                        resultsToMerge.push((_a = {},\n                                            _a[Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* resultKeyNameFromField */ \"E\"])(selection)] = fieldResult,\n                                            _a));\n                                    }\n                                })];\n                        }\n                        if (Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* isInlineFragment */ \"v\"])(selection)) {\n                            fragment = selection;\n                        }\n                        else {\n                            fragment = fragmentMap[selection.name.value];\n                             true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(fragment, 7) : undefined;\n                        }\n                        if (fragment && fragment.typeCondition) {\n                            typeCondition = fragment.typeCondition.name.value;\n                            if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n                                return [2, this.resolveSelectionSet(fragment.selectionSet, rootValue, execContext).then(function (fragmentResult) {\n                                        resultsToMerge.push(fragmentResult);\n                                    })];\n                            }\n                        }\n                        return [2];\n                    });\n                }); };\n                return [2, Promise.all(selectionSet.selections.map(execute)).then(function () {\n                        return Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* mergeDeepArray */ \"B\"])(resultsToMerge);\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveField = function (field, rootValue, execContext) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"b\"])(this, void 0, void 0, function () {\n            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\n            var _this = this;\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __generator */ \"d\"])(this, function (_a) {\n                variables = execContext.variables;\n                fieldName = field.name.value;\n                aliasedFieldName = Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* resultKeyNameFromField */ \"E\"])(field);\n                aliasUsed = fieldName !== aliasedFieldName;\n                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n                resultPromise = Promise.resolve(defaultResult);\n                if (!execContext.onlyRunForcedResolvers ||\n                    this.shouldForceResolvers(field)) {\n                    resolverType = rootValue.__typename || execContext.defaultOperationType;\n                    resolverMap = this.resolvers && this.resolvers[resolverType];\n                    if (resolverMap) {\n                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n                        if (resolve) {\n                            resultPromise = Promise.resolve(resolve(rootValue, Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* argumentsObjectFromField */ \"b\"])(field, variables), execContext.context, { field: field, fragmentMap: execContext.fragmentMap }));\n                        }\n                    }\n                }\n                return [2, resultPromise.then(function (result) {\n                        if (result === void 0) { result = defaultResult; }\n                        if (field.directives) {\n                            field.directives.forEach(function (directive) {\n                                if (directive.name.value === 'export' && directive.arguments) {\n                                    directive.arguments.forEach(function (arg) {\n                                        if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                                            execContext.exportedVariables[arg.value.value] = result;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        if (!field.selectionSet) {\n                            return result;\n                        }\n                        if (result == null) {\n                            return result;\n                        }\n                        if (Array.isArray(result)) {\n                            return _this.resolveSubSelectedArray(field, result, execContext);\n                        }\n                        if (field.selectionSet) {\n                            return _this.resolveSelectionSet(field.selectionSet, result, execContext);\n                        }\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSubSelectedArray = function (field, result, execContext) {\n        var _this = this;\n        return Promise.all(result.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return _this.resolveSubSelectedArray(field, item, execContext);\n            }\n            if (field.selectionSet) {\n                return _this.resolveSelectionSet(field.selectionSet, item, execContext);\n            }\n        }));\n    };\n    return LocalState;\n}());\n\nfunction multiplex(inner) {\n    var observers = new Set();\n    var sub = null;\n    return new Observable(function (observer) {\n        observers.add(observer);\n        sub = sub || inner.subscribe({\n            next: function (value) {\n                observers.forEach(function (obs) { return obs.next && obs.next(value); });\n            },\n            error: function (error) {\n                observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n            complete: function () {\n                observers.forEach(function (obs) { return obs.complete && obs.complete(); });\n            },\n        });\n        return function () {\n            if (observers.delete(observer) && !observers.size && sub) {\n                sub.unsubscribe();\n                sub = null;\n            }\n        };\n    });\n}\nfunction asyncMap(observable, mapFn) {\n    return new Observable(function (observer) {\n        var next = observer.next, error = observer.error, complete = observer.complete;\n        var activeNextCount = 0;\n        var completed = false;\n        var handler = {\n            next: function (value) {\n                ++activeNextCount;\n                new Promise(function (resolve) {\n                    resolve(mapFn(value));\n                }).then(function (result) {\n                    --activeNextCount;\n                    next && next.call(observer, result);\n                    completed && handler.complete();\n                }, function (e) {\n                    --activeNextCount;\n                    error && error.call(observer, e);\n                });\n            },\n            error: function (e) {\n                error && error.call(observer, e);\n            },\n            complete: function () {\n                completed = true;\n                if (!activeNextCount) {\n                    complete && complete.call(observer);\n                }\n            },\n        };\n        var sub = observable.subscribe(handler);\n        return function () { return sub.unsubscribe(); };\n    });\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar QueryManager = (function () {\n    function QueryManager(_a) {\n        var link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, store = _a.store, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d, _e = _a.clientAwareness, clientAwareness = _e === void 0 ? {} : _e, localState = _a.localState, assumeImmutableResults = _a.assumeImmutableResults;\n        this.mutationStore = new MutationStore();\n        this.queryStore = new QueryStore();\n        this.clientAwareness = {};\n        this.idCounter = 1;\n        this.queries = new Map();\n        this.fetchQueryRejectFns = new Map();\n        this.transformCache = new (apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* canUseWeakMap */ \"e\"] ? WeakMap : Map)();\n        this.inFlightLinkObservables = new Map();\n        this.pollingInfoByQueryId = new Map();\n        this.link = link;\n        this.queryDeduplication = queryDeduplication;\n        this.dataStore = store;\n        this.onBroadcast = onBroadcast;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new LocalState({ cache: store.getCache() });\n        this.ssrMode = ssrMode;\n        this.assumeImmutableResults = !!assumeImmutableResults;\n    }\n    QueryManager.prototype.stop = function () {\n        var _this = this;\n        this.queries.forEach(function (_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject( true ? new ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* InvariantError */ \"a\"](8) : undefined);\n        });\n    };\n    QueryManager.prototype.mutate = function (_a) {\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, updateWithProxyFn = _a.update, _d = _a.errorPolicy, errorPolicy = _d === void 0 ? 'none' : _d, fetchPolicy = _a.fetchPolicy, _e = _a.context, context = _e === void 0 ? {} : _e;\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"b\"])(this, void 0, void 0, function () {\n            var mutationId, generateUpdateQueriesInfo, self;\n            var _this = this;\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __generator */ \"d\"])(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                         true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(mutation, 9) : undefined;\n                         true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(!fetchPolicy || fetchPolicy === 'no-cache', 10) : undefined;\n                        mutationId = this.generateQueryId();\n                        mutation = this.transform(mutation).document;\n                        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n                        variables = this.getVariables(mutation, variables);\n                        if (!this.transform(mutation).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(mutation, variables, context)];\n                    case 1:\n                        variables = _f.sent();\n                        _f.label = 2;\n                    case 2:\n                        generateUpdateQueriesInfo = function () {\n                            var ret = {};\n                            if (updateQueriesByName) {\n                                _this.queries.forEach(function (_a, queryId) {\n                                    var observableQuery = _a.observableQuery;\n                                    if (observableQuery) {\n                                        var queryName = observableQuery.queryName;\n                                        if (queryName &&\n                                            hasOwnProperty.call(updateQueriesByName, queryName)) {\n                                            ret[queryId] = {\n                                                updater: updateQueriesByName[queryName],\n                                                query: _this.queryStore.get(queryId),\n                                            };\n                                        }\n                                    }\n                                });\n                            }\n                            return ret;\n                        };\n                        this.mutationStore.initMutation(mutationId, mutation, variables);\n                        this.dataStore.markMutationInit({\n                            mutationId: mutationId,\n                            document: mutation,\n                            variables: variables,\n                            updateQueries: generateUpdateQueriesInfo(),\n                            update: updateWithProxyFn,\n                            optimisticResponse: optimisticResponse,\n                        });\n                        this.broadcastQueries();\n                        self = this;\n                        return [2, new Promise(function (resolve, reject) {\n                                var storeResult;\n                                var error;\n                                self.getObservableFromLink(mutation, Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, context), { optimisticResponse: optimisticResponse }), variables, false).subscribe({\n                                    next: function (result) {\n                                        if (Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* graphQLResultHasError */ \"q\"])(result) && errorPolicy === 'none') {\n                                            error = new ApolloError({\n                                                graphQLErrors: result.errors,\n                                            });\n                                            return;\n                                        }\n                                        self.mutationStore.markMutationResult(mutationId);\n                                        if (fetchPolicy !== 'no-cache') {\n                                            self.dataStore.markMutationResult({\n                                                mutationId: mutationId,\n                                                result: result,\n                                                document: mutation,\n                                                variables: variables,\n                                                updateQueries: generateUpdateQueriesInfo(),\n                                                update: updateWithProxyFn,\n                                            });\n                                        }\n                                        storeResult = result;\n                                    },\n                                    error: function (err) {\n                                        self.mutationStore.markMutationError(mutationId, err);\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        self.setQuery(mutationId, function () { return ({ document: null }); });\n                                        reject(new ApolloError({\n                                            networkError: err,\n                                        }));\n                                    },\n                                    complete: function () {\n                                        if (error) {\n                                            self.mutationStore.markMutationError(mutationId, error);\n                                        }\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        if (error) {\n                                            reject(error);\n                                            return;\n                                        }\n                                        if (typeof refetchQueries === 'function') {\n                                            refetchQueries = refetchQueries(storeResult);\n                                        }\n                                        var refetchQueryPromises = [];\n                                        if (isNonEmptyArray(refetchQueries)) {\n                                            refetchQueries.forEach(function (refetchQuery) {\n                                                if (typeof refetchQuery === 'string') {\n                                                    self.queries.forEach(function (_a) {\n                                                        var observableQuery = _a.observableQuery;\n                                                        if (observableQuery &&\n                                                            observableQuery.queryName === refetchQuery) {\n                                                            refetchQueryPromises.push(observableQuery.refetch());\n                                                        }\n                                                    });\n                                                }\n                                                else {\n                                                    var queryOptions = {\n                                                        query: refetchQuery.query,\n                                                        variables: refetchQuery.variables,\n                                                        fetchPolicy: 'network-only',\n                                                    };\n                                                    if (refetchQuery.context) {\n                                                        queryOptions.context = refetchQuery.context;\n                                                    }\n                                                    refetchQueryPromises.push(self.query(queryOptions));\n                                                }\n                                            });\n                                        }\n                                        Promise.all(awaitRefetchQueries ? refetchQueryPromises : []).then(function () {\n                                            self.setQuery(mutationId, function () { return ({ document: null }); });\n                                            if (errorPolicy === 'ignore' &&\n                                                storeResult &&\n                                                Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* graphQLResultHasError */ \"q\"])(storeResult)) {\n                                                delete storeResult.errors;\n                                            }\n                                            resolve(storeResult);\n                                        });\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, fetchMoreForQueryId) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"b\"])(this, void 0, void 0, function () {\n            var _a, metadata, _b, fetchPolicy, _c, context, query, variables, storeResult, isNetworkOnly, needToFetch, _d, complete, result, shouldFetch, requestId, cancel, networkResult;\n            var _this = this;\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __generator */ \"d\"])(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = options.metadata, metadata = _a === void 0 ? null : _a, _b = options.fetchPolicy, fetchPolicy = _b === void 0 ? 'cache-first' : _b, _c = options.context, context = _c === void 0 ? {} : _c;\n                        query = this.transform(options.query).document;\n                        variables = this.getVariables(query, options.variables);\n                        if (!this.transform(query).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(query, variables, context)];\n                    case 1:\n                        variables = _e.sent();\n                        _e.label = 2;\n                    case 2:\n                        options = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, options), { variables: variables });\n                        isNetworkOnly = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n                        needToFetch = isNetworkOnly;\n                        if (!isNetworkOnly) {\n                            _d = this.dataStore.getCache().diff({\n                                query: query,\n                                variables: variables,\n                                returnPartialData: true,\n                                optimistic: false,\n                            }), complete = _d.complete, result = _d.result;\n                            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n                            storeResult = result;\n                        }\n                        shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n                        if (Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* hasDirectives */ \"s\"])(['live'], query))\n                            shouldFetch = true;\n                        requestId = this.idCounter++;\n                        cancel = fetchPolicy !== 'no-cache'\n                            ? this.updateQueryWatch(queryId, query, options)\n                            : undefined;\n                        this.setQuery(queryId, function () { return ({\n                            document: query,\n                            lastRequestId: requestId,\n                            invalidated: true,\n                            cancel: cancel,\n                        }); });\n                        this.invalidate(fetchMoreForQueryId);\n                        this.queryStore.initQuery({\n                            queryId: queryId,\n                            document: query,\n                            storePreviousVariables: shouldFetch,\n                            variables: variables,\n                            isPoll: fetchType === FetchType.poll,\n                            isRefetch: fetchType === FetchType.refetch,\n                            metadata: metadata,\n                            fetchMoreForQueryId: fetchMoreForQueryId,\n                        });\n                        this.broadcastQueries();\n                        if (shouldFetch) {\n                            networkResult = this.fetchRequest({\n                                requestId: requestId,\n                                queryId: queryId,\n                                document: query,\n                                options: options,\n                                fetchMoreForQueryId: fetchMoreForQueryId,\n                            }).catch(function (error) {\n                                if (isApolloError(error)) {\n                                    throw error;\n                                }\n                                else {\n                                    if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                                        _this.invalidate(queryId);\n                                        _this.invalidate(fetchMoreForQueryId);\n                                        _this.broadcastQueries();\n                                    }\n                                    throw new ApolloError({ networkError: error });\n                                }\n                            });\n                            if (fetchPolicy !== 'cache-and-network') {\n                                return [2, networkResult];\n                            }\n                            networkResult.catch(function () { });\n                        }\n                        this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n                        this.invalidate(queryId);\n                        this.invalidate(fetchMoreForQueryId);\n                        if (this.transform(query).hasForcedResolvers) {\n                            return [2, this.localState.runResolvers({\n                                    document: query,\n                                    remoteResult: { data: storeResult },\n                                    context: context,\n                                    variables: variables,\n                                    onlyRunForcedResolvers: true,\n                                }).then(function (result) {\n                                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                                    _this.broadcastQueries();\n                                    return result;\n                                })];\n                        }\n                        this.broadcastQueries();\n                        return [2, { data: storeResult }];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.markQueryResult = function (queryId, result, _a, fetchMoreForQueryId) {\n        var fetchPolicy = _a.fetchPolicy, variables = _a.variables, errorPolicy = _a.errorPolicy;\n        if (fetchPolicy === 'no-cache') {\n            this.setQuery(queryId, function () { return ({\n                newData: { result: result.data, complete: true },\n            }); });\n        }\n        else {\n            this.dataStore.markQueryResult(result, this.getQuery(queryId).document, variables, fetchMoreForQueryId, errorPolicy === 'ignore' || errorPolicy === 'all');\n        }\n    };\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        function invoke(method, argument) {\n            if (observer[method]) {\n                try {\n                    observer[method](argument);\n                }\n                catch (e) {\n                     true || false;\n                }\n            }\n            else if (method === 'error') {\n                 true || false;\n            }\n        }\n        return function (queryStoreValue, newData) {\n            _this.invalidate(queryId, false);\n            if (!queryStoreValue)\n                return;\n            var _a = _this.getQuery(queryId), observableQuery = _a.observableQuery, document = _a.document;\n            var fetchPolicy = observableQuery\n                ? observableQuery.options.fetchPolicy\n                : options.fetchPolicy;\n            if (fetchPolicy === 'standby')\n                return;\n            var loading = isNetworkRequestInFlight(queryStoreValue.networkStatus);\n            var lastResult = observableQuery && observableQuery.getLastResult();\n            var networkStatusChanged = !!(lastResult &&\n                lastResult.networkStatus !== queryStoreValue.networkStatus);\n            var shouldNotifyIfLoading = options.returnPartialData ||\n                (!newData && queryStoreValue.previousVariables) ||\n                (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                fetchPolicy === 'cache-only' ||\n                fetchPolicy === 'cache-and-network';\n            if (loading && !shouldNotifyIfLoading) {\n                return;\n            }\n            var hasGraphQLErrors = isNonEmptyArray(queryStoreValue.graphQLErrors);\n            var errorPolicy = observableQuery\n                && observableQuery.options.errorPolicy\n                || options.errorPolicy\n                || 'none';\n            if (errorPolicy === 'none' && hasGraphQLErrors || queryStoreValue.networkError) {\n                return invoke('error', new ApolloError({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }));\n            }\n            try {\n                var data = void 0;\n                var isMissing = void 0;\n                if (newData) {\n                    if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n                        _this.setQuery(queryId, function () { return ({ newData: null }); });\n                    }\n                    data = newData.result;\n                    isMissing = !newData.complete;\n                }\n                else {\n                    var lastError = observableQuery && observableQuery.getLastError();\n                    var errorStatusChanged = errorPolicy !== 'none' &&\n                        (lastError && lastError.graphQLErrors) !==\n                            queryStoreValue.graphQLErrors;\n                    if (lastResult && lastResult.data && !errorStatusChanged) {\n                        data = lastResult.data;\n                        isMissing = false;\n                    }\n                    else {\n                        var diffResult = _this.dataStore.getCache().diff({\n                            query: document,\n                            variables: queryStoreValue.previousVariables ||\n                                queryStoreValue.variables,\n                            returnPartialData: true,\n                            optimistic: true,\n                        });\n                        data = diffResult.result;\n                        isMissing = !diffResult.complete;\n                    }\n                }\n                var stale = isMissing && !(options.returnPartialData ||\n                    fetchPolicy === 'cache-only');\n                var resultFromStore = {\n                    data: stale ? lastResult && lastResult.data : data,\n                    loading: loading,\n                    networkStatus: queryStoreValue.networkStatus,\n                    stale: stale,\n                };\n                if (errorPolicy === 'all' && hasGraphQLErrors) {\n                    resultFromStore.errors = queryStoreValue.graphQLErrors;\n                }\n                invoke('next', resultFromStore);\n            }\n            catch (networkError) {\n                invoke('error', new ApolloError({ networkError: networkError }));\n            }\n        };\n    };\n    QueryManager.prototype.transform = function (document) {\n        var transformCache = this.transformCache;\n        if (!transformCache.has(document)) {\n            var cache = this.dataStore.getCache();\n            var transformed = cache.transformDocument(document);\n            var forLink = Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* removeConnectionDirectiveFromDocument */ \"D\"])(cache.transformForLink(transformed));\n            var clientQuery = this.localState.clientQuery(transformed);\n            var serverQuery = this.localState.serverQuery(forLink);\n            var cacheEntry_1 = {\n                document: transformed,\n                hasClientExports: Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* hasClientExports */ \"r\"])(transformed),\n                hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n                clientQuery: clientQuery,\n                serverQuery: serverQuery,\n                defaultVars: Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* getDefaultValues */ \"h\"])(Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* getOperationDefinition */ \"m\"])(transformed)),\n            };\n            var add = function (doc) {\n                if (doc && !transformCache.has(doc)) {\n                    transformCache.set(doc, cacheEntry_1);\n                }\n            };\n            add(document);\n            add(transformed);\n            add(clientQuery);\n            add(serverQuery);\n        }\n        return transformCache.get(document);\n    };\n    QueryManager.prototype.getVariables = function (document, variables) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, this.transform(document).defaultVars), variables);\n    };\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n         true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(options.fetchPolicy !== 'standby', 11) : undefined;\n        options.variables = this.getVariables(options.query, options.variables);\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, options);\n        return new ObservableQuery({\n            queryManager: this,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n         true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(options.query, 12) : undefined;\n         true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(options.query.kind === 'Document', 13) : undefined;\n         true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(!options.returnPartialData, 14) : undefined;\n         true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(!options.pollInterval, 15) : undefined;\n        return new Promise(function (resolve, reject) {\n            var watchedQuery = _this.watchQuery(options, false);\n            _this.fetchQueryRejectFns.set(\"query:\" + watchedQuery.queryId, reject);\n            watchedQuery\n                .result()\n                .then(resolve, reject)\n                .then(function () {\n                return _this.fetchQueryRejectFns.delete(\"query:\" + watchedQuery.queryId);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        return String(this.idCounter++);\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n        this.stopPollingQuery(queryId);\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(queryId);\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var listeners = _a.listeners;\n            listeners.add(listener);\n            return { invalidated: false };\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.dataStore.getCache().watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var cancel = this.getQuery(queryId).cancel;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (cancel)\n            cancel();\n    };\n    QueryManager.prototype.clearStore = function () {\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject( true ? new ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* InvariantError */ \"a\"](16) : undefined);\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        return this.dataStore.reset();\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var _this = this;\n        if (includeStandby === void 0) { includeStandby = false; }\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery) {\n                var fetchPolicy = observableQuery.options.fetchPolicy;\n                observableQuery.resetLastResults();\n                if (fetchPolicy !== 'cache-only' &&\n                    (includeStandby || fetchPolicy !== 'standby')) {\n                    observableQueryPromises.push(observableQuery.refetch());\n                }\n                _this.setQuery(queryId, function () { return ({ newData: null }); });\n                _this.invalidate(queryId);\n            }\n        });\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.observeQuery = function (queryId, options, observer) {\n        this.addQueryListener(queryId, this.queryListenerForObserver(queryId, options, observer));\n        return this.fetchQuery(queryId, options);\n    };\n    QueryManager.prototype.startQuery = function (queryId, options, listener) {\n         true || false;\n        this.addQueryListener(queryId, listener);\n        this.fetchQuery(queryId, options)\n            .catch(function () { return undefined; });\n        return queryId;\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (_a) {\n        var _this = this;\n        var query = _a.query, fetchPolicy = _a.fetchPolicy, variables = _a.variables;\n        query = this.transform(query).document;\n        variables = this.getVariables(query, variables);\n        var makeObservable = function (variables) {\n            return _this.getObservableFromLink(query, {}, variables, false).map(function (result) {\n                if (!fetchPolicy || fetchPolicy !== 'no-cache') {\n                    _this.dataStore.markSubscriptionResult(result, query, variables);\n                    _this.broadcastQueries();\n                }\n                if (Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* graphQLResultHasError */ \"q\"])(result)) {\n                    throw new ApolloError({\n                        graphQLErrors: result.errors,\n                    });\n                }\n                return result;\n            });\n        };\n        if (this.transform(query).hasClientExports) {\n            var observablePromise_1 = this.localState.addExportedVariables(query, variables).then(makeObservable);\n            return new Observable(function (observer) {\n                var sub = null;\n                observablePromise_1.then(function (observable) { return sub = observable.subscribe(observer); }, observer.error);\n                return function () { return sub && sub.unsubscribe(); };\n            });\n        }\n        return makeObservable(variables);\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        this.fetchQueryRejectFns.delete(\"query:\" + queryId);\n        this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n        this.getQuery(queryId).subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query, fetchPolicy = _a.fetchPolicy, returnPartialData = _a.returnPartialData;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        if (newData && newData.complete) {\n            return { data: newData.result, partial: false };\n        }\n        if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n            return { data: undefined, partial: false };\n        }\n        var _b = this.dataStore.getCache().diff({\n            query: query,\n            variables: variables,\n            previousResult: lastResult ? lastResult.data : undefined,\n            returnPartialData: true,\n            optimistic: optimistic,\n        }), result = _b.result, complete = _b.complete;\n        return {\n            data: (complete || returnPartialData) ? result : void 0,\n            partial: !complete,\n        };\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObserveableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n             true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(foundObserveableQuery, 17) : undefined;\n            observableQuery = foundObserveableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        return {\n            previousResult: this.getCurrentQueryResult(observableQuery, false).data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        var _this = this;\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (info.invalidated) {\n                info.listeners.forEach(function (listener) {\n                    if (listener) {\n                        listener(_this.queryStore.get(id), info.newData);\n                    }\n                });\n            }\n        });\n    };\n    QueryManager.prototype.getLocalState = function () {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableFromLink = function (query, context, variables, deduplication) {\n        var _this = this;\n        if (deduplication === void 0) { deduplication = this.queryDeduplication; }\n        var observable;\n        var serverQuery = this.transform(query).serverQuery;\n        if (serverQuery) {\n            var _a = this, inFlightLinkObservables_1 = _a.inFlightLinkObservables, link = _a.link;\n            var operation = {\n                query: serverQuery,\n                variables: variables,\n                operationName: Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* getOperationName */ \"n\"])(serverQuery) || void 0,\n                context: this.prepareContext(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, context), { forceFetch: !deduplication })),\n            };\n            context = operation.context;\n            if (deduplication) {\n                var byVariables_1 = inFlightLinkObservables_1.get(serverQuery) || new Map();\n                inFlightLinkObservables_1.set(serverQuery, byVariables_1);\n                var varJson_1 = JSON.stringify(variables);\n                observable = byVariables_1.get(varJson_1);\n                if (!observable) {\n                    byVariables_1.set(varJson_1, observable = multiplex(Object(apollo_link__WEBPACK_IMPORTED_MODULE_4__[\"execute\"])(link, operation)));\n                    var cleanup = function () {\n                        byVariables_1.delete(varJson_1);\n                        if (!byVariables_1.size)\n                            inFlightLinkObservables_1.delete(serverQuery);\n                        cleanupSub_1.unsubscribe();\n                    };\n                    var cleanupSub_1 = observable.subscribe({\n                        next: cleanup,\n                        error: cleanup,\n                        complete: cleanup,\n                    });\n                }\n            }\n            else {\n                observable = multiplex(Object(apollo_link__WEBPACK_IMPORTED_MODULE_4__[\"execute\"])(link, operation));\n            }\n        }\n        else {\n            observable = Observable.of({ data: {} });\n            context = this.prepareContext(context);\n        }\n        var clientQuery = this.transform(query).clientQuery;\n        if (clientQuery) {\n            observable = asyncMap(observable, function (result) {\n                return _this.localState.runResolvers({\n                    document: clientQuery,\n                    remoteResult: result,\n                    context: context,\n                    variables: variables,\n                });\n            });\n        }\n        return observable;\n    };\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            var observable = _this.getObservableFromLink(document, options.context, variables);\n            var fqrfId = \"fetchRequest:\" + queryId;\n            _this.fetchQueryRejectFns.set(fqrfId, reject);\n            var cleanup = function () {\n                _this.fetchQueryRejectFns.delete(fqrfId);\n                _this.setQuery(queryId, function (_a) {\n                    var subscriptions = _a.subscriptions;\n                    subscriptions.delete(subscription);\n                });\n            };\n            var subscription = observable.map(function (result) {\n                if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                    _this.queryStore.markQueryResult(queryId, result, fetchMoreForQueryId);\n                    _this.invalidate(queryId);\n                    _this.invalidate(fetchMoreForQueryId);\n                    _this.broadcastQueries();\n                }\n                if (errorPolicy === 'none' && isNonEmptyArray(result.errors)) {\n                    return reject(new ApolloError({\n                        graphQLErrors: result.errors,\n                    }));\n                }\n                if (errorPolicy === 'all') {\n                    errorsFromStore = result.errors;\n                }\n                if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                    resultFromStore = result.data;\n                }\n                else {\n                    var _a = _this.dataStore.getCache().diff({\n                        variables: variables,\n                        query: document,\n                        optimistic: false,\n                        returnPartialData: true,\n                    }), result_1 = _a.result, complete = _a.complete;\n                    if (complete || options.returnPartialData) {\n                        resultFromStore = result_1;\n                    }\n                }\n            }).subscribe({\n                error: function (error) {\n                    cleanup();\n                    reject(error);\n                },\n                complete: function () {\n                    cleanup();\n                    resolve({\n                        data: resultFromStore,\n                        errors: errorsFromStore,\n                        loading: false,\n                        networkStatus: NetworkStatus.ready,\n                        stale: false,\n                    });\n                },\n            });\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                subscriptions.add(subscription);\n            });\n        });\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return (this.queries.get(queryId) || {\n            listeners: new Set(),\n            invalidated: false,\n            document: null,\n            newData: null,\n            lastRequestId: 1,\n            observableQuery: null,\n            subscriptions: new Set(),\n        });\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, prev), updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (queryId, invalidated) {\n        if (invalidated === void 0) { invalidated = true; }\n        if (queryId) {\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    QueryManager.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var newContext = this.localState.prepareContext(context);\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, newContext), { clientAwareness: this.clientAwareness });\n    };\n    QueryManager.prototype.checkInFlight = function (queryId) {\n        var query = this.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== NetworkStatus.ready &&\n            query.networkStatus !== NetworkStatus.error);\n    };\n    QueryManager.prototype.startPollingQuery = function (options, queryId, listener) {\n        var _this = this;\n        var pollInterval = options.pollInterval;\n         true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(pollInterval, 18) : undefined;\n        if (!this.ssrMode) {\n            var info = this.pollingInfoByQueryId.get(queryId);\n            if (!info) {\n                this.pollingInfoByQueryId.set(queryId, (info = {}));\n            }\n            info.interval = pollInterval;\n            info.options = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, options), { fetchPolicy: 'network-only' });\n            var maybeFetch_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    if (_this.checkInFlight(queryId)) {\n                        poll_1();\n                    }\n                    else {\n                        _this.fetchQuery(queryId, info.options, FetchType.poll).then(poll_1, poll_1);\n                    }\n                }\n            };\n            var poll_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    clearTimeout(info.timeout);\n                    info.timeout = setTimeout(maybeFetch_1, info.interval);\n                }\n            };\n            if (listener) {\n                this.addQueryListener(queryId, listener);\n            }\n            poll_1();\n        }\n        return queryId;\n    };\n    QueryManager.prototype.stopPollingQuery = function (queryId) {\n        this.pollingInfoByQueryId.delete(queryId);\n    };\n    return QueryManager;\n}());\n\nvar DataStore = (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* graphQLResultHasError */ \"q\"])(result);\n        if (ignoreErrors && Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* graphQLResultHasError */ \"q\"])(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        if (!Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* graphQLResultHasError */ \"q\"])(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    _this.markMutationResult({\n                        mutationId: mutation.mutationId,\n                        result: { data: optimistic_1 },\n                        document: mutation.document,\n                        variables: mutation.variables,\n                        updateQueries: mutation.updateQueries,\n                        update: mutation.update,\n                    });\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        if (!Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* graphQLResultHasError */ \"q\"])(mutation.result)) {\n            var cacheWrites_1 = [{\n                    result: mutation.result.data,\n                    dataId: 'ROOT_MUTATION',\n                    query: mutation.document,\n                    variables: mutation.variables,\n                }];\n            var updateQueries_1 = mutation.updateQueries;\n            if (updateQueries_1) {\n                Object.keys(updateQueries_1).forEach(function (id) {\n                    var _a = updateQueries_1[id], query = _a.query, updater = _a.updater;\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (complete) {\n                        var nextQueryResult = Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* tryFunctionOrLogError */ \"I\"])(function () {\n                            return updater(currentQueryResult, {\n                                mutationResult: mutation.result,\n                                queryName: Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* getOperationName */ \"n\"])(query.document) || undefined,\n                                queryVariables: query.variables,\n                            });\n                        });\n                        if (nextQueryResult) {\n                            cacheWrites_1.push({\n                                result: nextQueryResult,\n                                dataId: 'ROOT_QUERY',\n                                query: query.document,\n                                variables: query.variables,\n                            });\n                        }\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n                var update = mutation.update;\n                if (update) {\n                    Object(apollo_utilities__WEBPACK_IMPORTED_MODULE_1__[/* tryFunctionOrLogError */ \"I\"])(function () { return update(c, mutation.result); });\n                }\n            });\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (optimisticResponse) {\n            this.cache.removeOptimistic(mutationId);\n        }\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\n\nvar version = \"2.6.10\";\n\nvar hasSuggestedDevtools = false;\nvar ApolloClient = (function () {\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        var cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions, _d = options.assumeImmutableResults, assumeImmutableResults = _d === void 0 ? false : _d, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link && resolvers) {\n            link = apollo_link__WEBPACK_IMPORTED_MODULE_4__[\"ApolloLink\"].empty();\n        }\n        if (!link || !cache) {\n            throw  true ? new ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* InvariantError */ \"a\"](4) : undefined;\n        }\n        this.link = link;\n        this.cache = cache;\n        this.store = new DataStore(cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.defaultOptions = defaultOptions || {};\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        var defaultConnectToDevTools =  false &&\n            false;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        if (!hasSuggestedDevtools && \"production\" !== 'production') {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    if (window.navigator &&\n                        window.navigator.userAgent &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = version;\n        this.localState = new LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher,\n        });\n        this.queryManager = new QueryManager({\n            link: this.link,\n            store: this.store,\n            queryDeduplication: queryDeduplication,\n            ssrMode: ssrMode,\n            clientAwareness: {\n                name: clientAwarenessName,\n                version: clientAwarenessVersion,\n            },\n            localState: this.localState,\n            assumeImmutableResults: assumeImmutableResults,\n            onBroadcast: function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.queryStore.getStore(),\n                            mutations: _this.queryManager.mutationStore.getStore(),\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            },\n        });\n    }\n    ApolloClient.prototype.stop = function () {\n        this.queryManager.stop();\n    };\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, this.defaultOptions.watchQuery), options);\n        }\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, this.defaultOptions.query), options);\n        }\n         true ? Object(ts_invariant__WEBPACK_IMPORTED_MODULE_6__[/* invariant */ \"b\"])(options.fetchPolicy !== 'cache-and-network', 5) : undefined;\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ \"a\"])({}, this.defaultOptions.mutate), options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readQuery(options, optimistic);\n    };\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readFragment(options, optimistic);\n    };\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.cache.writeQuery(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.cache.writeFragment(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeData = function (options) {\n        var result = this.cache.writeData(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return Object(apollo_link__WEBPACK_IMPORTED_MODULE_4__[\"execute\"])(this.link, payload);\n    };\n    ApolloClient.prototype.initQueryManager = function () {\n         true || false;\n        return this.queryManager;\n    };\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () { return _this.reFetchObservableQueries(); });\n    };\n    ApolloClient.prototype.clearStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); });\n    };\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.onClearStore = function (cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function () {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager.reFetchObservableQueries(includeStandby);\n    };\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.cache.extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.cache.restore(serializedState);\n    };\n    ApolloClient.prototype.addResolvers = function (resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    ApolloClient.prototype.setResolvers = function (resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    ApolloClient.prototype.getResolvers = function () {\n        return this.localState.getResolvers();\n    };\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    return ApolloClient;\n}());\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ApolloClient);\n\n//# sourceMappingURL=bundle.esm.js.map\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/rami/BHARA/BahraPro/BahraPro/node_modules/symbol-observable/es/ponyfill.js","/home/rami/BHARA/BahraPro/BahraPro/node_modules/@apollo/react-common/lib/react-common.esm.js","/home/rami/BHARA/BahraPro/BahraPro/node_modules/@apollo/react-components/node_modules/@apollo/react-hooks/lib/react-hooks.esm.js","/home/rami/BHARA/BahraPro/BahraPro/node_modules/@apollo/react-components/lib/react-components.esm.js","/home/rami/BHARA/BahraPro/BahraPro/node_modules/@apollo/react-hoc/lib/react-hoc.esm.js","/home/rami/BHARA/BahraPro/BahraPro/node_modules/react-apollo/node_modules/@apollo/react-hooks/lib/react-hooks.esm.js","/home/rami/BHARA/BahraPro/BahraPro/node_modules/react-apollo/node_modules/@apollo/react-ssr/lib/react-ssr.esm.js","/home/rami/BHARA/BahraPro/BahraPro/node_modules/react-apollo/lib/react-apollo.esm.js","/home/rami/BHARA/BahraPro/BahraPro/node_modules/symbol-observable/es/index.js","/home/rami/BHARA/BahraPro/BahraPro/node_modules/apollo-client/bundle.esm.js"],"names":[],"mappings":";;;;;;AAAA;AAAe;AACf;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChB0B;AACe;;AAEzC;AACA;AACA;AACA,wBAAwB,eAAK,iBAAiB;AAC9C;AACA;AACA;AACA;AACA,oBAAoB,eAAK,iBAAiB;AAC1C;;AAEA;AACA;AACA;AACA,WAAW,eAAK;AAChB,iCAAiC,cAAc;AAC/C;AACA,sCAAsC,YAAY,iBAAiB;AACnE;AACA,QAAQ,KAAqC,GAAG,0CAAS,sBAAsB,SACb;AAClE,gBAAgB,eAAK,wCAAwC,iBAAiB;AAC9E,KAAK;AACL;;AAEA;AACA;AACA,WAAW,eAAK;AAChB,QAAQ,KAAqC,GAAG,0CAAS,iCAAiC,SAC5B;AAC9D;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAqC,GAAG,0CAAS,qCAAqC,SAEtC;AACpD,8DAA8D,wCAAwC,EAAE;AACxG;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,IAAI,KAAqC,GAAG,0CAAS;AACrD,2EAA2E,SAEN;AACrE,IAAI,KAAqC,GAAG,0CAAS,qEAAqE,SAG1C;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAqC,GAAG,0CAAS,gCAAgC,SAEL;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEqH;AACrH;;;;;;;;;;;;AC9G6F;AACe;AAChE;AACuC;AACxB;AACrB;AACG;;AAEzC,IAAI,6BAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,uBAAuB;AAC9D,8BAA8B,qCAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAqC,GAAG,0CAAS,gBAAgB,SAErB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B,oCAAoC,aAAa;AACjD,gCAAgC,aAAa;AAC7C,QAAQ,KAAqC,GAAG,0CAAS,+BAA+B,SACI;AAC5F;AACA;AACA,CAAC;;AAED,IAAI,yBAAS;AACb,IAAI,sCAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kEAAkE;AAC5H,iDAAiD,yDAAyD;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,+DAA+D;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2BAAa;AAChD;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qCAAQ,CAAC,qCAAQ,GAAG;AACpD,8BAA8B,qCAAQ,CAAC,qCAAQ,GAAG;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qCAAQ,EAAE,+BAA+B,2BAAa,4EAA4E;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,YAAY;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qCAAQ,CAAC,qCAAQ,GAAG,aAAa,gEAAgE,kBAAkB,2BAA2B,EAAE,EAAE;AACjK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,qCAAQ,CAAC,qCAAQ,GAAG,4BAA4B,iBAAiB;AACxH,kFAAkF,qCAAQ,GAAG;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qCAAQ,CAAC,qCAAQ,GAAG,0CAA0C,iBAAiB;AACvH,aAAa,qCAAK;AAClB;AACA;AACA;AACA,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qCAAK;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qCAAK;AAC1B;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qBAAqB,qCAAQ,CAAC,qCAAQ,GAAG,YAAY,kEAAkE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAW,EAAE,wBAAwB;AACjE;AACA,qBAAqB,qCAAQ,CAAC,qCAAQ,GAAG,YAAY;AACrD;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,0BAA0B,qCAAQ,CAAC,qCAAQ,GAAG;AAC9C;AACA;AACA;AACA,6EAA6E;AAC7E;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2BAAa;AACpD,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qCAAK;AACrB,gBAAgB,qCAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,6BAAa;;AAEf;AACA,cAAc,uBAAM;AACpB,yBAAyB,qCAAK;AAC9B,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA,0BAA0B,cAAc;AACxC,kBAAkB,2BAAU,CAAC,gBAAgB;AAC7C,aAAa,2BAAU,eAAe,cAAc,EAAE;AACtD,mCAAmC,qCAAQ,CAAC,qCAAQ,GAAG,aAAa,eAAe,KAAK;AACxF,uBAAuB,uBAAM;AAC7B;AACA,YAAY,yBAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qCAAQ,CAAC,qCAAQ,GAAG,oBAAoB,6CAA6C;AACtG;AACA;AACA;AACA,0CAA0C,+DAA+D,EAAE;AAC3G;AACA;AACA;AACA,IAAI,0BAAS;AACb;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD,KAAK;AACL,IAAI,0BAAS,cAAc,gCAAgC,aAAa,EAAE,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,4BAAY;AAChB,IAAI,sCAAS;AACb;AACA;AACA;AACA;AACA,qDAAqD,8BAA8B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,mDAAmD,YAAY;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,YAAY;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2MAA2M;AAC3M,4BAA4B,qCAAQ,GAAG;AACvC,8CAA8C;AAC9C;AACA,kDAAkD,qCAAQ,EAAE;AAC5D;AACA,4GAA4G;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yBAAW,EAAE,wBAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qCAAK;AAC3C;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,6BAAa;;AAEf;AACA,kBAAkB,2BAAU,CAAC,gBAAgB;AAC7C,aAAa,yBAAQ,EAAE,gCAAgC;AACvD,mCAAmC,qCAAQ,CAAC,qCAAQ,GAAG,aAAa,qBAAqB,KAAK;AAC9F,0BAA0B,uBAAM;AAChC;AACA;AACA,0CAA0C,4BAAY;AACtD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0BAAS,cAAc,oCAAoC,EAAE;AACjE;AACA;;AAEA,IAAI,gCAAgB;AACpB,IAAI,sCAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qCAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qCAAQ,CAAC,qCAAQ,GAAG,mBAAmB,yCAAyC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,6BAAa;;AAEf;AACA,kBAAkB,2BAAU,CAAC,gBAAgB;AAC7C;AACA,UAAU,qCAAQ,CAAC,qCAAQ,GAAG,aAAa,6BAA6B,KAAK;AAC7E,aAAa,yBAAQ;AACrB;AACA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ACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAK,iCAAiC,qCAAQ,GAAG;AAC7E,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS,CAAC,yBAAW;AACrB,eAAe,qCAAoB,8BAA8B;AACjE;AACA;;AAEA;AACA,sCAAsC,uBAAuB;AAC7D,YAAY,MAAM;AAClB,aAAa,YAAY;AACzB;AACA,aAAa,YAAY;AACzB;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,uBAAuB;AAC7D;AACA;AACA,QAAQ,sCAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAqC,GAAG,0CAAS,gCAAgC,SAC1C;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAK,eAAe,cAAc;AACtD,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,iBAAiB;AACjB,uBAAuB,eAAK,iCAAiC,qCAAQ,GAAG;AACxE,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,CAAC,eAAK;AACX,WAAW,qCAAoB,iCAAiC;AAChE;;AAE0E;AAC1E;;;ACxS6F;AACe;AAChE;AACuC;AACxB;AACrB;AACG;;AAEzC,IAAI,iCAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,uBAAuB;AAC9D,8BAA8B,qCAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAqC,GAAG,0CAAS,gBAAgB,SAErB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B,oCAAoC,aAAa;AACjD,gCAAgC,aAAa;AAC7C,QAAQ,KAAqC,GAAG,0CAAS,+BAA+B,SACI;AAC5F;AACA;AACA,CAAC;;AAED,IAAI,6BAAS;AACb,IAAI,sCAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kEAAkE;AAC5H,iDAAiD,yDAAyD;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,+DAA+D;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2BAAa;AAChD;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qCAAQ,CAAC,qCAAQ,GAAG;AACpD,8BAA8B,qCAAQ,CAAC,qCAAQ,GAAG;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qCAAQ,EAAE,+BAA+B,2BAAa,4EAA4E;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,YAAY;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qCAAQ,CAAC,qCAAQ,GAAG,aAAa,gEAAgE,kBAAkB,2BAA2B,EAAE,EAAE;AACjK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,qCAAQ,CAAC,qCAAQ,GAAG,4BAA4B,iBAAiB;AACxH,kFAAkF,qCAAQ,GAAG;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qCAAQ,CAAC,qCAAQ,GAAG,0CAA0C,iBAAiB;AACvH,aAAa,qCAAK;AAClB;AACA;AACA;AACA,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qCAAK;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qCAAK;AAC1B;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qBAAqB,qCAAQ,CAAC,qCAAQ,GAAG,YAAY,kEAAkE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAW,EAAE,wBAAwB;AACjE;AACA,qBAAqB,qCAAQ,CAAC,qCAAQ,GAAG,YAAY;AACrD;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,0BAA0B,qCAAQ,CAAC,qCAAQ,GAAG;AAC9C;AACA;AACA;AACA,6EAA6E;AAC7E;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2BAAa;AACpD,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qCAAK;AACrB,gBAAgB,qCAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,iCAAa;;AAEf,SAAS,2BAAW;AACpB,cAAc,uBAAM;AACpB,yBAAyB,qCAAK;AAC9B,uBAAuB;AACvB;AACA;AACA;;AAEA,SAAS,4BAAY;AACrB,0BAA0B,cAAc;AACxC,kBAAkB,2BAAU,CAAC,gBAAgB;AAC7C,aAAa,2BAAU,eAAe,cAAc,EAAE;AACtD,mCAAmC,qCAAQ,CAAC,qCAAQ,GAAG,aAAa,eAAe,KAAK;AACxF,uBAAuB,uBAAM;AAC7B;AACA,YAAY,6BAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qCAAQ,CAAC,qCAAQ,GAAG,oBAAoB,6CAA6C;AACtG;AACA;AACA;AACA,iBAAiB,2BAAW,cAAc,+DAA+D,EAAE;AAC3G;AACA;AACA;AACA,IAAI,0BAAS;AACb;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD,KAAK;AACL,IAAI,0BAAS,cAAc,gCAAgC,aAAa,EAAE,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,wBAAQ;AACjB,WAAW,4BAAY;AACvB;;AAEA,SAAS,4BAAY;AACrB,WAAW,4BAAY;AACvB;;AAEA,IAAI,gCAAY;AAChB,IAAI,sCAAS;AACb;AACA;AACA;AACA;AACA,qDAAqD,8BAA8B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,mDAAmD,YAAY;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,YAAY;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2MAA2M;AAC3M,4BAA4B,qCAAQ,GAAG;AACvC,8CAA8C;AAC9C;AACA,kDAAkD,qCAAQ,EAAE;AAC5D;AACA,4GAA4G;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yBAAW,EAAE,wBAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qCAAK;AAC3C;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,iCAAa;;AAEf,SAAS,2BAAW;AACpB,kBAAkB,2BAAU,CAAC,gBAAgB;AAC7C,aAAa,yBAAQ,EAAE,gCAAgC;AACvD,mCAAmC,qCAAQ,CAAC,qCAAQ,GAAG,aAAa,qBAAqB,KAAK;AAC9F,0BAA0B,uBAAM;AAChC;AACA;AACA,0CAA0C,gCAAY;AACtD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0BAAS,cAAc,oCAAoC,EAAE;AACjE;AACA;;AAEA,IAAI,oCAAgB;AACpB,IAAI,sCAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qCAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qCAAQ,CAAC,qCAAQ,GAAG,mBAAmB,yCAAyC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,iCAAa;;AAEf,SAAS,+BAAe;AACxB,kBAAkB,2BAAU,CAAC,gBAAgB;AAC7C;AACA,UAAU,qCAAQ,CAAC,qCAAQ,GAAG,aAAa,6BAA6B,KAAK;AAC7E,aAAa,yBAAQ;AACrB;AACA;AACA;AACA,KAAK;AACL,8BAA8B,uBAAM;AACpC;AACA;AACA,8CAA8C,oCAAgB;AAC9D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0BAAS,cAAc,wCAAwC,EAAE;AACrE,IAAI,0BAAS,cAAc,wDAAwD,EAAE;AACrF;AACA;;AAEA,SAAS,+BAAe;AACxB,iBAAiB,eAAK,YAAY,gBAAgB;AAClD,IAAI,KAAqC,GAAG,0CAAS,cAAc,SACJ;AAC/D;AACA;;AAEA,SAAS,oCAAoB;AAC7B;AACA;AACA;AACA;AACA;AACA,IAAI,8BAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,oCAAoB;AACtE;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEgG;AACjG;;;ACvuBiC;AACP;AAC8B;AACH;;AAErD;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,MAAkB;AAClD,KAAK;AACL;AACA;AACA,qEAAqE,gEAAgE,mBAAO,CAAC,MAAkB;AAC/J,6BAA6B,8BAAc;AAC3C;AACA,4BAA4B,gBAAgB;AAC5C,kCAAkC,eAAK,wCAAwC,QAAQ,qCAAQ,CAAC,qCAAQ,GAAG,aAAa,iCAAiC,GAAG;AAC5J;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,MAAkB;AAClD,KAAK;AACL;;AAEsE;AACtE;;;AClC4G;AACnC;AAC0B;AACS;AACb;AAC/F;;;;;;;;;ACLA;AAAA;AACqC;;AAErC;;AAEA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC,UAAU,IAA6B;AACxC;AACA,CAAC,MAAM,EAEN;;AAED,aAAa,oEAAQ;AACN,+DAAM,EAAC;;;;;;;;;;AClBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACka;AACxZ;AACjC;AACY;AACD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;;AAEA;AACA,IAAI,+DAAS;AACb;AACA;AACA;AACA,yBAAyB,iEAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,2DAAY;;AAEd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;;AAE/B;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA,IAAI,+DAAS;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uFAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yCAAyC,8DAAQ,CAAC,8DAAQ,GAAG;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8DAAQ,CAAC,8DAAQ,GAAG,YAAY,eAAe;AACjF;AACA,eAAe,8DAAQ,CAAC,8DAAQ,GAAG,YAAY,mBAAmB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sEAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,KAAqC,OAAO,mEAAc,MAAM,SAAmG;AACrM;AACA;AACA;AACA;AACA;AACA,aAAa,sEAAO;AACpB,6BAA6B,8DAAQ,CAAC,8DAAQ,GAAG;AACjD;AACA,aAAa,sEAAO;AACpB,qCAAqC,8DAAQ,CAAC,8DAAQ,GAAG;AACzD;AACA,0DAA0D,8DAAQ,CAAC,8DAAQ,GAAG,kBAAkB,2BAA2B;AAC3H;AACA;AACA;AACA,QAAQ,KAAqC,GAAG,sEAAS,oCAAoC,SAAmJ;AAChP,8BAA8B,8DAAQ,CAAC,8DAAQ,GAAG,+CAA+C,8DAAQ,CAAC,8DAAQ,CAAC,8DAAQ,GAAG,qCAAqC,YAAY,8DAAQ,CAAC,8DAAQ,GAAG,gDAAgD,MAAM,8BAA8B;AACvR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB,KAAqC,IAAI,KAA4D;AACrH,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAAQ,CAAC,8DAAQ,GAAG;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kBAAkB;AACpD,sCAAsC,qBAAqB;AAC3D;AACA;AACA,yBAAyB,sEAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sFAAqB;AAC7C,0CAA0C,uBAAuB;AACjE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0EAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,8DAAQ,CAAC,8DAAQ,GAAG,sBAAsB,kFAAkF;AAC/J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sEAAO;AACxC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mDAAmD,0BAA0B,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,KAAqC,IAAI,KAA8D;AAC3G;AACA;AACA;AACA,sCAAsC,qDAAqD,EAAE;AAC7F,gDAAgD,8BAA8B,EAAE;AAChF;AACA;AACA;AACA,IAAI,KAAqC,GAAG,sEAAS,qEAAqE,SAA6K;AACvS;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAqC,GAAG,sEAAS;AACzD;AACA,YAAY,sEAAO,gDAAgD,SAE0D;AAC7H;AACA;AACA;AACA;AACA;AACA,iBAAiB,sEAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0EAAS;AAC3C,aAAa;AACb;AACA;AACA,6BAA6B,0EAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAS;AACxB,mBAAmB,iEAAW;AAC9B;AACA,gLAAgL,SAAS,8DAAQ,CAAC,8DAAQ,GAAG,kBAAkB,2BAA2B,GAAG,EAAE;AAC/P;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8EAAa;AACzB;AACA;AACA;AACA,YAAY,KAAqC,IAAI,KAGf;AACtC;AACA;AACA;AACA;AACA,gCAAgC,6FAA4B;AAC5D;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA,yBAAyB,8DAAQ,CAAC,8DAAQ,GAAG,aAAa;AAC1D;AACA;AACA;AACA;AACA,oBAAoB,KAAqC,GAAG,sEAAS,aAAa,SACK;AACvF;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,iCAAiC,cAAc;AAC/C,eAAe,+DAAS;AACxB,mBAAmB,iEAAW;AAC9B;AACA,qHAAqH,iEAAiE,SAAS,8DAAQ,CAAC,8DAAQ,GAAG,uCAAuC,EAAE;AAC5P;AACA,2BAA2B,8DAAQ,GAAG;AACtC,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,QAAQ,8EAAK;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mCAAmC,sEAAK;AACxC;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,2FAA0B;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iCAAiC,cAAc;AAC/C,mCAAmC,gBAAgB;AACnD,yCAAyC,gCAAgC,aAAa,GAAG;AACzF,gDAAgD,gCAAgC;AAChF,eAAe,+DAAS;AACxB;AACA,mBAAmB,iEAAW;AAC9B,iCAAiC,kFAAiB;AAClD,4BAA4B,uFAAsB;AAClD,8BAA8B,kFAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,8DAAQ,CAAC,8DAAQ,GAAG,aAAa;AAC9D,wCAAwC;AACxC;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,iIAAiI;AACjI;AACA;AACA,qBAAqB,EAAE,EAAE;AACzB,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,+DAAS;AACxB;AACA;AACA,mBAAmB,iEAAW;AAC9B;AACA;AACA,gDAAgD,QAAQ,+DAAS;AACjE;AACA,2BAA2B,iEAAW;AACtC,6BAA6B,8EAAa;AAC1C;AACA;AACA,4BAA4B,wEAAO;AACnC;AACA;AACA;AACA,oEAAoE;AACpE,+CAA+C,uFAAsB;AACrE;AACA;AACA,iCAAiC;AACjC;AACA,4BAA4B,iFAAgB;AAC5C;AACA;AACA;AACA;AACA,4BAA4B,KAAqC,GAAG,sEAAS,gBAAgB,SAAgE;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,EAAE;AACnB;AACA,+BAA+B,+EAAc;AAC7C,qBAAqB;AACrB,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,+DAAS;AACxB;AACA;AACA,mBAAmB,iEAAW;AAC9B;AACA;AACA,mCAAmC,uFAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,yFAAwB,0CAA0C,qDAAqD;AACtM;AACA;AACA;AACA;AACA,gDAAgD,wBAAwB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,oCAAoC,EAAE;AACxF,aAAa;AACb;AACA,kDAAkD,sCAAsC,EAAE;AAC1F,aAAa;AACb;AACA,kDAAkD,uCAAuC,EAAE;AAC3F,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,4BAA4B,0BAA0B;AACtD,KAAK;AACL;;AAEA;AACA;AACA;AACA,2LAA2L,kBAAkB,EAAE,2HAA2H;AAC1U;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sEAAa;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,0BAA0B;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,KAAqC,OAAO,mEAAc,MAAM,SAAoE;AACvJ,SAAS;AACT;AACA;AACA,6cAA6c;AAC7c,eAAe,+DAAS;AACxB;AACA;AACA,mBAAmB,iEAAW;AAC9B;AACA;AACA,wBAAwB,KAAqC,GAAG,sEAAS,gBAAgB,SAAkH;AAC3M,wBAAwB,KAAqC,GAAG,sEAAS,mDAAmD,SAAgO;AAC5V;AACA;AACA,+DAA+D,UAAU,qBAAqB,EAAE,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,qEAAqE,8DAAQ,CAAC,8DAAQ,GAAG,aAAa,yCAAyC;AAC/I;AACA,4CAA4C,sFAAqB;AACjE;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,+EAA+E,UAAU,iBAAiB,EAAE,EAAE;AAC9G;AACA;AACA,yCAAyC;AACzC,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,mFAAmF,UAAU,iBAAiB,EAAE,EAAE;AAClH;AACA;AACA,gDAAgD,sFAAqB;AACrE;AACA;AACA;AACA,yCAAyC;AACzC,qCAAqC;AACrC,iCAAiC;AACjC,6BAA6B;AAC7B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,+DAAS;AACxB;AACA;AACA,mBAAmB,iEAAW;AAC9B;AACA;AACA,mNAAmN;AACnN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8DAAQ,CAAC,8DAAQ,GAAG,aAAa,uBAAuB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,4BAA4B,8EAAa;AACzC;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA,yBAAyB,EAAE,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,sBAAsB;AACjF;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6DAA6D,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oBAAoB;AACvE;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,gDAAgD;AAChD,0BAA0B,sCAAsC;AAChE,aAAa,EAAE,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,KAAqC,IAAI,KAAkB;AAC/E;AACA;AACA;AACA,gBAAgB,KAAqC,IAAI,KAAyB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,UAAU,gBAAgB,EAAE,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,6BAA6B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sGAAqC;AAC/D;AACA;AACA;AACA;AACA,kCAAkC,iFAAgB;AAClD;AACA;AACA;AACA,6BAA6B,iFAAgB,CAAC,uFAAsB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8DAAQ,CAAC,8DAAQ,GAAG;AACnC;AACA;AACA,yCAAyC,wBAAwB;AACjE,QAAQ,KAAqC,GAAG,sEAAS,0CAA0C,SAAoH;AACvN;AACA;AACA;AACA;AACA,iCAAiC,8DAAQ,GAAG;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,KAAqC,GAAG,sEAAS,sBAAsB,SAC5C;AACnC,QAAQ,KAAqC,GAAG,sEAAS,0CAA0C,SAA8F;AACjM,QAAQ,KAAqC,GAAG,sEAAS,mCAAmC,SAA+F;AAC3L,QAAQ,KAAqC,GAAG,sEAAS,8BAA8B,SAAqF;AAC5K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,UAAU,sCAAsC,EAAE,EAAE;AACzG,aAAa;AACb,SAAS;AACT;AACA;AACA,4CAA4C,UAAU,mCAAmC,EAAE,EAAE;AAC7F;AACA;AACA;AACA,4CAA4C,UAAU,wBAAwB,EAAE,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA,mBAAmB,KAAqC,OAAO,mEAAc,OAAO,SAAyF;AAC7K,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wCAAwC,wBAAwB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,UAAU,gBAAgB,EAAE,EAAE;AACnF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAqC,IAAI,KAAwE;AACzH;AACA;AACA,gCAAgC,kBAAkB,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA,oBAAoB,sFAAqB;AACzC;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gEAAgE,6CAA6C,EAAE;AAC/G,oCAAoC,iCAAiC;AACrE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,wBAAwB,EAAE;AAC7F;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAqC,GAAG,sEAAS,8BAA8B,SAAsG;AACjM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,yCAAyC;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iFAAgB;AAC/C,6CAA6C,8DAAQ,CAAC,8DAAQ,GAAG,aAAa,6BAA6B;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,2DAAO;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,uCAAuC,2DAAO;AAC9C;AACA;AACA;AACA,wCAAwC,SAAS,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sBAAsB,8DAAQ,CAAC,8DAAQ,GAAG;AAC1C;AACA;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA,gDAAgD,UAAU,2BAA2B,EAAE,EAAE;AACzF;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA,eAAe,8DAAQ,CAAC,8DAAQ,GAAG,gBAAgB,wCAAwC;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAqC,GAAG,sEAAS,qBAAqB,SAAyF;AACvK;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA,2BAA2B,8DAAQ,CAAC,8DAAQ,GAAG,aAAa,8BAA8B;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D,+BAA+B,sFAAqB;AACpD,4BAA4B,sFAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa,sFAAqB;AAClC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa,sFAAqB;AAClC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,8CAA8C,sFAAqB;AACnE;AACA;AACA,2CAA2C,iFAAgB;AAC3D;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,iBAAiB;AACjB;AACA;AACA,wDAAwD,uBAAuB,EAAE;AACjF;AACA;AACA,oBAAoB,sFAAqB,cAAc,mCAAmC,EAAE;AAC5F;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAU;AAC7B;AACA;AACA,kBAAkB,KAAqC,OAAO,mEAAc,MAAM,SAEgD;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,8CAA8C,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,MACE;AACzC,YAAY,KAAyB;AACrC;AACA;AACA;AACA;AACA;AACA,qCAAqC,YAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8DAAQ,CAAC,8DAAQ,GAAG;AAC1C;AACA;AACA;AACA;AACA,sBAAsB,8DAAQ,CAAC,8DAAQ,GAAG,aAAa,6BAA6B;AACpF;AACA;AACA;AACA;AACA;AACA,sBAAsB,8DAAQ,CAAC,8DAAQ,GAAG;AAC1C;AACA,QAAQ,KAAqC,GAAG,sEAAS,mDAAmD,SAG1B;AAClF;AACA,sBAAsB,8DAAQ,CAAC,8DAAQ,GAAG,aAAa,6BAA6B;AACpF;AACA;AACA;AACA;AACA;AACA,sBAAsB,8DAAQ,CAAC,8DAAQ,GAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2DAAO;AACtB;AACA;AACA,QAAQ,KAAqC,IAAI,KACsB;AACvE;AACA;AACA;AACA;AACA;AACA,+BAA+B,wCAAwC,EAAE;AACzE,+BAA+B,iEAAiE,aAAa,EAAE,GAAG,EAAE;AACpH,+BAA+B,yCAAyC,EAAE;AAC1E;AACA;AACA;AACA;AACA,+BAA+B,wCAAwC,EAAE;AACzE,+BAA+B,iEAAiE,aAAa,EAAE,GAAG,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA,uFAAuF,iBAAiB,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,iBAAiB,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEc,2EAAY,EAAC;AACmE;AAC/F","file":"x","sourcesContent":["export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","import React from 'react';\nimport { invariant } from 'ts-invariant';\n\nvar apolloContext;\nfunction getApolloContext() {\n    if (!apolloContext) {\n        apolloContext = React.createContext({});\n    }\n    return apolloContext;\n}\nfunction resetApolloContext() {\n    apolloContext = React.createContext({});\n}\n\nvar ApolloProvider = function (_a) {\n    var client = _a.client, children = _a.children;\n    var ApolloContext = getApolloContext();\n    return React.createElement(ApolloContext.Consumer, null, function (context) {\n        if (context === void 0) { context = {}; }\n        if (client && context.client !== client) {\n            context = Object.assign({}, context, { client: client });\n        }\n        process.env.NODE_ENV === \"production\" ? invariant(context.client, 5) : invariant(context.client, 'ApolloProvider was not passed a client instance. Make ' +\n            'sure you pass in your client via the \"client\" prop.');\n        return (React.createElement(ApolloContext.Provider, { value: context }, children));\n    });\n};\n\nvar ApolloConsumer = function (props) {\n    var ApolloContext = getApolloContext();\n    return React.createElement(ApolloContext.Consumer, null, function (context) {\n        process.env.NODE_ENV === \"production\" ? invariant(context && context.client, 6) : invariant(context && context.client, 'Could not find \"client\" in the context of ApolloConsumer. ' +\n            'Wrap the root component in an <ApolloProvider>.');\n        return props.children(context.client);\n    });\n};\n\nvar DocumentType;\n(function (DocumentType) {\n    DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n    DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n    DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\nvar cache = new Map();\nfunction operationName(type) {\n    var name;\n    switch (type) {\n        case DocumentType.Query:\n            name = 'Query';\n            break;\n        case DocumentType.Mutation:\n            name = 'Mutation';\n            break;\n        case DocumentType.Subscription:\n            name = 'Subscription';\n            break;\n    }\n    return name;\n}\nfunction parser(document) {\n    var cached = cache.get(document);\n    if (cached)\n        return cached;\n    var variables, type, name;\n    process.env.NODE_ENV === \"production\" ? invariant(!!document && !!document.kind, 1) : invariant(!!document && !!document.kind, \"Argument of \" + document + \" passed to parser was not a valid GraphQL \" +\n        \"DocumentNode. You may need to use 'graphql-tag' or another method \" +\n        \"to convert your operation into a document\");\n    var fragments = document.definitions.filter(function (x) { return x.kind === 'FragmentDefinition'; });\n    var queries = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'query';\n    });\n    var mutations = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'mutation';\n    });\n    var subscriptions = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'subscription';\n    });\n    process.env.NODE_ENV === \"production\" ? invariant(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), 2) : invariant(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), \"Passing only a fragment to 'graphql' is not yet supported. \" +\n        \"You must include a query, subscription or mutation as well\");\n    process.env.NODE_ENV === \"production\" ? invariant(queries.length + mutations.length + subscriptions.length <= 1, 3) : invariant(queries.length + mutations.length + subscriptions.length <= 1, \"react-apollo only supports a query, subscription, or a mutation per HOC. \" +\n        (document + \" had \" + queries.length + \" queries, \" + subscriptions.length + \" \") +\n        (\"subscriptions and \" + mutations.length + \" mutations. \") +\n        \"You can use 'compose' to join multiple operation types to a component\");\n    type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n    if (!queries.length && !mutations.length)\n        type = DocumentType.Subscription;\n    var definitions = queries.length\n        ? queries\n        : mutations.length\n            ? mutations\n            : subscriptions;\n    process.env.NODE_ENV === \"production\" ? invariant(definitions.length === 1, 4) : invariant(definitions.length === 1, \"react-apollo only supports one definition per HOC. \" + document + \" had \" +\n        (definitions.length + \" definitions. \") +\n        \"You can use 'compose' to join multiple operation types to a component\");\n    var definition = definitions[0];\n    variables = definition.variableDefinitions || [];\n    if (definition.name && definition.name.kind === 'Name') {\n        name = definition.name.value;\n    }\n    else {\n        name = 'data';\n    }\n    var payload = { name: name, type: type, variables: variables };\n    cache.set(document, payload);\n    return payload;\n}\n\nexport { ApolloConsumer, ApolloProvider, DocumentType, getApolloContext, operationName, parser, resetApolloContext };\n//# sourceMappingURL=react-common.esm.js.map\n","import { parser, operationName, DocumentType, getApolloContext } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __assign } from 'tslib';\nimport React, { useRef, useContext, useReducer, useEffect, useState } from 'react';\nimport { NetworkStatus, ApolloError } from 'apollo-client';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nvar OperationData = (function () {\n    function OperationData(options, context) {\n        this.isMounted = false;\n        this.previousOptions = {};\n        this.context = {};\n        this.options = {};\n        this.options = options || {};\n        this.context = context || {};\n    }\n    OperationData.prototype.getOptions = function () {\n        return this.options;\n    };\n    OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n        if (storePrevious === void 0) { storePrevious = false; }\n        if (storePrevious && !equal(this.options, newOptions)) {\n            this.previousOptions = this.options;\n        }\n        this.options = newOptions;\n    };\n    OperationData.prototype.unmount = function () {\n        this.isMounted = false;\n    };\n    OperationData.prototype.refreshClient = function () {\n        var client = (this.options && this.options.client) ||\n            (this.context && this.context.client);\n        process.env.NODE_ENV === \"production\" ? invariant(!!client, 2) : invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' +\n            'Wrap the root component in an <ApolloProvider>, or pass an ' +\n            'ApolloClient instance in via options.');\n        var isNew = false;\n        if (client !== this.client) {\n            isNew = true;\n            this.client = client;\n            this.cleanup();\n        }\n        return {\n            client: this.client,\n            isNew: isNew\n        };\n    };\n    OperationData.prototype.verifyDocumentType = function (document, type) {\n        var operation = parser(document);\n        var requiredOperationName = operationName(type);\n        var usedOperationName = operationName(operation.type);\n        process.env.NODE_ENV === \"production\" ? invariant(operation.type === type, 3) : invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" +\n            (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n    };\n    return OperationData;\n}());\n\nvar QueryData = (function (_super) {\n    __extends(QueryData, _super);\n    function QueryData(_a) {\n        var options = _a.options, context = _a.context, onNewData = _a.onNewData;\n        var _this = _super.call(this, options, context) || this;\n        _this.previousData = {};\n        _this.currentObservable = {};\n        _this.runLazy = false;\n        _this.runLazyQuery = function (options) {\n            _this.cleanup();\n            _this.runLazy = true;\n            _this.lazyOptions = options;\n            _this.onNewData();\n        };\n        _this.getExecuteResult = function () {\n            var result = _this.getQueryResult();\n            _this.startQuerySubscription();\n            return result;\n        };\n        _this.obsRefetch = function (variables) {\n            return _this.currentObservable.query.refetch(variables);\n        };\n        _this.obsFetchMore = function (fetchMoreOptions) { return _this.currentObservable.query.fetchMore(fetchMoreOptions); };\n        _this.obsUpdateQuery = function (mapFn) { return _this.currentObservable.query.updateQuery(mapFn); };\n        _this.obsStartPolling = function (pollInterval) {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.startPolling(pollInterval);\n        };\n        _this.obsStopPolling = function () {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.stopPolling();\n        };\n        _this.obsSubscribeToMore = function (options) { return _this.currentObservable.query.subscribeToMore(options); };\n        _this.onNewData = onNewData;\n        return _this;\n    }\n    QueryData.prototype.execute = function () {\n        this.refreshClient();\n        var _a = this.getOptions(), skip = _a.skip, query = _a.query;\n        if (skip || query !== this.previousData.query) {\n            this.removeQuerySubscription();\n            this.previousData.query = query;\n        }\n        this.updateObservableQuery();\n        if (this.isMounted)\n            this.startQuerySubscription();\n        return this.getExecuteSsrResult() || this.getExecuteResult();\n    };\n    QueryData.prototype.executeLazy = function () {\n        return !this.runLazy\n            ? [\n                this.runLazyQuery,\n                {\n                    loading: false,\n                    networkStatus: NetworkStatus.ready,\n                    called: false,\n                    data: undefined,\n                },\n            ]\n            : [this.runLazyQuery, this.execute()];\n    };\n    QueryData.prototype.fetchData = function () {\n        var options = this.getOptions();\n        if (options.skip || options.ssr === false)\n            return false;\n        var obs = this.currentObservable.query;\n        var currentResult = obs.getCurrentResult();\n        return currentResult.loading ? obs.result() : false;\n    };\n    QueryData.prototype.afterExecute = function (_a) {\n        var _b = (_a === void 0 ? {} : _a).lazy, lazy = _b === void 0 ? false : _b;\n        this.isMounted = true;\n        if (!lazy || this.runLazy) {\n            this.handleErrorOrCompleted();\n        }\n        this.previousOptions = this.getOptions();\n        return this.unmount.bind(this);\n    };\n    QueryData.prototype.cleanup = function () {\n        this.removeQuerySubscription();\n        delete this.currentObservable.query;\n        delete this.previousData.result;\n    };\n    QueryData.prototype.getOptions = function () {\n        var options = _super.prototype.getOptions.call(this);\n        if (this.lazyOptions) {\n            options.variables = __assign(__assign({}, options.variables), this.lazyOptions.variables);\n            options.context = __assign(__assign({}, options.context), this.lazyOptions.context);\n        }\n        if (this.runLazy) {\n            delete options.skip;\n        }\n        return options;\n    };\n    QueryData.prototype.ssrInitiated = function () {\n        return this.context && this.context.renderPromises;\n    };\n    QueryData.prototype.getExecuteSsrResult = function () {\n        var ssrDisabled = this.getOptions().ssr === false;\n        var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n        var ssrLoading = __assign({ loading: true, networkStatus: NetworkStatus.loading, called: true, data: undefined, stale: false, client: this.client }, this.observableQueryFields());\n        if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n            this.previousData.result = ssrLoading;\n            return ssrLoading;\n        }\n        var result;\n        if (this.ssrInitiated()) {\n            result =\n                this.context.renderPromises.addQueryPromise(this, this.getExecuteResult) || ssrLoading;\n        }\n        return result;\n    };\n    QueryData.prototype.prepareObservableQueryOptions = function () {\n        var options = this.getOptions();\n        this.verifyDocumentType(options.query, DocumentType.Query);\n        var displayName = options.displayName || 'Query';\n        if (this.ssrInitiated() &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options.fetchPolicy = 'cache-first';\n        }\n        return __assign(__assign({}, options), { displayName: displayName, context: options.context, metadata: { reactComponent: { displayName: displayName } } });\n    };\n    QueryData.prototype.initializeObservableQuery = function () {\n        var _a, _b;\n        if (this.ssrInitiated()) {\n            this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n        }\n        if (!this.currentObservable.query) {\n            var observableQueryOptions = this.prepareObservableQueryOptions();\n            this.previousData.observableQueryOptions = __assign(__assign({}, observableQueryOptions), { children: null });\n            this.currentObservable.query = this.refreshClient().client.watchQuery(__assign({}, observableQueryOptions));\n            if (this.ssrInitiated()) {\n                (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.renderPromises) === null || _b === void 0 ? void 0 : _b.registerSSRObservable(this.currentObservable.query, observableQueryOptions);\n            }\n        }\n    };\n    QueryData.prototype.updateObservableQuery = function () {\n        if (!this.currentObservable.query) {\n            this.initializeObservableQuery();\n            return;\n        }\n        var newObservableQueryOptions = __assign(__assign({}, this.prepareObservableQueryOptions()), { children: null });\n        if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n            this.previousData.observableQueryOptions = newObservableQueryOptions;\n            this.currentObservable\n                .query.setOptions(newObservableQueryOptions)\n                .catch(function () { });\n        }\n    };\n    QueryData.prototype.startQuerySubscription = function () {\n        var _this = this;\n        if (this.currentObservable.subscription || this.getOptions().skip)\n            return;\n        var obsQuery = this.currentObservable.query;\n        this.currentObservable.subscription = obsQuery.subscribe({\n            next: function (_a) {\n                var loading = _a.loading, networkStatus = _a.networkStatus, data = _a.data;\n                var previousResult = _this.previousData.result;\n                if (previousResult &&\n                    previousResult.loading === loading &&\n                    previousResult.networkStatus === networkStatus &&\n                    equal(previousResult.data, data)) {\n                    return;\n                }\n                _this.onNewData();\n            },\n            error: function (error) {\n                _this.resubscribeToQuery();\n                if (!error.hasOwnProperty('graphQLErrors'))\n                    throw error;\n                var previousResult = _this.previousData.result;\n                if ((previousResult && previousResult.loading) ||\n                    !equal(error, _this.previousData.error)) {\n                    _this.previousData.error = error;\n                    _this.onNewData();\n                }\n            },\n        });\n    };\n    QueryData.prototype.resubscribeToQuery = function () {\n        this.removeQuerySubscription();\n        var lastError = this.currentObservable.query.getLastError();\n        var lastResult = this.currentObservable.query.getLastResult();\n        this.currentObservable.query.resetLastResults();\n        this.startQuerySubscription();\n        Object.assign(this.currentObservable.query, {\n            lastError: lastError,\n            lastResult: lastResult,\n        });\n    };\n    QueryData.prototype.getQueryResult = function () {\n        var result = this.observableQueryFields();\n        var options = this.getOptions();\n        if (options.skip) {\n            result = __assign(__assign({}, result), { data: undefined, error: undefined, loading: false, called: true });\n        }\n        else {\n            var currentResult = this.currentObservable.query.getCurrentResult();\n            var loading = currentResult.loading, partial = currentResult.partial, networkStatus = currentResult.networkStatus, errors = currentResult.errors;\n            var error = currentResult.error, data = currentResult.data;\n            if (errors && errors.length > 0) {\n                error = new ApolloError({ graphQLErrors: errors });\n            }\n            result = __assign(__assign({}, result), { loading: loading,\n                networkStatus: networkStatus,\n                error: error, called: true });\n            if (loading) {\n                var previousData = this.previousData.result && this.previousData.result.data;\n                result.data =\n                    previousData && data\n                        ? __assign(__assign({}, previousData), data) : previousData || data;\n            }\n            else if (error) {\n                Object.assign(result, {\n                    data: (this.currentObservable.query.getLastResult() || {})\n                        .data,\n                });\n            }\n            else {\n                var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n                var partialRefetch = options.partialRefetch;\n                if (partialRefetch &&\n                    !data &&\n                    partial &&\n                    fetchPolicy !== 'cache-only') {\n                    Object.assign(result, {\n                        loading: true,\n                        networkStatus: NetworkStatus.loading,\n                    });\n                    result.refetch();\n                    return result;\n                }\n                result.data = data;\n            }\n        }\n        result.client = this.client;\n        this.previousData.loading =\n            (this.previousData.result && this.previousData.result.loading) || false;\n        this.previousData.result = result;\n        this.currentObservable.query &&\n            this.currentObservable.query.resetQueryStoreErrors();\n        return result;\n    };\n    QueryData.prototype.handleErrorOrCompleted = function () {\n        var obsQuery = this.currentObservable.query;\n        if (!obsQuery || !this.previousData.result)\n            return;\n        var _a = this.previousData.result, data = _a.data, loading = _a.loading, error = _a.error;\n        if (!loading) {\n            var _b = this.getOptions(), query = _b.query, variables = _b.variables, onCompleted = _b.onCompleted, onError = _b.onError;\n            if (this.previousOptions &&\n                !this.previousData.loading &&\n                equal(this.previousOptions.query, query) &&\n                equal(this.previousOptions.variables, variables)) {\n                return;\n            }\n            if (onCompleted && !error) {\n                onCompleted(data);\n            }\n            else if (onError && error) {\n                onError(error);\n            }\n        }\n    };\n    QueryData.prototype.removeQuerySubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    QueryData.prototype.observableQueryFields = function () {\n        var observable = this.currentObservable.query;\n        return {\n            variables: observable.variables,\n            refetch: this.obsRefetch,\n            fetchMore: this.obsFetchMore,\n            updateQuery: this.obsUpdateQuery,\n            startPolling: this.obsStartPolling,\n            stopPolling: this.obsStopPolling,\n            subscribeToMore: this.obsSubscribeToMore,\n        };\n    };\n    return QueryData;\n}(OperationData));\n\nfunction useDeepMemo(memoFn, key) {\n    var ref = useRef();\n    if (!ref.current || !equal(key, ref.current.key)) {\n        ref.current = { key: key, value: memoFn() };\n    }\n    return ref.current.value;\n}\n\nfunction useBaseQuery(query, options, lazy) {\n    if (lazy === void 0) { lazy = false; }\n    var context = useContext(getApolloContext());\n    var _a = useReducer(function (x) { return x + 1; }, 0), tick = _a[0], forceUpdate = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { query: query }) : { query: query };\n    var queryDataRef = useRef();\n    var queryData = queryDataRef.current ||\n        new QueryData({\n            options: updatedOptions,\n            context: context,\n            onNewData: function () {\n                if (!queryData.ssrInitiated()) {\n                    Promise.resolve().then(forceUpdate);\n                }\n                else {\n                    forceUpdate();\n                }\n            },\n        });\n    queryData.setOptions(updatedOptions);\n    queryData.context = context;\n    if (queryData.ssrInitiated() && !queryDataRef.current) {\n        queryDataRef.current = queryData;\n    }\n    var memo = {\n        options: __assign(__assign({}, updatedOptions), { onError: undefined, onCompleted: undefined }),\n        context: context,\n        tick: tick,\n    };\n    var result = useDeepMemo(function () { return (lazy ? queryData.executeLazy() : queryData.execute()); }, memo);\n    var queryResult = lazy\n        ? result[1]\n        : result;\n    useEffect(function () {\n        if (!queryDataRef.current) {\n            queryDataRef.current = queryData;\n        }\n        return function () { return queryData.cleanup(); };\n    }, []);\n    useEffect(function () { return queryData.afterExecute({ lazy: lazy }); }, [\n        queryResult.loading,\n        queryResult.networkStatus,\n        queryResult.error,\n        queryResult.data,\n    ]);\n    return result;\n}\n\nfunction useQuery(query, options) {\n    return useBaseQuery(query, options, false);\n}\n\nfunction useLazyQuery(query, options) {\n    return useBaseQuery(query, options, true);\n}\n\nvar MutationData = (function (_super) {\n    __extends(MutationData, _super);\n    function MutationData(_a) {\n        var options = _a.options, context = _a.context, result = _a.result, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.runMutation = function (mutationFunctionOptions) {\n            if (mutationFunctionOptions === void 0) { mutationFunctionOptions = {}; }\n            _this.onMutationStart();\n            var mutationId = _this.generateNewMutationId();\n            return _this.mutate(mutationFunctionOptions)\n                .then(function (response) {\n                _this.onMutationCompleted(response, mutationId);\n                return response;\n            })\n                .catch(function (error) {\n                _this.onMutationError(error, mutationId);\n                if (!_this.getOptions().onError)\n                    throw error;\n            });\n        };\n        _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n        _this.result = result;\n        _this.setResult = setResult;\n        _this.mostRecentMutationId = 0;\n        return _this;\n    }\n    MutationData.prototype.execute = function (result) {\n        this.isMounted = true;\n        this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n        result.client = this.refreshClient().client;\n        return [this.runMutation, result];\n    };\n    MutationData.prototype.afterExecute = function () {\n        this.isMounted = true;\n        return this.unmount.bind(this);\n    };\n    MutationData.prototype.cleanup = function () {\n    };\n    MutationData.prototype.mutate = function (mutationFunctionOptions) {\n        var _a = this.getOptions(), mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, update = _a.update, _b = _a.context, mutationContext = _b === void 0 ? {} : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, fetchPolicy = _a.fetchPolicy;\n        var mutateOptions = __assign({}, mutationFunctionOptions);\n        var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n        delete mutateOptions.variables;\n        return this.refreshClient().client.mutate(__assign({ mutation: mutation,\n            optimisticResponse: optimisticResponse, refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries, awaitRefetchQueries: awaitRefetchQueries,\n            update: update, context: mutationContext, fetchPolicy: fetchPolicy, variables: mutateVariables }, mutateOptions));\n    };\n    MutationData.prototype.onMutationStart = function () {\n        if (!this.result.loading && !this.getOptions().ignoreResults) {\n            this.updateResult({\n                loading: true,\n                error: undefined,\n                data: undefined,\n                called: true\n            });\n        }\n    };\n    MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n        var _a = this.getOptions(), onCompleted = _a.onCompleted, ignoreResults = _a.ignoreResults;\n        var data = response.data, errors = response.errors;\n        var error = errors && errors.length > 0\n            ? new ApolloError({ graphQLErrors: errors })\n            : undefined;\n        var callOncomplete = function () {\n            return onCompleted ? onCompleted(data) : null;\n        };\n        if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n            this.updateResult({\n                called: true,\n                loading: false,\n                data: data,\n                error: error\n            });\n        }\n        callOncomplete();\n    };\n    MutationData.prototype.onMutationError = function (error, mutationId) {\n        var onError = this.getOptions().onError;\n        if (this.isMostRecentMutation(mutationId)) {\n            this.updateResult({\n                loading: false,\n                error: error,\n                data: undefined,\n                called: true\n            });\n        }\n        if (onError) {\n            onError(error);\n        }\n    };\n    MutationData.prototype.generateNewMutationId = function () {\n        return ++this.mostRecentMutationId;\n    };\n    MutationData.prototype.isMostRecentMutation = function (mutationId) {\n        return this.mostRecentMutationId === mutationId;\n    };\n    MutationData.prototype.updateResult = function (result) {\n        if (this.isMounted &&\n            (!this.previousResult || !equal(this.previousResult, result))) {\n            this.setResult(result);\n            this.previousResult = result;\n        }\n    };\n    return MutationData;\n}(OperationData));\n\nfunction useMutation(mutation, options) {\n    var context = useContext(getApolloContext());\n    var _a = useState({ called: false, loading: false }), result = _a[0], setResult = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { mutation: mutation }) : { mutation: mutation };\n    var mutationDataRef = useRef();\n    function getMutationDataRef() {\n        if (!mutationDataRef.current) {\n            mutationDataRef.current = new MutationData({\n                options: updatedOptions,\n                context: context,\n                result: result,\n                setResult: setResult\n            });\n        }\n        return mutationDataRef.current;\n    }\n    var mutationData = getMutationDataRef();\n    mutationData.setOptions(updatedOptions);\n    mutationData.context = context;\n    useEffect(function () { return mutationData.afterExecute(); });\n    return mutationData.execute(result);\n}\n\nvar SubscriptionData = (function (_super) {\n    __extends(SubscriptionData, _super);\n    function SubscriptionData(_a) {\n        var options = _a.options, context = _a.context, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.currentObservable = {};\n        _this.setResult = setResult;\n        _this.initialize(options);\n        return _this;\n    }\n    SubscriptionData.prototype.execute = function (result) {\n        if (this.getOptions().skip === true) {\n            this.cleanup();\n            return {\n                loading: false,\n                error: undefined,\n                data: undefined,\n                variables: this.getOptions().variables\n            };\n        }\n        var currentResult = result;\n        if (this.refreshClient().isNew) {\n            currentResult = this.getLoadingResult();\n        }\n        var shouldResubscribe = this.getOptions().shouldResubscribe;\n        if (typeof shouldResubscribe === 'function') {\n            shouldResubscribe = !!shouldResubscribe(this.getOptions());\n        }\n        if (shouldResubscribe !== false &&\n            this.previousOptions &&\n            Object.keys(this.previousOptions).length > 0 &&\n            (this.previousOptions.subscription !== this.getOptions().subscription ||\n                !equal(this.previousOptions.variables, this.getOptions().variables) ||\n                this.previousOptions.skip !== this.getOptions().skip)) {\n            this.cleanup();\n            currentResult = this.getLoadingResult();\n        }\n        this.initialize(this.getOptions());\n        this.startSubscription();\n        this.previousOptions = this.getOptions();\n        return __assign(__assign({}, currentResult), { variables: this.getOptions().variables });\n    };\n    SubscriptionData.prototype.afterExecute = function () {\n        this.isMounted = true;\n    };\n    SubscriptionData.prototype.cleanup = function () {\n        this.endSubscription();\n        delete this.currentObservable.query;\n    };\n    SubscriptionData.prototype.initialize = function (options) {\n        if (this.currentObservable.query || this.getOptions().skip === true)\n            return;\n        this.currentObservable.query = this.refreshClient().client.subscribe({\n            query: options.subscription,\n            variables: options.variables,\n            fetchPolicy: options.fetchPolicy\n        });\n    };\n    SubscriptionData.prototype.startSubscription = function () {\n        if (this.currentObservable.subscription)\n            return;\n        this.currentObservable.subscription = this.currentObservable.query.subscribe({\n            next: this.updateCurrentData.bind(this),\n            error: this.updateError.bind(this),\n            complete: this.completeSubscription.bind(this)\n        });\n    };\n    SubscriptionData.prototype.getLoadingResult = function () {\n        return {\n            loading: true,\n            error: undefined,\n            data: undefined\n        };\n    };\n    SubscriptionData.prototype.updateResult = function (result) {\n        if (this.isMounted) {\n            this.setResult(result);\n        }\n    };\n    SubscriptionData.prototype.updateCurrentData = function (result) {\n        var onSubscriptionData = this.getOptions().onSubscriptionData;\n        this.updateResult({\n            data: result.data,\n            loading: false,\n            error: undefined\n        });\n        if (onSubscriptionData) {\n            onSubscriptionData({\n                client: this.refreshClient().client,\n                subscriptionData: result\n            });\n        }\n    };\n    SubscriptionData.prototype.updateError = function (error) {\n        this.updateResult({\n            error: error,\n            loading: false\n        });\n    };\n    SubscriptionData.prototype.completeSubscription = function () {\n        var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n        if (onSubscriptionComplete)\n            onSubscriptionComplete();\n        this.endSubscription();\n    };\n    SubscriptionData.prototype.endSubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    return SubscriptionData;\n}(OperationData));\n\nfunction useSubscription(subscription, options) {\n    var context = useContext(getApolloContext());\n    var updatedOptions = options\n        ? __assign(__assign({}, options), { subscription: subscription }) : { subscription: subscription };\n    var _a = useState({\n        loading: !updatedOptions.skip,\n        error: undefined,\n        data: undefined\n    }), result = _a[0], setResult = _a[1];\n    var subscriptionDataRef = useRef();\n    function getSubscriptionDataRef() {\n        if (!subscriptionDataRef.current) {\n            subscriptionDataRef.current = new SubscriptionData({\n                options: updatedOptions,\n                context: context,\n                setResult: setResult\n            });\n        }\n        return subscriptionDataRef.current;\n    }\n    var subscriptionData = getSubscriptionDataRef();\n    subscriptionData.setOptions(updatedOptions, true);\n    subscriptionData.context = context;\n    useEffect(function () { return subscriptionData.afterExecute(); });\n    useEffect(function () { return subscriptionData.cleanup.bind(subscriptionData); }, []);\n    return subscriptionData.execute(result);\n}\n\nfunction useApolloClient() {\n    var client = React.useContext(getApolloContext()).client;\n    process.env.NODE_ENV === \"production\" ? invariant(client, 1) : invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' +\n        'have called `ApolloProvider` higher up in your tree.');\n    return client;\n}\n\nfunction makeDefaultQueryInfo() {\n    return {\n        seen: false,\n        observable: null\n    };\n}\nvar RenderPromises = (function () {\n    function RenderPromises() {\n        this.queryPromises = new Map();\n        this.queryInfoTrie = new Map();\n    }\n    RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n        this.lookupQueryInfo(props).observable = observable;\n    };\n    RenderPromises.prototype.getSSRObservable = function (props) {\n        return this.lookupQueryInfo(props).observable;\n    };\n    RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n        var info = this.lookupQueryInfo(queryInstance.getOptions());\n        if (!info.seen) {\n            this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n                resolve(queryInstance.fetchData());\n            }));\n            return null;\n        }\n        return finish();\n    };\n    RenderPromises.prototype.hasPromises = function () {\n        return this.queryPromises.size > 0;\n    };\n    RenderPromises.prototype.consumeAndAwaitPromises = function () {\n        var _this = this;\n        var promises = [];\n        this.queryPromises.forEach(function (promise, queryInstance) {\n            _this.lookupQueryInfo(queryInstance).seen = true;\n            promises.push(promise);\n        });\n        this.queryPromises.clear();\n        return Promise.all(promises);\n    };\n    RenderPromises.prototype.lookupQueryInfo = function (props) {\n        var queryInfoTrie = this.queryInfoTrie;\n        var query = props.query, variables = props.variables;\n        var varMap = queryInfoTrie.get(query) || new Map();\n        if (!queryInfoTrie.has(query))\n            queryInfoTrie.set(query, varMap);\n        var variablesString = JSON.stringify(variables);\n        var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n        if (!varMap.has(variablesString))\n            varMap.set(variablesString, info);\n        return info;\n    };\n    return RenderPromises;\n}());\n\nexport { RenderPromises, useApolloClient, useLazyQuery, useMutation, useQuery, useSubscription };\n//# sourceMappingURL=react-hooks.esm.js.map\n","export { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __rest } from 'tslib';\nimport { useQuery, useMutation, useSubscription } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nfunction Query(props) {\n    var children = props.children, query = props.query, options = __rest(props, [\"children\", \"query\"]);\n    var result = useQuery(query, options);\n    return children && result ? children(result) : null;\n}\n(function (Query) {\n    Query.propTypes = {\n        client: PropTypes.object,\n        children: PropTypes.func.isRequired,\n        fetchPolicy: PropTypes.string,\n        notifyOnNetworkStatusChange: PropTypes.bool,\n        onCompleted: PropTypes.func,\n        onError: PropTypes.func,\n        pollInterval: PropTypes.number,\n        query: PropTypes.object.isRequired,\n        variables: PropTypes.object,\n        ssr: PropTypes.bool,\n        partialRefetch: PropTypes.bool,\n        returnPartialData: PropTypes.bool\n    };\n})(Query || (Query = {}));\n\nfunction Mutation(props) {\n    var _a = useMutation(props.mutation, props), runMutation = _a[0], result = _a[1];\n    return props.children ? props.children(runMutation, result) : null;\n}\n(function (Mutation) {\n    Mutation.propTypes = {\n        mutation: PropTypes.object.isRequired,\n        variables: PropTypes.object,\n        optimisticResponse: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n        refetchQueries: PropTypes.oneOfType([\n            PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n            PropTypes.func\n        ]),\n        awaitRefetchQueries: PropTypes.bool,\n        update: PropTypes.func,\n        children: PropTypes.func.isRequired,\n        onCompleted: PropTypes.func,\n        onError: PropTypes.func,\n        fetchPolicy: PropTypes.string\n    };\n})(Mutation || (Mutation = {}));\n\nfunction Subscription(props) {\n    var result = useSubscription(props.subscription, props);\n    return props.children && result ? props.children(result) : null;\n}\n(function (Subscription) {\n    Subscription.propTypes = {\n        subscription: PropTypes.object.isRequired,\n        variables: PropTypes.object,\n        children: PropTypes.func,\n        onSubscriptionData: PropTypes.func,\n        onSubscriptionComplete: PropTypes.func,\n        shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    };\n})(Subscription || (Subscription = {}));\n\nexport { Mutation, Query, Subscription };\n//# sourceMappingURL=react-components.esm.js.map\n","import { parser, DocumentType, ApolloConsumer } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __assign, __rest } from 'tslib';\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { Query, Mutation, Subscription } from '@apollo/react-components';\nimport { invariant } from 'ts-invariant';\n\nvar defaultMapPropsToOptions = function () { return ({}); };\nvar defaultMapPropsToSkip = function () { return false; };\nfunction getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\nfunction calculateVariablesFromProps(operation, props) {\n    var variables = {};\n    for (var _i = 0, _a = operation.variables; _i < _a.length; _i++) {\n        var _b = _a[_i], variable = _b.variable, type = _b.type;\n        if (!variable.name || !variable.name.value)\n            continue;\n        var variableName = variable.name.value;\n        var variableProp = props[variableName];\n        if (typeof variableProp !== 'undefined') {\n            variables[variableName] = variableProp;\n            continue;\n        }\n        if (type.kind !== 'NonNullType') {\n            variables[variableName] = undefined;\n        }\n    }\n    return variables;\n}\nvar GraphQLBase = (function (_super) {\n    __extends(GraphQLBase, _super);\n    function GraphQLBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this.withRef = false;\n        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n        return _this;\n    }\n    GraphQLBase.prototype.getWrappedInstance = function () {\n        process.env.NODE_ENV === \"production\" ? invariant(this.withRef, 2) : invariant(this.withRef, \"To access the wrapped instance, you need to specify \" +\n            \"{ withRef: true } in the options\");\n        return this.wrappedInstance;\n    };\n    GraphQLBase.prototype.setWrappedInstance = function (ref) {\n        this.wrappedInstance = ref;\n    };\n    return GraphQLBase;\n}(React.Component));\n\nfunction withQuery(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var operation = parser(document);\n    var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.skip, skip = _b === void 0 ? defaultMapPropsToSkip : _b, _c = operationOptions.alias, alias = _c === void 0 ? 'Apollo' : _c;\n    var mapPropsToOptions = options;\n    if (typeof mapPropsToOptions !== 'function') {\n        mapPropsToOptions = function () { return options; };\n    }\n    var mapPropsToSkip = skip;\n    if (typeof mapPropsToSkip !== 'function') {\n        mapPropsToSkip = function () { return skip; };\n    }\n    var lastResultProps;\n    return function (WrappedComponent) {\n        var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n        var GraphQL = (function (_super) {\n            __extends(GraphQL, _super);\n            function GraphQL() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            GraphQL.prototype.render = function () {\n                var _this = this;\n                var props = this.props;\n                var shouldSkip = mapPropsToSkip(props);\n                var opts = shouldSkip\n                    ? Object.create(null)\n                    : __assign({}, mapPropsToOptions(props));\n                if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n                    opts.variables = calculateVariablesFromProps(operation, props);\n                }\n                return (React.createElement(Query, __assign({}, opts, { displayName: graphQLDisplayName, skip: shouldSkip, query: document }), function (_a) {\n                    var _b, _c;\n                    var _ = _a.client, data = _a.data, r = __rest(_a, [\"client\", \"data\"]);\n                    if (operationOptions.withRef) {\n                        _this.withRef = true;\n                        props = Object.assign({}, props, {\n                            ref: _this.setWrappedInstance\n                        });\n                    }\n                    if (shouldSkip) {\n                        return (React.createElement(WrappedComponent, __assign({}, props, {})));\n                    }\n                    var result = Object.assign(r, data || {});\n                    var name = operationOptions.name || 'data';\n                    var childProps = (_b = {}, _b[name] = result, _b);\n                    if (operationOptions.props) {\n                        var newResult = (_c = {},\n                            _c[name] = result,\n                            _c.ownProps = props,\n                            _c);\n                        lastResultProps = operationOptions.props(newResult, lastResultProps);\n                        childProps = lastResultProps;\n                    }\n                    return (React.createElement(WrappedComponent, __assign({}, props, childProps)));\n                }));\n            };\n            GraphQL.displayName = graphQLDisplayName;\n            GraphQL.WrappedComponent = WrappedComponent;\n            return GraphQL;\n        }(GraphQLBase));\n        return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n    };\n}\n\nfunction withMutation(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var operation = parser(document);\n    var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.alias, alias = _b === void 0 ? 'Apollo' : _b;\n    var mapPropsToOptions = options;\n    if (typeof mapPropsToOptions !== 'function')\n        mapPropsToOptions = function () { return options; };\n    return function (WrappedComponent) {\n        var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n        var GraphQL = (function (_super) {\n            __extends(GraphQL, _super);\n            function GraphQL() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            GraphQL.prototype.render = function () {\n                var props = this.props;\n                var opts = mapPropsToOptions(props);\n                if (operationOptions.withRef) {\n                    this.withRef = true;\n                    props = Object.assign({}, props, {\n                        ref: this.setWrappedInstance\n                    });\n                }\n                if (!opts.variables && operation.variables.length > 0) {\n                    opts.variables = calculateVariablesFromProps(operation, props);\n                }\n                return (React.createElement(Mutation, __assign({ ignoreResults: true }, opts, { mutation: document }), function (mutate, _a) {\n                    var _b, _c;\n                    var data = _a.data, r = __rest(_a, [\"data\"]);\n                    var result = Object.assign(r, data || {});\n                    var name = operationOptions.name || 'mutate';\n                    var resultName = operationOptions.name\n                        ? name + \"Result\"\n                        : 'result';\n                    var childProps = (_b = {},\n                        _b[name] = mutate,\n                        _b[resultName] = result,\n                        _b);\n                    if (operationOptions.props) {\n                        var newResult = (_c = {},\n                            _c[name] = mutate,\n                            _c[resultName] = result,\n                            _c.ownProps = props,\n                            _c);\n                        childProps = operationOptions.props(newResult);\n                    }\n                    return React.createElement(WrappedComponent, __assign({}, props, childProps));\n                }));\n            };\n            GraphQL.displayName = graphQLDisplayName;\n            GraphQL.WrappedComponent = WrappedComponent;\n            return GraphQL;\n        }(GraphQLBase));\n        return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n    };\n}\n\nfunction withSubscription(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var operation = parser(document);\n    var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.skip, skip = _b === void 0 ? defaultMapPropsToSkip : _b, _c = operationOptions.alias, alias = _c === void 0 ? 'Apollo' : _c, shouldResubscribe = operationOptions.shouldResubscribe;\n    var mapPropsToOptions = options;\n    if (typeof mapPropsToOptions !== 'function')\n        mapPropsToOptions = function () { return options; };\n    var mapPropsToSkip = skip;\n    if (typeof mapPropsToSkip !== 'function')\n        mapPropsToSkip = function () { return skip; };\n    var lastResultProps;\n    return function (WrappedComponent) {\n        var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n        var GraphQL = (function (_super) {\n            __extends(GraphQL, _super);\n            function GraphQL(props) {\n                var _this = _super.call(this, props) || this;\n                _this.state = { resubscribe: false };\n                return _this;\n            }\n            GraphQL.prototype.componentDidUpate = function (prevProps) {\n                if (shouldResubscribe) {\n                    this.setState({\n                        resubscribe: shouldResubscribe(prevProps, this.props)\n                    });\n                }\n            };\n            GraphQL.prototype.render = function () {\n                var _this = this;\n                var props = this.props;\n                var shouldSkip = mapPropsToSkip(props);\n                var opts = shouldSkip\n                    ? Object.create(null)\n                    : mapPropsToOptions(props);\n                if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n                    opts.variables = calculateVariablesFromProps(operation, props);\n                }\n                return (React.createElement(Subscription, __assign({}, opts, { displayName: graphQLDisplayName, skip: shouldSkip, subscription: document, shouldResubscribe: this.state.resubscribe }), function (_a) {\n                    var _b, _c;\n                    var data = _a.data, r = __rest(_a, [\"data\"]);\n                    if (operationOptions.withRef) {\n                        _this.withRef = true;\n                        props = Object.assign({}, props, {\n                            ref: _this.setWrappedInstance\n                        });\n                    }\n                    if (shouldSkip) {\n                        return (React.createElement(WrappedComponent, __assign({}, props, {})));\n                    }\n                    var result = Object.assign(r, data || {});\n                    var name = operationOptions.name || 'data';\n                    var childProps = (_b = {}, _b[name] = result, _b);\n                    if (operationOptions.props) {\n                        var newResult = (_c = {},\n                            _c[name] = result,\n                            _c.ownProps = props,\n                            _c);\n                        lastResultProps = operationOptions.props(newResult, lastResultProps);\n                        childProps = lastResultProps;\n                    }\n                    return (React.createElement(WrappedComponent, __assign({}, props, childProps)));\n                }));\n            };\n            GraphQL.displayName = graphQLDisplayName;\n            GraphQL.WrappedComponent = WrappedComponent;\n            return GraphQL;\n        }(GraphQLBase));\n        return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n    };\n}\n\nfunction graphql(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    switch (parser(document).type) {\n        case DocumentType.Mutation:\n            return withMutation(document, operationOptions);\n        case DocumentType.Subscription:\n            return withSubscription(document, operationOptions);\n        case DocumentType.Query:\n        default:\n            return withQuery(document, operationOptions);\n    }\n}\n\nfunction getDisplayName$1(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\nfunction withApollo(WrappedComponent, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var withDisplayName = \"withApollo(\" + getDisplayName$1(WrappedComponent) + \")\";\n    var WithApollo = (function (_super) {\n        __extends(WithApollo, _super);\n        function WithApollo(props) {\n            var _this = _super.call(this, props) || this;\n            _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n            return _this;\n        }\n        WithApollo.prototype.getWrappedInstance = function () {\n            process.env.NODE_ENV === \"production\" ? invariant(operationOptions.withRef, 1) : invariant(operationOptions.withRef, \"To access the wrapped instance, you need to specify \" +\n                \"{ withRef: true } in the options\");\n            return this.wrappedInstance;\n        };\n        WithApollo.prototype.setWrappedInstance = function (ref) {\n            this.wrappedInstance = ref;\n        };\n        WithApollo.prototype.render = function () {\n            var _this = this;\n            return (React.createElement(ApolloConsumer, null, function (client) {\n                var props = Object.assign({}, _this.props, {\n                    client: client,\n                    ref: operationOptions.withRef\n                        ? _this.setWrappedInstance\n                        : undefined\n                });\n                return React.createElement(WrappedComponent, __assign({}, props));\n            }));\n        };\n        WithApollo.displayName = withDisplayName;\n        WithApollo.WrappedComponent = WrappedComponent;\n        return WithApollo;\n    }(React.Component));\n    return hoistNonReactStatics(WithApollo, WrappedComponent, {});\n}\n\nexport { graphql, withApollo, withMutation, withQuery, withSubscription };\n//# sourceMappingURL=react-hoc.esm.js.map\n","import { parser, operationName, DocumentType, getApolloContext } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __assign } from 'tslib';\nimport React, { useRef, useContext, useReducer, useEffect, useState } from 'react';\nimport { NetworkStatus, ApolloError } from 'apollo-client';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nvar OperationData = (function () {\n    function OperationData(options, context) {\n        this.isMounted = false;\n        this.previousOptions = {};\n        this.context = {};\n        this.options = {};\n        this.options = options || {};\n        this.context = context || {};\n    }\n    OperationData.prototype.getOptions = function () {\n        return this.options;\n    };\n    OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n        if (storePrevious === void 0) { storePrevious = false; }\n        if (storePrevious && !equal(this.options, newOptions)) {\n            this.previousOptions = this.options;\n        }\n        this.options = newOptions;\n    };\n    OperationData.prototype.unmount = function () {\n        this.isMounted = false;\n    };\n    OperationData.prototype.refreshClient = function () {\n        var client = (this.options && this.options.client) ||\n            (this.context && this.context.client);\n        process.env.NODE_ENV === \"production\" ? invariant(!!client, 2) : invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' +\n            'Wrap the root component in an <ApolloProvider>, or pass an ' +\n            'ApolloClient instance in via options.');\n        var isNew = false;\n        if (client !== this.client) {\n            isNew = true;\n            this.client = client;\n            this.cleanup();\n        }\n        return {\n            client: this.client,\n            isNew: isNew\n        };\n    };\n    OperationData.prototype.verifyDocumentType = function (document, type) {\n        var operation = parser(document);\n        var requiredOperationName = operationName(type);\n        var usedOperationName = operationName(operation.type);\n        process.env.NODE_ENV === \"production\" ? invariant(operation.type === type, 3) : invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" +\n            (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n    };\n    return OperationData;\n}());\n\nvar QueryData = (function (_super) {\n    __extends(QueryData, _super);\n    function QueryData(_a) {\n        var options = _a.options, context = _a.context, onNewData = _a.onNewData;\n        var _this = _super.call(this, options, context) || this;\n        _this.previousData = {};\n        _this.currentObservable = {};\n        _this.runLazy = false;\n        _this.runLazyQuery = function (options) {\n            _this.cleanup();\n            _this.runLazy = true;\n            _this.lazyOptions = options;\n            _this.onNewData();\n        };\n        _this.getExecuteResult = function () {\n            var result = _this.getQueryResult();\n            _this.startQuerySubscription();\n            return result;\n        };\n        _this.obsRefetch = function (variables) {\n            return _this.currentObservable.query.refetch(variables);\n        };\n        _this.obsFetchMore = function (fetchMoreOptions) { return _this.currentObservable.query.fetchMore(fetchMoreOptions); };\n        _this.obsUpdateQuery = function (mapFn) { return _this.currentObservable.query.updateQuery(mapFn); };\n        _this.obsStartPolling = function (pollInterval) {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.startPolling(pollInterval);\n        };\n        _this.obsStopPolling = function () {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.stopPolling();\n        };\n        _this.obsSubscribeToMore = function (options) { return _this.currentObservable.query.subscribeToMore(options); };\n        _this.onNewData = onNewData;\n        return _this;\n    }\n    QueryData.prototype.execute = function () {\n        this.refreshClient();\n        var _a = this.getOptions(), skip = _a.skip, query = _a.query;\n        if (skip || query !== this.previousData.query) {\n            this.removeQuerySubscription();\n            this.previousData.query = query;\n        }\n        this.updateObservableQuery();\n        if (this.isMounted)\n            this.startQuerySubscription();\n        return this.getExecuteSsrResult() || this.getExecuteResult();\n    };\n    QueryData.prototype.executeLazy = function () {\n        return !this.runLazy\n            ? [\n                this.runLazyQuery,\n                {\n                    loading: false,\n                    networkStatus: NetworkStatus.ready,\n                    called: false,\n                    data: undefined,\n                },\n            ]\n            : [this.runLazyQuery, this.execute()];\n    };\n    QueryData.prototype.fetchData = function () {\n        var options = this.getOptions();\n        if (options.skip || options.ssr === false)\n            return false;\n        var obs = this.currentObservable.query;\n        var currentResult = obs.getCurrentResult();\n        return currentResult.loading ? obs.result() : false;\n    };\n    QueryData.prototype.afterExecute = function (_a) {\n        var _b = (_a === void 0 ? {} : _a).lazy, lazy = _b === void 0 ? false : _b;\n        this.isMounted = true;\n        if (!lazy || this.runLazy) {\n            this.handleErrorOrCompleted();\n        }\n        this.previousOptions = this.getOptions();\n        return this.unmount.bind(this);\n    };\n    QueryData.prototype.cleanup = function () {\n        this.removeQuerySubscription();\n        delete this.currentObservable.query;\n        delete this.previousData.result;\n    };\n    QueryData.prototype.getOptions = function () {\n        var options = _super.prototype.getOptions.call(this);\n        if (this.lazyOptions) {\n            options.variables = __assign(__assign({}, options.variables), this.lazyOptions.variables);\n            options.context = __assign(__assign({}, options.context), this.lazyOptions.context);\n        }\n        if (this.runLazy) {\n            delete options.skip;\n        }\n        return options;\n    };\n    QueryData.prototype.ssrInitiated = function () {\n        return this.context && this.context.renderPromises;\n    };\n    QueryData.prototype.getExecuteSsrResult = function () {\n        var ssrDisabled = this.getOptions().ssr === false;\n        var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n        var ssrLoading = __assign({ loading: true, networkStatus: NetworkStatus.loading, called: true, data: undefined, stale: false, client: this.client }, this.observableQueryFields());\n        if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n            this.previousData.result = ssrLoading;\n            return ssrLoading;\n        }\n        var result;\n        if (this.ssrInitiated()) {\n            result =\n                this.context.renderPromises.addQueryPromise(this, this.getExecuteResult) || ssrLoading;\n        }\n        return result;\n    };\n    QueryData.prototype.prepareObservableQueryOptions = function () {\n        var options = this.getOptions();\n        this.verifyDocumentType(options.query, DocumentType.Query);\n        var displayName = options.displayName || 'Query';\n        if (this.ssrInitiated() &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options.fetchPolicy = 'cache-first';\n        }\n        return __assign(__assign({}, options), { displayName: displayName, context: options.context, metadata: { reactComponent: { displayName: displayName } } });\n    };\n    QueryData.prototype.initializeObservableQuery = function () {\n        var _a, _b;\n        if (this.ssrInitiated()) {\n            this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n        }\n        if (!this.currentObservable.query) {\n            var observableQueryOptions = this.prepareObservableQueryOptions();\n            this.previousData.observableQueryOptions = __assign(__assign({}, observableQueryOptions), { children: null });\n            this.currentObservable.query = this.refreshClient().client.watchQuery(__assign({}, observableQueryOptions));\n            if (this.ssrInitiated()) {\n                (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.renderPromises) === null || _b === void 0 ? void 0 : _b.registerSSRObservable(this.currentObservable.query, observableQueryOptions);\n            }\n        }\n    };\n    QueryData.prototype.updateObservableQuery = function () {\n        if (!this.currentObservable.query) {\n            this.initializeObservableQuery();\n            return;\n        }\n        var newObservableQueryOptions = __assign(__assign({}, this.prepareObservableQueryOptions()), { children: null });\n        if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n            this.previousData.observableQueryOptions = newObservableQueryOptions;\n            this.currentObservable\n                .query.setOptions(newObservableQueryOptions)\n                .catch(function () { });\n        }\n    };\n    QueryData.prototype.startQuerySubscription = function () {\n        var _this = this;\n        if (this.currentObservable.subscription || this.getOptions().skip)\n            return;\n        var obsQuery = this.currentObservable.query;\n        this.currentObservable.subscription = obsQuery.subscribe({\n            next: function (_a) {\n                var loading = _a.loading, networkStatus = _a.networkStatus, data = _a.data;\n                var previousResult = _this.previousData.result;\n                if (previousResult &&\n                    previousResult.loading === loading &&\n                    previousResult.networkStatus === networkStatus &&\n                    equal(previousResult.data, data)) {\n                    return;\n                }\n                _this.onNewData();\n            },\n            error: function (error) {\n                _this.resubscribeToQuery();\n                if (!error.hasOwnProperty('graphQLErrors'))\n                    throw error;\n                var previousResult = _this.previousData.result;\n                if ((previousResult && previousResult.loading) ||\n                    !equal(error, _this.previousData.error)) {\n                    _this.previousData.error = error;\n                    _this.onNewData();\n                }\n            },\n        });\n    };\n    QueryData.prototype.resubscribeToQuery = function () {\n        this.removeQuerySubscription();\n        var lastError = this.currentObservable.query.getLastError();\n        var lastResult = this.currentObservable.query.getLastResult();\n        this.currentObservable.query.resetLastResults();\n        this.startQuerySubscription();\n        Object.assign(this.currentObservable.query, {\n            lastError: lastError,\n            lastResult: lastResult,\n        });\n    };\n    QueryData.prototype.getQueryResult = function () {\n        var result = this.observableQueryFields();\n        var options = this.getOptions();\n        if (options.skip) {\n            result = __assign(__assign({}, result), { data: undefined, error: undefined, loading: false, called: true });\n        }\n        else {\n            var currentResult = this.currentObservable.query.getCurrentResult();\n            var loading = currentResult.loading, partial = currentResult.partial, networkStatus = currentResult.networkStatus, errors = currentResult.errors;\n            var error = currentResult.error, data = currentResult.data;\n            if (errors && errors.length > 0) {\n                error = new ApolloError({ graphQLErrors: errors });\n            }\n            result = __assign(__assign({}, result), { loading: loading,\n                networkStatus: networkStatus,\n                error: error, called: true });\n            if (loading) {\n                var previousData = this.previousData.result && this.previousData.result.data;\n                result.data =\n                    previousData && data\n                        ? __assign(__assign({}, previousData), data) : previousData || data;\n            }\n            else if (error) {\n                Object.assign(result, {\n                    data: (this.currentObservable.query.getLastResult() || {})\n                        .data,\n                });\n            }\n            else {\n                var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n                var partialRefetch = options.partialRefetch;\n                if (partialRefetch &&\n                    !data &&\n                    partial &&\n                    fetchPolicy !== 'cache-only') {\n                    Object.assign(result, {\n                        loading: true,\n                        networkStatus: NetworkStatus.loading,\n                    });\n                    result.refetch();\n                    return result;\n                }\n                result.data = data;\n            }\n        }\n        result.client = this.client;\n        this.previousData.loading =\n            (this.previousData.result && this.previousData.result.loading) || false;\n        this.previousData.result = result;\n        this.currentObservable.query &&\n            this.currentObservable.query.resetQueryStoreErrors();\n        return result;\n    };\n    QueryData.prototype.handleErrorOrCompleted = function () {\n        var obsQuery = this.currentObservable.query;\n        if (!obsQuery || !this.previousData.result)\n            return;\n        var _a = this.previousData.result, data = _a.data, loading = _a.loading, error = _a.error;\n        if (!loading) {\n            var _b = this.getOptions(), query = _b.query, variables = _b.variables, onCompleted = _b.onCompleted, onError = _b.onError;\n            if (this.previousOptions &&\n                !this.previousData.loading &&\n                equal(this.previousOptions.query, query) &&\n                equal(this.previousOptions.variables, variables)) {\n                return;\n            }\n            if (onCompleted && !error) {\n                onCompleted(data);\n            }\n            else if (onError && error) {\n                onError(error);\n            }\n        }\n    };\n    QueryData.prototype.removeQuerySubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    QueryData.prototype.observableQueryFields = function () {\n        var observable = this.currentObservable.query;\n        return {\n            variables: observable.variables,\n            refetch: this.obsRefetch,\n            fetchMore: this.obsFetchMore,\n            updateQuery: this.obsUpdateQuery,\n            startPolling: this.obsStartPolling,\n            stopPolling: this.obsStopPolling,\n            subscribeToMore: this.obsSubscribeToMore,\n        };\n    };\n    return QueryData;\n}(OperationData));\n\nfunction useDeepMemo(memoFn, key) {\n    var ref = useRef();\n    if (!ref.current || !equal(key, ref.current.key)) {\n        ref.current = { key: key, value: memoFn() };\n    }\n    return ref.current.value;\n}\n\nfunction useBaseQuery(query, options, lazy) {\n    if (lazy === void 0) { lazy = false; }\n    var context = useContext(getApolloContext());\n    var _a = useReducer(function (x) { return x + 1; }, 0), tick = _a[0], forceUpdate = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { query: query }) : { query: query };\n    var queryDataRef = useRef();\n    var queryData = queryDataRef.current ||\n        new QueryData({\n            options: updatedOptions,\n            context: context,\n            onNewData: function () {\n                if (!queryData.ssrInitiated()) {\n                    Promise.resolve().then(forceUpdate);\n                }\n                else {\n                    forceUpdate();\n                }\n            },\n        });\n    queryData.setOptions(updatedOptions);\n    queryData.context = context;\n    if (queryData.ssrInitiated() && !queryDataRef.current) {\n        queryDataRef.current = queryData;\n    }\n    var memo = {\n        options: __assign(__assign({}, updatedOptions), { onError: undefined, onCompleted: undefined }),\n        context: context,\n        tick: tick,\n    };\n    var result = useDeepMemo(function () { return (lazy ? queryData.executeLazy() : queryData.execute()); }, memo);\n    var queryResult = lazy\n        ? result[1]\n        : result;\n    useEffect(function () {\n        if (!queryDataRef.current) {\n            queryDataRef.current = queryData;\n        }\n        return function () { return queryData.cleanup(); };\n    }, []);\n    useEffect(function () { return queryData.afterExecute({ lazy: lazy }); }, [\n        queryResult.loading,\n        queryResult.networkStatus,\n        queryResult.error,\n        queryResult.data,\n    ]);\n    return result;\n}\n\nfunction useQuery(query, options) {\n    return useBaseQuery(query, options, false);\n}\n\nfunction useLazyQuery(query, options) {\n    return useBaseQuery(query, options, true);\n}\n\nvar MutationData = (function (_super) {\n    __extends(MutationData, _super);\n    function MutationData(_a) {\n        var options = _a.options, context = _a.context, result = _a.result, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.runMutation = function (mutationFunctionOptions) {\n            if (mutationFunctionOptions === void 0) { mutationFunctionOptions = {}; }\n            _this.onMutationStart();\n            var mutationId = _this.generateNewMutationId();\n            return _this.mutate(mutationFunctionOptions)\n                .then(function (response) {\n                _this.onMutationCompleted(response, mutationId);\n                return response;\n            })\n                .catch(function (error) {\n                _this.onMutationError(error, mutationId);\n                if (!_this.getOptions().onError)\n                    throw error;\n            });\n        };\n        _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n        _this.result = result;\n        _this.setResult = setResult;\n        _this.mostRecentMutationId = 0;\n        return _this;\n    }\n    MutationData.prototype.execute = function (result) {\n        this.isMounted = true;\n        this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n        result.client = this.refreshClient().client;\n        return [this.runMutation, result];\n    };\n    MutationData.prototype.afterExecute = function () {\n        this.isMounted = true;\n        return this.unmount.bind(this);\n    };\n    MutationData.prototype.cleanup = function () {\n    };\n    MutationData.prototype.mutate = function (mutationFunctionOptions) {\n        var _a = this.getOptions(), mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, update = _a.update, _b = _a.context, mutationContext = _b === void 0 ? {} : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, fetchPolicy = _a.fetchPolicy;\n        var mutateOptions = __assign({}, mutationFunctionOptions);\n        var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n        delete mutateOptions.variables;\n        return this.refreshClient().client.mutate(__assign({ mutation: mutation,\n            optimisticResponse: optimisticResponse, refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries, awaitRefetchQueries: awaitRefetchQueries,\n            update: update, context: mutationContext, fetchPolicy: fetchPolicy, variables: mutateVariables }, mutateOptions));\n    };\n    MutationData.prototype.onMutationStart = function () {\n        if (!this.result.loading && !this.getOptions().ignoreResults) {\n            this.updateResult({\n                loading: true,\n                error: undefined,\n                data: undefined,\n                called: true\n            });\n        }\n    };\n    MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n        var _a = this.getOptions(), onCompleted = _a.onCompleted, ignoreResults = _a.ignoreResults;\n        var data = response.data, errors = response.errors;\n        var error = errors && errors.length > 0\n            ? new ApolloError({ graphQLErrors: errors })\n            : undefined;\n        var callOncomplete = function () {\n            return onCompleted ? onCompleted(data) : null;\n        };\n        if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n            this.updateResult({\n                called: true,\n                loading: false,\n                data: data,\n                error: error\n            });\n        }\n        callOncomplete();\n    };\n    MutationData.prototype.onMutationError = function (error, mutationId) {\n        var onError = this.getOptions().onError;\n        if (this.isMostRecentMutation(mutationId)) {\n            this.updateResult({\n                loading: false,\n                error: error,\n                data: undefined,\n                called: true\n            });\n        }\n        if (onError) {\n            onError(error);\n        }\n    };\n    MutationData.prototype.generateNewMutationId = function () {\n        return ++this.mostRecentMutationId;\n    };\n    MutationData.prototype.isMostRecentMutation = function (mutationId) {\n        return this.mostRecentMutationId === mutationId;\n    };\n    MutationData.prototype.updateResult = function (result) {\n        if (this.isMounted &&\n            (!this.previousResult || !equal(this.previousResult, result))) {\n            this.setResult(result);\n            this.previousResult = result;\n        }\n    };\n    return MutationData;\n}(OperationData));\n\nfunction useMutation(mutation, options) {\n    var context = useContext(getApolloContext());\n    var _a = useState({ called: false, loading: false }), result = _a[0], setResult = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { mutation: mutation }) : { mutation: mutation };\n    var mutationDataRef = useRef();\n    function getMutationDataRef() {\n        if (!mutationDataRef.current) {\n            mutationDataRef.current = new MutationData({\n                options: updatedOptions,\n                context: context,\n                result: result,\n                setResult: setResult\n            });\n        }\n        return mutationDataRef.current;\n    }\n    var mutationData = getMutationDataRef();\n    mutationData.setOptions(updatedOptions);\n    mutationData.context = context;\n    useEffect(function () { return mutationData.afterExecute(); });\n    return mutationData.execute(result);\n}\n\nvar SubscriptionData = (function (_super) {\n    __extends(SubscriptionData, _super);\n    function SubscriptionData(_a) {\n        var options = _a.options, context = _a.context, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.currentObservable = {};\n        _this.setResult = setResult;\n        _this.initialize(options);\n        return _this;\n    }\n    SubscriptionData.prototype.execute = function (result) {\n        if (this.getOptions().skip === true) {\n            this.cleanup();\n            return {\n                loading: false,\n                error: undefined,\n                data: undefined,\n                variables: this.getOptions().variables\n            };\n        }\n        var currentResult = result;\n        if (this.refreshClient().isNew) {\n            currentResult = this.getLoadingResult();\n        }\n        var shouldResubscribe = this.getOptions().shouldResubscribe;\n        if (typeof shouldResubscribe === 'function') {\n            shouldResubscribe = !!shouldResubscribe(this.getOptions());\n        }\n        if (shouldResubscribe !== false &&\n            this.previousOptions &&\n            Object.keys(this.previousOptions).length > 0 &&\n            (this.previousOptions.subscription !== this.getOptions().subscription ||\n                !equal(this.previousOptions.variables, this.getOptions().variables) ||\n                this.previousOptions.skip !== this.getOptions().skip)) {\n            this.cleanup();\n            currentResult = this.getLoadingResult();\n        }\n        this.initialize(this.getOptions());\n        this.startSubscription();\n        this.previousOptions = this.getOptions();\n        return __assign(__assign({}, currentResult), { variables: this.getOptions().variables });\n    };\n    SubscriptionData.prototype.afterExecute = function () {\n        this.isMounted = true;\n    };\n    SubscriptionData.prototype.cleanup = function () {\n        this.endSubscription();\n        delete this.currentObservable.query;\n    };\n    SubscriptionData.prototype.initialize = function (options) {\n        if (this.currentObservable.query || this.getOptions().skip === true)\n            return;\n        this.currentObservable.query = this.refreshClient().client.subscribe({\n            query: options.subscription,\n            variables: options.variables,\n            fetchPolicy: options.fetchPolicy\n        });\n    };\n    SubscriptionData.prototype.startSubscription = function () {\n        if (this.currentObservable.subscription)\n            return;\n        this.currentObservable.subscription = this.currentObservable.query.subscribe({\n            next: this.updateCurrentData.bind(this),\n            error: this.updateError.bind(this),\n            complete: this.completeSubscription.bind(this)\n        });\n    };\n    SubscriptionData.prototype.getLoadingResult = function () {\n        return {\n            loading: true,\n            error: undefined,\n            data: undefined\n        };\n    };\n    SubscriptionData.prototype.updateResult = function (result) {\n        if (this.isMounted) {\n            this.setResult(result);\n        }\n    };\n    SubscriptionData.prototype.updateCurrentData = function (result) {\n        var onSubscriptionData = this.getOptions().onSubscriptionData;\n        this.updateResult({\n            data: result.data,\n            loading: false,\n            error: undefined\n        });\n        if (onSubscriptionData) {\n            onSubscriptionData({\n                client: this.refreshClient().client,\n                subscriptionData: result\n            });\n        }\n    };\n    SubscriptionData.prototype.updateError = function (error) {\n        this.updateResult({\n            error: error,\n            loading: false\n        });\n    };\n    SubscriptionData.prototype.completeSubscription = function () {\n        var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n        if (onSubscriptionComplete)\n            onSubscriptionComplete();\n        this.endSubscription();\n    };\n    SubscriptionData.prototype.endSubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    return SubscriptionData;\n}(OperationData));\n\nfunction useSubscription(subscription, options) {\n    var context = useContext(getApolloContext());\n    var updatedOptions = options\n        ? __assign(__assign({}, options), { subscription: subscription }) : { subscription: subscription };\n    var _a = useState({\n        loading: !updatedOptions.skip,\n        error: undefined,\n        data: undefined\n    }), result = _a[0], setResult = _a[1];\n    var subscriptionDataRef = useRef();\n    function getSubscriptionDataRef() {\n        if (!subscriptionDataRef.current) {\n            subscriptionDataRef.current = new SubscriptionData({\n                options: updatedOptions,\n                context: context,\n                setResult: setResult\n            });\n        }\n        return subscriptionDataRef.current;\n    }\n    var subscriptionData = getSubscriptionDataRef();\n    subscriptionData.setOptions(updatedOptions, true);\n    subscriptionData.context = context;\n    useEffect(function () { return subscriptionData.afterExecute(); });\n    useEffect(function () { return subscriptionData.cleanup.bind(subscriptionData); }, []);\n    return subscriptionData.execute(result);\n}\n\nfunction useApolloClient() {\n    var client = React.useContext(getApolloContext()).client;\n    process.env.NODE_ENV === \"production\" ? invariant(client, 1) : invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' +\n        'have called `ApolloProvider` higher up in your tree.');\n    return client;\n}\n\nfunction makeDefaultQueryInfo() {\n    return {\n        seen: false,\n        observable: null\n    };\n}\nvar RenderPromises = (function () {\n    function RenderPromises() {\n        this.queryPromises = new Map();\n        this.queryInfoTrie = new Map();\n    }\n    RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n        this.lookupQueryInfo(props).observable = observable;\n    };\n    RenderPromises.prototype.getSSRObservable = function (props) {\n        return this.lookupQueryInfo(props).observable;\n    };\n    RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n        var info = this.lookupQueryInfo(queryInstance.getOptions());\n        if (!info.seen) {\n            this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n                resolve(queryInstance.fetchData());\n            }));\n            return null;\n        }\n        return finish();\n    };\n    RenderPromises.prototype.hasPromises = function () {\n        return this.queryPromises.size > 0;\n    };\n    RenderPromises.prototype.consumeAndAwaitPromises = function () {\n        var _this = this;\n        var promises = [];\n        this.queryPromises.forEach(function (promise, queryInstance) {\n            _this.lookupQueryInfo(queryInstance).seen = true;\n            promises.push(promise);\n        });\n        this.queryPromises.clear();\n        return Promise.all(promises);\n    };\n    RenderPromises.prototype.lookupQueryInfo = function (props) {\n        var queryInfoTrie = this.queryInfoTrie;\n        var query = props.query, variables = props.variables;\n        var varMap = queryInfoTrie.get(query) || new Map();\n        if (!queryInfoTrie.has(query))\n            queryInfoTrie.set(query, varMap);\n        var variablesString = JSON.stringify(variables);\n        var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n        if (!varMap.has(variablesString))\n            varMap.set(variablesString, info);\n        return info;\n    };\n    return RenderPromises;\n}());\n\nexport { RenderPromises, useApolloClient, useLazyQuery, useMutation, useQuery, useSubscription };\n//# sourceMappingURL=react-hooks.esm.js.map\n","import { __assign } from 'tslib';\nimport React from 'react';\nimport { getApolloContext } from '@apollo/react-common';\nimport { RenderPromises } from '@apollo/react-hooks';\n\nfunction getDataFromTree(tree, context) {\n    if (context === void 0) { context = {}; }\n    return getMarkupFromTree({\n        tree: tree,\n        context: context,\n        renderFunction: require('react-dom/server').renderToStaticMarkup\n    });\n}\nfunction getMarkupFromTree(_a) {\n    var tree = _a.tree, _b = _a.context, context = _b === void 0 ? {} : _b, _c = _a.renderFunction, renderFunction = _c === void 0 ? require('react-dom/server').renderToStaticMarkup : _c;\n    var renderPromises = new RenderPromises();\n    function process() {\n        var ApolloContext = getApolloContext();\n        var html = renderFunction(React.createElement(ApolloContext.Provider, { value: __assign(__assign({}, context), { renderPromises: renderPromises }) }, tree));\n        return renderPromises.hasPromises()\n            ? renderPromises.consumeAndAwaitPromises().then(process)\n            : html;\n    }\n    return Promise.resolve().then(process);\n}\n\nfunction renderToStringWithData(component) {\n    return getMarkupFromTree({\n        tree: component,\n        renderFunction: require('react-dom/server').renderToString\n    });\n}\n\nexport { getDataFromTree, getMarkupFromTree, renderToStringWithData };\n//# sourceMappingURL=react-ssr.esm.js.map\n","export { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nexport { Mutation, Query, Subscription } from '@apollo/react-components';\nexport { graphql, withApollo, withMutation, withQuery, withSubscription } from '@apollo/react-hoc';\nexport { useApolloClient, useLazyQuery, useMutation, useQuery, useSubscription } from '@apollo/react-hooks';\nexport { getDataFromTree, getMarkupFromTree, renderToStringWithData } from '@apollo/react-ssr';\n//# sourceMappingURL=react-apollo.esm.js.map\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import { __extends, __assign, __awaiter, __generator } from 'tslib';\nimport { getOperationDefinition, isEqual, tryFunctionOrLogError, cloneDeep, mergeDeep, hasDirectives, removeClientSetsFromDocument, buildQueryFromSelectionSet, getMainDefinition, getFragmentDefinitions, createFragmentMap, mergeDeepArray, resultKeyNameFromField, argumentsObjectFromField, shouldInclude, isField, isInlineFragment, canUseWeakMap, graphQLResultHasError, removeConnectionDirectiveFromDocument, hasClientExports, getDefaultValues, getOperationName } from 'apollo-utilities';\nimport { Observable as Observable$1, execute, ApolloLink } from 'apollo-link';\nimport $$observable from 'symbol-observable';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { visit, BREAK } from 'graphql/language/visitor';\n\nvar NetworkStatus;\n(function (NetworkStatus) {\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\nfunction isNetworkRequestInFlight(networkStatus) {\n    return networkStatus < 7;\n}\n\nvar Observable = (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Observable.prototype[$$observable] = function () {\n        return this;\n    };\n    Observable.prototype['@@observable'] = function () {\n        return this;\n    };\n    return Observable;\n}(Observable$1));\n\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\n\nfunction isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n    var message = '';\n    if (isNonEmptyArray(err.graphQLErrors)) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += \"GraphQL error: \" + errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += 'Network error: ' + err.networkError.message + '\\n';\n    }\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = (function (_super) {\n    __extends(ApolloError, _super);\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        if (!errorMessage) {\n            _this.message = generateErrorMessage(_this);\n        }\n        else {\n            _this.message = errorMessage;\n        }\n        _this.extraInfo = extraInfo;\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\n\nvar FetchType;\n(function (FetchType) {\n    FetchType[FetchType[\"normal\"] = 1] = \"normal\";\n    FetchType[FetchType[\"refetch\"] = 2] = \"refetch\";\n    FetchType[FetchType[\"poll\"] = 3] = \"poll\";\n})(FetchType || (FetchType = {}));\n\nvar hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue && (storeValue.networkError ||\n        (policy === 'none' && isNonEmptyArray(storeValue.graphQLErrors)));\n};\nvar ObservableQuery = (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var queryManager = _a.queryManager, options = _a.options, _b = _a.shouldSubscribe, shouldSubscribe = _b === void 0 ? true : _b;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        _this.observers = new Set();\n        _this.subscriptions = new Set();\n        _this.isTornDown = false;\n        _this.options = options;\n        _this.variables = options.variables || {};\n        _this.queryId = queryManager.generateQueryId();\n        _this.shouldSubscribe = shouldSubscribe;\n        var opDef = getOperationDefinition(options.query);\n        _this.queryName = opDef && opDef.name && opDef.name.value;\n        _this.queryManager = queryManager;\n        return _this;\n    }\n    ObservableQuery.prototype.result = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    _this.observers.delete(observer);\n                    if (!_this.observers.size) {\n                        _this.queryManager.removeQuery(_this.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: reject,\n            };\n            var subscription = _this.subscribe(observer);\n        });\n    };\n    ObservableQuery.prototype.currentResult = function () {\n        var result = this.getCurrentResult();\n        if (result.data === undefined) {\n            result.data = {};\n        }\n        return result;\n    };\n    ObservableQuery.prototype.getCurrentResult = function () {\n        if (this.isTornDown) {\n            var lastResult = this.lastResult;\n            return {\n                data: !this.lastError && lastResult && lastResult.data || void 0,\n                error: this.lastError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n            };\n        }\n        var _a = this.queryManager.getCurrentQueryResult(this), data = _a.data, partial = _a.partial;\n        var queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n        var result;\n        var fetchPolicy = this.options.fetchPolicy;\n        var isNetworkFetchPolicy = fetchPolicy === 'network-only' ||\n            fetchPolicy === 'no-cache';\n        if (queryStoreValue) {\n            var networkStatus = queryStoreValue.networkStatus;\n            if (hasError(queryStoreValue, this.options.errorPolicy)) {\n                return {\n                    data: void 0,\n                    loading: false,\n                    networkStatus: networkStatus,\n                    error: new ApolloError({\n                        graphQLErrors: queryStoreValue.graphQLErrors,\n                        networkError: queryStoreValue.networkError,\n                    }),\n                };\n            }\n            if (queryStoreValue.variables) {\n                this.options.variables = __assign(__assign({}, this.options.variables), queryStoreValue.variables);\n                this.variables = this.options.variables;\n            }\n            result = {\n                data: data,\n                loading: isNetworkRequestInFlight(networkStatus),\n                networkStatus: networkStatus,\n            };\n            if (queryStoreValue.graphQLErrors && this.options.errorPolicy === 'all') {\n                result.errors = queryStoreValue.graphQLErrors;\n            }\n        }\n        else {\n            var loading = isNetworkFetchPolicy ||\n                (partial && fetchPolicy !== 'cache-only');\n            result = {\n                data: data,\n                loading: loading,\n                networkStatus: loading ? NetworkStatus.loading : NetworkStatus.ready,\n            };\n        }\n        if (!partial) {\n            this.updateLastResult(__assign(__assign({}, result), { stale: false }));\n        }\n        return __assign(__assign({}, result), { partial: partial });\n    };\n    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult) {\n        var snapshot = this.lastResultSnapshot;\n        return !(snapshot &&\n            newResult &&\n            snapshot.networkStatus === newResult.networkStatus &&\n            snapshot.stale === newResult.stale &&\n            isEqual(snapshot.data, newResult.data));\n    };\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastResultSnapshot;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.resetQueryStoreErrors = function () {\n        var queryStore = this.queryManager.queryStore.get(this.queryId);\n        if (queryStore) {\n            queryStore.networkError = null;\n            queryStore.graphQLErrors = [];\n        }\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var fetchPolicy = this.options.fetchPolicy;\n        if (fetchPolicy === 'cache-only') {\n            return Promise.reject(process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError('cache-only fetchPolicy option should not be used together with query refetch.'));\n        }\n        if (fetchPolicy !== 'no-cache' &&\n            fetchPolicy !== 'cache-and-network') {\n            fetchPolicy = 'network-only';\n        }\n        if (!isEqual(this.variables, variables)) {\n            this.variables = __assign(__assign({}, this.variables), variables);\n        }\n        if (!isEqual(this.options.variables, this.variables)) {\n            this.options.variables = __assign(__assign({}, this.options.variables), this.variables);\n        }\n        return this.queryManager.fetchQuery(this.queryId, __assign(__assign({}, this.options), { fetchPolicy: fetchPolicy }), FetchType.refetch);\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(fetchMoreOptions.updateQuery, 2) : invariant(fetchMoreOptions.updateQuery, 'updateQuery option is required. This function defines how to update the query data with the new results.');\n        var combinedOptions = __assign(__assign({}, (fetchMoreOptions.query ? fetchMoreOptions : __assign(__assign(__assign({}, this.options), fetchMoreOptions), { variables: __assign(__assign({}, this.variables), fetchMoreOptions.variables) }))), { fetchPolicy: 'network-only' });\n        var qid = this.queryManager.generateQueryId();\n        return this.queryManager\n            .fetchQuery(qid, combinedOptions, FetchType.normal, this.queryId)\n            .then(function (fetchMoreResult) {\n            _this.updateQuery(function (previousResult) {\n                return fetchMoreOptions.updateQuery(previousResult, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables,\n                });\n            });\n            _this.queryManager.stopQuery(qid);\n            return fetchMoreResult;\n        }, function (error) {\n            _this.queryManager.stopQuery(qid);\n            throw error;\n        });\n    };\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n        })\n            .subscribe({\n            next: function (subscriptionData) {\n                var updateQuery = options.updateQuery;\n                if (updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return updateQuery(previous, {\n                            subscriptionData: subscriptionData,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                process.env.NODE_ENV === \"production\" || invariant.error('Unhandled GraphQL subscription error', err);\n            },\n        });\n        this.subscriptions.add(subscription);\n        return function () {\n            if (_this.subscriptions.delete(subscription)) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function (opts) {\n        var oldFetchPolicy = this.options.fetchPolicy;\n        this.options = __assign(__assign({}, this.options), opts);\n        if (opts.pollInterval) {\n            this.startPolling(opts.pollInterval);\n        }\n        else if (opts.pollInterval === 0) {\n            this.stopPolling();\n        }\n        var fetchPolicy = opts.fetchPolicy;\n        return this.setVariables(this.options.variables, oldFetchPolicy !== fetchPolicy && (oldFetchPolicy === 'cache-only' ||\n            oldFetchPolicy === 'standby' ||\n            fetchPolicy === 'network-only'), opts.fetchResults);\n    };\n    ObservableQuery.prototype.setVariables = function (variables, tryFetch, fetchResults) {\n        if (tryFetch === void 0) { tryFetch = false; }\n        if (fetchResults === void 0) { fetchResults = true; }\n        this.isTornDown = false;\n        variables = variables || this.variables;\n        if (!tryFetch && isEqual(variables, this.variables)) {\n            return this.observers.size && fetchResults\n                ? this.result()\n                : Promise.resolve();\n        }\n        this.variables = this.options.variables = variables;\n        if (!this.observers.size) {\n            return Promise.resolve();\n        }\n        return this.queryManager.fetchQuery(this.queryId, this.options);\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var queryManager = this.queryManager;\n        var _a = queryManager.getQueryWithPreviousResult(this.queryId), previousResult = _a.previousResult, variables = _a.variables, document = _a.document;\n        var newResult = tryFunctionOrLogError(function () {\n            return mapFn(previousResult, { variables: variables });\n        });\n        if (newResult) {\n            queryManager.dataStore.markUpdateQueryResult(document, variables, newResult);\n            queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        this.queryManager.stopPollingQuery(this.queryId);\n        this.options.pollInterval = undefined;\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        assertNotCacheFirstOrOnly(this);\n        this.options.pollInterval = pollInterval;\n        this.queryManager.startPollingQuery(this.options, this.queryId);\n    };\n    ObservableQuery.prototype.updateLastResult = function (newResult) {\n        var previousResult = this.lastResult;\n        this.lastResult = newResult;\n        this.lastResultSnapshot = this.queryManager.assumeImmutableResults\n            ? newResult\n            : cloneDeep(newResult);\n        return previousResult;\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        try {\n            var subObserver = observer._subscription._observer;\n            if (subObserver && !subObserver.error) {\n                subObserver.error = defaultSubscriptionObserverErrorCallback;\n            }\n        }\n        catch (_a) { }\n        var first = !this.observers.size;\n        this.observers.add(observer);\n        if (observer.next && this.lastResult)\n            observer.next(this.lastResult);\n        if (observer.error && this.lastError)\n            observer.error(this.lastError);\n        if (first) {\n            this.setUpQuery();\n        }\n        return function () {\n            if (_this.observers.delete(observer) && !_this.observers.size) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.setUpQuery = function () {\n        var _this = this;\n        var _a = this, queryManager = _a.queryManager, queryId = _a.queryId;\n        if (this.shouldSubscribe) {\n            queryManager.addObservableQuery(queryId, this);\n        }\n        if (this.options.pollInterval) {\n            assertNotCacheFirstOrOnly(this);\n            queryManager.startPollingQuery(this.options, queryId);\n        }\n        var onError = function (error) {\n            _this.updateLastResult(__assign(__assign({}, _this.lastResult), { errors: error.graphQLErrors, networkStatus: NetworkStatus.error, loading: false }));\n            iterateObserversSafely(_this.observers, 'error', _this.lastError = error);\n        };\n        queryManager.observeQuery(queryId, this.options, {\n            next: function (result) {\n                if (_this.lastError || _this.isDifferentFromLastResult(result)) {\n                    var previousResult_1 = _this.updateLastResult(result);\n                    var _a = _this.options, query_1 = _a.query, variables = _a.variables, fetchPolicy_1 = _a.fetchPolicy;\n                    if (queryManager.transform(query_1).hasClientExports) {\n                        queryManager.getLocalState().addExportedVariables(query_1, variables).then(function (variables) {\n                            var previousVariables = _this.variables;\n                            _this.variables = _this.options.variables = variables;\n                            if (!result.loading &&\n                                previousResult_1 &&\n                                fetchPolicy_1 !== 'cache-only' &&\n                                queryManager.transform(query_1).serverQuery &&\n                                !isEqual(previousVariables, variables)) {\n                                _this.refetch();\n                            }\n                            else {\n                                iterateObserversSafely(_this.observers, 'next', result);\n                            }\n                        });\n                    }\n                    else {\n                        iterateObserversSafely(_this.observers, 'next', result);\n                    }\n                }\n            },\n            error: onError,\n        }).catch(onError);\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        var queryManager = this.queryManager;\n        this.isTornDown = true;\n        queryManager.stopPollingQuery(this.queryId);\n        this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptions.clear();\n        queryManager.removeObservableQuery(this.queryId);\n        queryManager.stopQuery(this.queryId);\n        this.observers.clear();\n    };\n    return ObservableQuery;\n}(Observable));\nfunction defaultSubscriptionObserverErrorCallback(error) {\n    process.env.NODE_ENV === \"production\" || invariant.error('Unhandled error', error.message, error.stack);\n}\nfunction iterateObserversSafely(observers, method, argument) {\n    var observersWithMethod = [];\n    observers.forEach(function (obs) { return obs[method] && observersWithMethod.push(obs); });\n    observersWithMethod.forEach(function (obs) { return obs[method](argument); });\n}\nfunction assertNotCacheFirstOrOnly(obsQuery) {\n    var fetchPolicy = obsQuery.options.fetchPolicy;\n    process.env.NODE_ENV === \"production\" ? invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 3) : invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 'Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n}\n\nvar MutationStore = (function () {\n    function MutationStore() {\n        this.store = {};\n    }\n    MutationStore.prototype.getStore = function () {\n        return this.store;\n    };\n    MutationStore.prototype.get = function (mutationId) {\n        return this.store[mutationId];\n    };\n    MutationStore.prototype.initMutation = function (mutationId, mutation, variables) {\n        this.store[mutationId] = {\n            mutation: mutation,\n            variables: variables || {},\n            loading: true,\n            error: null,\n        };\n    };\n    MutationStore.prototype.markMutationError = function (mutationId, error) {\n        var mutation = this.store[mutationId];\n        if (mutation) {\n            mutation.loading = false;\n            mutation.error = error;\n        }\n    };\n    MutationStore.prototype.markMutationResult = function (mutationId) {\n        var mutation = this.store[mutationId];\n        if (mutation) {\n            mutation.loading = false;\n            mutation.error = null;\n        }\n    };\n    MutationStore.prototype.reset = function () {\n        this.store = {};\n    };\n    return MutationStore;\n}());\n\nvar QueryStore = (function () {\n    function QueryStore() {\n        this.store = {};\n    }\n    QueryStore.prototype.getStore = function () {\n        return this.store;\n    };\n    QueryStore.prototype.get = function (queryId) {\n        return this.store[queryId];\n    };\n    QueryStore.prototype.initQuery = function (query) {\n        var previousQuery = this.store[query.queryId];\n        process.env.NODE_ENV === \"production\" ? invariant(!previousQuery ||\n            previousQuery.document === query.document ||\n            isEqual(previousQuery.document, query.document), 19) : invariant(!previousQuery ||\n            previousQuery.document === query.document ||\n            isEqual(previousQuery.document, query.document), 'Internal Error: may not update existing query string in store');\n        var isSetVariables = false;\n        var previousVariables = null;\n        if (query.storePreviousVariables &&\n            previousQuery &&\n            previousQuery.networkStatus !== NetworkStatus.loading) {\n            if (!isEqual(previousQuery.variables, query.variables)) {\n                isSetVariables = true;\n                previousVariables = previousQuery.variables;\n            }\n        }\n        var networkStatus;\n        if (isSetVariables) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        else if (query.isPoll) {\n            networkStatus = NetworkStatus.poll;\n        }\n        else if (query.isRefetch) {\n            networkStatus = NetworkStatus.refetch;\n        }\n        else {\n            networkStatus = NetworkStatus.loading;\n        }\n        var graphQLErrors = [];\n        if (previousQuery && previousQuery.graphQLErrors) {\n            graphQLErrors = previousQuery.graphQLErrors;\n        }\n        this.store[query.queryId] = {\n            document: query.document,\n            variables: query.variables,\n            previousVariables: previousVariables,\n            networkError: null,\n            graphQLErrors: graphQLErrors,\n            networkStatus: networkStatus,\n            metadata: query.metadata,\n        };\n        if (typeof query.fetchMoreForQueryId === 'string' &&\n            this.store[query.fetchMoreForQueryId]) {\n            this.store[query.fetchMoreForQueryId].networkStatus =\n                NetworkStatus.fetchMore;\n        }\n    };\n    QueryStore.prototype.markQueryResult = function (queryId, result, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = NetworkStatus.ready;\n        if (typeof fetchMoreForQueryId === 'string' &&\n            this.store[fetchMoreForQueryId]) {\n            this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n        }\n    };\n    QueryStore.prototype.markQueryError = function (queryId, error, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = error;\n        this.store[queryId].networkStatus = NetworkStatus.error;\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.markQueryResultClient(fetchMoreForQueryId, true);\n        }\n    };\n    QueryStore.prototype.markQueryResultClient = function (queryId, complete) {\n        var storeValue = this.store && this.store[queryId];\n        if (storeValue) {\n            storeValue.networkError = null;\n            storeValue.previousVariables = null;\n            if (complete) {\n                storeValue.networkStatus = NetworkStatus.ready;\n            }\n        }\n    };\n    QueryStore.prototype.stopQuery = function (queryId) {\n        delete this.store[queryId];\n    };\n    QueryStore.prototype.reset = function (observableQueryIds) {\n        var _this = this;\n        Object.keys(this.store).forEach(function (queryId) {\n            if (observableQueryIds.indexOf(queryId) < 0) {\n                _this.stopQuery(queryId);\n            }\n            else {\n                _this.store[queryId].networkStatus = NetworkStatus.loading;\n            }\n        });\n    };\n    return QueryStore;\n}());\n\nfunction capitalizeFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar LocalState = (function () {\n    function LocalState(_a) {\n        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;\n        this.cache = cache;\n        if (client) {\n            this.client = client;\n        }\n        if (resolvers) {\n            this.addResolvers(resolvers);\n        }\n        if (fragmentMatcher) {\n            this.setFragmentMatcher(fragmentMatcher);\n        }\n    }\n    LocalState.prototype.addResolvers = function (resolvers) {\n        var _this = this;\n        this.resolvers = this.resolvers || {};\n        if (Array.isArray(resolvers)) {\n            resolvers.forEach(function (resolverGroup) {\n                _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);\n            });\n        }\n        else {\n            this.resolvers = mergeDeep(this.resolvers, resolvers);\n        }\n    };\n    LocalState.prototype.setResolvers = function (resolvers) {\n        this.resolvers = {};\n        this.addResolvers(resolvers);\n    };\n    LocalState.prototype.getResolvers = function () {\n        return this.resolvers || {};\n    };\n    LocalState.prototype.runResolvers = function (_a) {\n        var document = _a.document, remoteResult = _a.remoteResult, context = _a.context, variables = _a.variables, _b = _a.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                if (document) {\n                    return [2, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) { return (__assign(__assign({}, remoteResult), { data: localResult.result })); })];\n                }\n                return [2, remoteResult];\n            });\n        });\n    };\n    LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {\n        this.fragmentMatcher = fragmentMatcher;\n    };\n    LocalState.prototype.getFragmentMatcher = function () {\n        return this.fragmentMatcher;\n    };\n    LocalState.prototype.clientQuery = function (document) {\n        if (hasDirectives(['client'], document)) {\n            if (this.resolvers) {\n                return document;\n            }\n            process.env.NODE_ENV === \"production\" || invariant.warn('Found @client directives in a query but no ApolloClient resolvers ' +\n                'were specified. This means ApolloClient local resolver handling ' +\n                'has been disabled, and @client directives will be passed through ' +\n                'to your link chain.');\n        }\n        return null;\n    };\n    LocalState.prototype.serverQuery = function (document) {\n        return this.resolvers ? removeClientSetsFromDocument(document) : document;\n    };\n    LocalState.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var cache = this.cache;\n        var newContext = __assign(__assign({}, context), { cache: cache, getCacheKey: function (obj) {\n                if (cache.config) {\n                    return cache.config.dataIdFromObject(obj);\n                }\n                else {\n                    process.env.NODE_ENV === \"production\" ? invariant(false, 6) : invariant(false, 'To use context.getCacheKey, you need to use a cache that has ' +\n                        'a configurable dataIdFromObject, like apollo-cache-inmemory.');\n                }\n            } });\n        return newContext;\n    };\n    LocalState.prototype.addExportedVariables = function (document, variables, context) {\n        if (variables === void 0) { variables = {}; }\n        if (context === void 0) { context = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (document) {\n                    return [2, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) { return (__assign(__assign({}, variables), data.exportedVariables)); })];\n                }\n                return [2, __assign({}, variables)];\n            });\n        });\n    };\n    LocalState.prototype.shouldForceResolvers = function (document) {\n        var forceResolvers = false;\n        visit(document, {\n            Directive: {\n                enter: function (node) {\n                    if (node.name.value === 'client' && node.arguments) {\n                        forceResolvers = node.arguments.some(function (arg) {\n                            return arg.name.value === 'always' &&\n                                arg.value.kind === 'BooleanValue' &&\n                                arg.value.value === true;\n                        });\n                        if (forceResolvers) {\n                            return BREAK;\n                        }\n                    }\n                },\n            },\n        });\n        return forceResolvers;\n    };\n    LocalState.prototype.buildRootValueFromCache = function (document, variables) {\n        return this.cache.diff({\n            query: buildQueryFromSelectionSet(document),\n            variables: variables,\n            returnPartialData: true,\n            optimistic: false,\n        }).result;\n    };\n    LocalState.prototype.resolveDocument = function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\n        if (context === void 0) { context = {}; }\n        if (variables === void 0) { variables = {}; }\n        if (fragmentMatcher === void 0) { fragmentMatcher = function () { return true; }; }\n        if (onlyRunForcedResolvers === void 0) { onlyRunForcedResolvers = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var mainDefinition, fragments, fragmentMap, definitionOperation, defaultOperationType, _a, cache, client, execContext;\n            return __generator(this, function (_b) {\n                mainDefinition = getMainDefinition(document);\n                fragments = getFragmentDefinitions(document);\n                fragmentMap = createFragmentMap(fragments);\n                definitionOperation = mainDefinition\n                    .operation;\n                defaultOperationType = definitionOperation\n                    ? capitalizeFirstLetter(definitionOperation)\n                    : 'Query';\n                _a = this, cache = _a.cache, client = _a.client;\n                execContext = {\n                    fragmentMap: fragmentMap,\n                    context: __assign(__assign({}, context), { cache: cache,\n                        client: client }),\n                    variables: variables,\n                    fragmentMatcher: fragmentMatcher,\n                    defaultOperationType: defaultOperationType,\n                    exportedVariables: {},\n                    onlyRunForcedResolvers: onlyRunForcedResolvers,\n                };\n                return [2, this.resolveSelectionSet(mainDefinition.selectionSet, rootValue, execContext).then(function (result) { return ({\n                        result: result,\n                        exportedVariables: execContext.exportedVariables,\n                    }); })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSelectionSet = function (selectionSet, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fragmentMap, context, variables, resultsToMerge, execute;\n            var _this = this;\n            return __generator(this, function (_a) {\n                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\n                resultsToMerge = [rootValue];\n                execute = function (selection) { return __awaiter(_this, void 0, void 0, function () {\n                    var fragment, typeCondition;\n                    return __generator(this, function (_a) {\n                        if (!shouldInclude(selection, variables)) {\n                            return [2];\n                        }\n                        if (isField(selection)) {\n                            return [2, this.resolveField(selection, rootValue, execContext).then(function (fieldResult) {\n                                    var _a;\n                                    if (typeof fieldResult !== 'undefined') {\n                                        resultsToMerge.push((_a = {},\n                                            _a[resultKeyNameFromField(selection)] = fieldResult,\n                                            _a));\n                                    }\n                                })];\n                        }\n                        if (isInlineFragment(selection)) {\n                            fragment = selection;\n                        }\n                        else {\n                            fragment = fragmentMap[selection.name.value];\n                            process.env.NODE_ENV === \"production\" ? invariant(fragment, 7) : invariant(fragment, \"No fragment named \" + selection.name.value);\n                        }\n                        if (fragment && fragment.typeCondition) {\n                            typeCondition = fragment.typeCondition.name.value;\n                            if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n                                return [2, this.resolveSelectionSet(fragment.selectionSet, rootValue, execContext).then(function (fragmentResult) {\n                                        resultsToMerge.push(fragmentResult);\n                                    })];\n                            }\n                        }\n                        return [2];\n                    });\n                }); };\n                return [2, Promise.all(selectionSet.selections.map(execute)).then(function () {\n                        return mergeDeepArray(resultsToMerge);\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveField = function (field, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\n            var _this = this;\n            return __generator(this, function (_a) {\n                variables = execContext.variables;\n                fieldName = field.name.value;\n                aliasedFieldName = resultKeyNameFromField(field);\n                aliasUsed = fieldName !== aliasedFieldName;\n                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n                resultPromise = Promise.resolve(defaultResult);\n                if (!execContext.onlyRunForcedResolvers ||\n                    this.shouldForceResolvers(field)) {\n                    resolverType = rootValue.__typename || execContext.defaultOperationType;\n                    resolverMap = this.resolvers && this.resolvers[resolverType];\n                    if (resolverMap) {\n                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n                        if (resolve) {\n                            resultPromise = Promise.resolve(resolve(rootValue, argumentsObjectFromField(field, variables), execContext.context, { field: field, fragmentMap: execContext.fragmentMap }));\n                        }\n                    }\n                }\n                return [2, resultPromise.then(function (result) {\n                        if (result === void 0) { result = defaultResult; }\n                        if (field.directives) {\n                            field.directives.forEach(function (directive) {\n                                if (directive.name.value === 'export' && directive.arguments) {\n                                    directive.arguments.forEach(function (arg) {\n                                        if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                                            execContext.exportedVariables[arg.value.value] = result;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        if (!field.selectionSet) {\n                            return result;\n                        }\n                        if (result == null) {\n                            return result;\n                        }\n                        if (Array.isArray(result)) {\n                            return _this.resolveSubSelectedArray(field, result, execContext);\n                        }\n                        if (field.selectionSet) {\n                            return _this.resolveSelectionSet(field.selectionSet, result, execContext);\n                        }\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSubSelectedArray = function (field, result, execContext) {\n        var _this = this;\n        return Promise.all(result.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return _this.resolveSubSelectedArray(field, item, execContext);\n            }\n            if (field.selectionSet) {\n                return _this.resolveSelectionSet(field.selectionSet, item, execContext);\n            }\n        }));\n    };\n    return LocalState;\n}());\n\nfunction multiplex(inner) {\n    var observers = new Set();\n    var sub = null;\n    return new Observable(function (observer) {\n        observers.add(observer);\n        sub = sub || inner.subscribe({\n            next: function (value) {\n                observers.forEach(function (obs) { return obs.next && obs.next(value); });\n            },\n            error: function (error) {\n                observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n            complete: function () {\n                observers.forEach(function (obs) { return obs.complete && obs.complete(); });\n            },\n        });\n        return function () {\n            if (observers.delete(observer) && !observers.size && sub) {\n                sub.unsubscribe();\n                sub = null;\n            }\n        };\n    });\n}\nfunction asyncMap(observable, mapFn) {\n    return new Observable(function (observer) {\n        var next = observer.next, error = observer.error, complete = observer.complete;\n        var activeNextCount = 0;\n        var completed = false;\n        var handler = {\n            next: function (value) {\n                ++activeNextCount;\n                new Promise(function (resolve) {\n                    resolve(mapFn(value));\n                }).then(function (result) {\n                    --activeNextCount;\n                    next && next.call(observer, result);\n                    completed && handler.complete();\n                }, function (e) {\n                    --activeNextCount;\n                    error && error.call(observer, e);\n                });\n            },\n            error: function (e) {\n                error && error.call(observer, e);\n            },\n            complete: function () {\n                completed = true;\n                if (!activeNextCount) {\n                    complete && complete.call(observer);\n                }\n            },\n        };\n        var sub = observable.subscribe(handler);\n        return function () { return sub.unsubscribe(); };\n    });\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar QueryManager = (function () {\n    function QueryManager(_a) {\n        var link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, store = _a.store, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d, _e = _a.clientAwareness, clientAwareness = _e === void 0 ? {} : _e, localState = _a.localState, assumeImmutableResults = _a.assumeImmutableResults;\n        this.mutationStore = new MutationStore();\n        this.queryStore = new QueryStore();\n        this.clientAwareness = {};\n        this.idCounter = 1;\n        this.queries = new Map();\n        this.fetchQueryRejectFns = new Map();\n        this.transformCache = new (canUseWeakMap ? WeakMap : Map)();\n        this.inFlightLinkObservables = new Map();\n        this.pollingInfoByQueryId = new Map();\n        this.link = link;\n        this.queryDeduplication = queryDeduplication;\n        this.dataStore = store;\n        this.onBroadcast = onBroadcast;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new LocalState({ cache: store.getCache() });\n        this.ssrMode = ssrMode;\n        this.assumeImmutableResults = !!assumeImmutableResults;\n    }\n    QueryManager.prototype.stop = function () {\n        var _this = this;\n        this.queries.forEach(function (_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(process.env.NODE_ENV === \"production\" ? new InvariantError(8) : new InvariantError('QueryManager stopped while query was in flight'));\n        });\n    };\n    QueryManager.prototype.mutate = function (_a) {\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, updateWithProxyFn = _a.update, _d = _a.errorPolicy, errorPolicy = _d === void 0 ? 'none' : _d, fetchPolicy = _a.fetchPolicy, _e = _a.context, context = _e === void 0 ? {} : _e;\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationId, generateUpdateQueriesInfo, self;\n            var _this = this;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        process.env.NODE_ENV === \"production\" ? invariant(mutation, 9) : invariant(mutation, 'mutation option is required. You must specify your GraphQL document in the mutation option.');\n                        process.env.NODE_ENV === \"production\" ? invariant(!fetchPolicy || fetchPolicy === 'no-cache', 10) : invariant(!fetchPolicy || fetchPolicy === 'no-cache', \"Mutations only support a 'no-cache' fetchPolicy. If you don't want to disable the cache, remove your fetchPolicy setting to proceed with the default mutation behavior.\");\n                        mutationId = this.generateQueryId();\n                        mutation = this.transform(mutation).document;\n                        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n                        variables = this.getVariables(mutation, variables);\n                        if (!this.transform(mutation).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(mutation, variables, context)];\n                    case 1:\n                        variables = _f.sent();\n                        _f.label = 2;\n                    case 2:\n                        generateUpdateQueriesInfo = function () {\n                            var ret = {};\n                            if (updateQueriesByName) {\n                                _this.queries.forEach(function (_a, queryId) {\n                                    var observableQuery = _a.observableQuery;\n                                    if (observableQuery) {\n                                        var queryName = observableQuery.queryName;\n                                        if (queryName &&\n                                            hasOwnProperty.call(updateQueriesByName, queryName)) {\n                                            ret[queryId] = {\n                                                updater: updateQueriesByName[queryName],\n                                                query: _this.queryStore.get(queryId),\n                                            };\n                                        }\n                                    }\n                                });\n                            }\n                            return ret;\n                        };\n                        this.mutationStore.initMutation(mutationId, mutation, variables);\n                        this.dataStore.markMutationInit({\n                            mutationId: mutationId,\n                            document: mutation,\n                            variables: variables,\n                            updateQueries: generateUpdateQueriesInfo(),\n                            update: updateWithProxyFn,\n                            optimisticResponse: optimisticResponse,\n                        });\n                        this.broadcastQueries();\n                        self = this;\n                        return [2, new Promise(function (resolve, reject) {\n                                var storeResult;\n                                var error;\n                                self.getObservableFromLink(mutation, __assign(__assign({}, context), { optimisticResponse: optimisticResponse }), variables, false).subscribe({\n                                    next: function (result) {\n                                        if (graphQLResultHasError(result) && errorPolicy === 'none') {\n                                            error = new ApolloError({\n                                                graphQLErrors: result.errors,\n                                            });\n                                            return;\n                                        }\n                                        self.mutationStore.markMutationResult(mutationId);\n                                        if (fetchPolicy !== 'no-cache') {\n                                            self.dataStore.markMutationResult({\n                                                mutationId: mutationId,\n                                                result: result,\n                                                document: mutation,\n                                                variables: variables,\n                                                updateQueries: generateUpdateQueriesInfo(),\n                                                update: updateWithProxyFn,\n                                            });\n                                        }\n                                        storeResult = result;\n                                    },\n                                    error: function (err) {\n                                        self.mutationStore.markMutationError(mutationId, err);\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        self.setQuery(mutationId, function () { return ({ document: null }); });\n                                        reject(new ApolloError({\n                                            networkError: err,\n                                        }));\n                                    },\n                                    complete: function () {\n                                        if (error) {\n                                            self.mutationStore.markMutationError(mutationId, error);\n                                        }\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        if (error) {\n                                            reject(error);\n                                            return;\n                                        }\n                                        if (typeof refetchQueries === 'function') {\n                                            refetchQueries = refetchQueries(storeResult);\n                                        }\n                                        var refetchQueryPromises = [];\n                                        if (isNonEmptyArray(refetchQueries)) {\n                                            refetchQueries.forEach(function (refetchQuery) {\n                                                if (typeof refetchQuery === 'string') {\n                                                    self.queries.forEach(function (_a) {\n                                                        var observableQuery = _a.observableQuery;\n                                                        if (observableQuery &&\n                                                            observableQuery.queryName === refetchQuery) {\n                                                            refetchQueryPromises.push(observableQuery.refetch());\n                                                        }\n                                                    });\n                                                }\n                                                else {\n                                                    var queryOptions = {\n                                                        query: refetchQuery.query,\n                                                        variables: refetchQuery.variables,\n                                                        fetchPolicy: 'network-only',\n                                                    };\n                                                    if (refetchQuery.context) {\n                                                        queryOptions.context = refetchQuery.context;\n                                                    }\n                                                    refetchQueryPromises.push(self.query(queryOptions));\n                                                }\n                                            });\n                                        }\n                                        Promise.all(awaitRefetchQueries ? refetchQueryPromises : []).then(function () {\n                                            self.setQuery(mutationId, function () { return ({ document: null }); });\n                                            if (errorPolicy === 'ignore' &&\n                                                storeResult &&\n                                                graphQLResultHasError(storeResult)) {\n                                                delete storeResult.errors;\n                                            }\n                                            resolve(storeResult);\n                                        });\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, fetchMoreForQueryId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, metadata, _b, fetchPolicy, _c, context, query, variables, storeResult, isNetworkOnly, needToFetch, _d, complete, result, shouldFetch, requestId, cancel, networkResult;\n            var _this = this;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = options.metadata, metadata = _a === void 0 ? null : _a, _b = options.fetchPolicy, fetchPolicy = _b === void 0 ? 'cache-first' : _b, _c = options.context, context = _c === void 0 ? {} : _c;\n                        query = this.transform(options.query).document;\n                        variables = this.getVariables(query, options.variables);\n                        if (!this.transform(query).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(query, variables, context)];\n                    case 1:\n                        variables = _e.sent();\n                        _e.label = 2;\n                    case 2:\n                        options = __assign(__assign({}, options), { variables: variables });\n                        isNetworkOnly = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n                        needToFetch = isNetworkOnly;\n                        if (!isNetworkOnly) {\n                            _d = this.dataStore.getCache().diff({\n                                query: query,\n                                variables: variables,\n                                returnPartialData: true,\n                                optimistic: false,\n                            }), complete = _d.complete, result = _d.result;\n                            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n                            storeResult = result;\n                        }\n                        shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n                        if (hasDirectives(['live'], query))\n                            shouldFetch = true;\n                        requestId = this.idCounter++;\n                        cancel = fetchPolicy !== 'no-cache'\n                            ? this.updateQueryWatch(queryId, query, options)\n                            : undefined;\n                        this.setQuery(queryId, function () { return ({\n                            document: query,\n                            lastRequestId: requestId,\n                            invalidated: true,\n                            cancel: cancel,\n                        }); });\n                        this.invalidate(fetchMoreForQueryId);\n                        this.queryStore.initQuery({\n                            queryId: queryId,\n                            document: query,\n                            storePreviousVariables: shouldFetch,\n                            variables: variables,\n                            isPoll: fetchType === FetchType.poll,\n                            isRefetch: fetchType === FetchType.refetch,\n                            metadata: metadata,\n                            fetchMoreForQueryId: fetchMoreForQueryId,\n                        });\n                        this.broadcastQueries();\n                        if (shouldFetch) {\n                            networkResult = this.fetchRequest({\n                                requestId: requestId,\n                                queryId: queryId,\n                                document: query,\n                                options: options,\n                                fetchMoreForQueryId: fetchMoreForQueryId,\n                            }).catch(function (error) {\n                                if (isApolloError(error)) {\n                                    throw error;\n                                }\n                                else {\n                                    if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                                        _this.invalidate(queryId);\n                                        _this.invalidate(fetchMoreForQueryId);\n                                        _this.broadcastQueries();\n                                    }\n                                    throw new ApolloError({ networkError: error });\n                                }\n                            });\n                            if (fetchPolicy !== 'cache-and-network') {\n                                return [2, networkResult];\n                            }\n                            networkResult.catch(function () { });\n                        }\n                        this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n                        this.invalidate(queryId);\n                        this.invalidate(fetchMoreForQueryId);\n                        if (this.transform(query).hasForcedResolvers) {\n                            return [2, this.localState.runResolvers({\n                                    document: query,\n                                    remoteResult: { data: storeResult },\n                                    context: context,\n                                    variables: variables,\n                                    onlyRunForcedResolvers: true,\n                                }).then(function (result) {\n                                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                                    _this.broadcastQueries();\n                                    return result;\n                                })];\n                        }\n                        this.broadcastQueries();\n                        return [2, { data: storeResult }];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.markQueryResult = function (queryId, result, _a, fetchMoreForQueryId) {\n        var fetchPolicy = _a.fetchPolicy, variables = _a.variables, errorPolicy = _a.errorPolicy;\n        if (fetchPolicy === 'no-cache') {\n            this.setQuery(queryId, function () { return ({\n                newData: { result: result.data, complete: true },\n            }); });\n        }\n        else {\n            this.dataStore.markQueryResult(result, this.getQuery(queryId).document, variables, fetchMoreForQueryId, errorPolicy === 'ignore' || errorPolicy === 'all');\n        }\n    };\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        function invoke(method, argument) {\n            if (observer[method]) {\n                try {\n                    observer[method](argument);\n                }\n                catch (e) {\n                    process.env.NODE_ENV === \"production\" || invariant.error(e);\n                }\n            }\n            else if (method === 'error') {\n                process.env.NODE_ENV === \"production\" || invariant.error(argument);\n            }\n        }\n        return function (queryStoreValue, newData) {\n            _this.invalidate(queryId, false);\n            if (!queryStoreValue)\n                return;\n            var _a = _this.getQuery(queryId), observableQuery = _a.observableQuery, document = _a.document;\n            var fetchPolicy = observableQuery\n                ? observableQuery.options.fetchPolicy\n                : options.fetchPolicy;\n            if (fetchPolicy === 'standby')\n                return;\n            var loading = isNetworkRequestInFlight(queryStoreValue.networkStatus);\n            var lastResult = observableQuery && observableQuery.getLastResult();\n            var networkStatusChanged = !!(lastResult &&\n                lastResult.networkStatus !== queryStoreValue.networkStatus);\n            var shouldNotifyIfLoading = options.returnPartialData ||\n                (!newData && queryStoreValue.previousVariables) ||\n                (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                fetchPolicy === 'cache-only' ||\n                fetchPolicy === 'cache-and-network';\n            if (loading && !shouldNotifyIfLoading) {\n                return;\n            }\n            var hasGraphQLErrors = isNonEmptyArray(queryStoreValue.graphQLErrors);\n            var errorPolicy = observableQuery\n                && observableQuery.options.errorPolicy\n                || options.errorPolicy\n                || 'none';\n            if (errorPolicy === 'none' && hasGraphQLErrors || queryStoreValue.networkError) {\n                return invoke('error', new ApolloError({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }));\n            }\n            try {\n                var data = void 0;\n                var isMissing = void 0;\n                if (newData) {\n                    if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n                        _this.setQuery(queryId, function () { return ({ newData: null }); });\n                    }\n                    data = newData.result;\n                    isMissing = !newData.complete;\n                }\n                else {\n                    var lastError = observableQuery && observableQuery.getLastError();\n                    var errorStatusChanged = errorPolicy !== 'none' &&\n                        (lastError && lastError.graphQLErrors) !==\n                            queryStoreValue.graphQLErrors;\n                    if (lastResult && lastResult.data && !errorStatusChanged) {\n                        data = lastResult.data;\n                        isMissing = false;\n                    }\n                    else {\n                        var diffResult = _this.dataStore.getCache().diff({\n                            query: document,\n                            variables: queryStoreValue.previousVariables ||\n                                queryStoreValue.variables,\n                            returnPartialData: true,\n                            optimistic: true,\n                        });\n                        data = diffResult.result;\n                        isMissing = !diffResult.complete;\n                    }\n                }\n                var stale = isMissing && !(options.returnPartialData ||\n                    fetchPolicy === 'cache-only');\n                var resultFromStore = {\n                    data: stale ? lastResult && lastResult.data : data,\n                    loading: loading,\n                    networkStatus: queryStoreValue.networkStatus,\n                    stale: stale,\n                };\n                if (errorPolicy === 'all' && hasGraphQLErrors) {\n                    resultFromStore.errors = queryStoreValue.graphQLErrors;\n                }\n                invoke('next', resultFromStore);\n            }\n            catch (networkError) {\n                invoke('error', new ApolloError({ networkError: networkError }));\n            }\n        };\n    };\n    QueryManager.prototype.transform = function (document) {\n        var transformCache = this.transformCache;\n        if (!transformCache.has(document)) {\n            var cache = this.dataStore.getCache();\n            var transformed = cache.transformDocument(document);\n            var forLink = removeConnectionDirectiveFromDocument(cache.transformForLink(transformed));\n            var clientQuery = this.localState.clientQuery(transformed);\n            var serverQuery = this.localState.serverQuery(forLink);\n            var cacheEntry_1 = {\n                document: transformed,\n                hasClientExports: hasClientExports(transformed),\n                hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n                clientQuery: clientQuery,\n                serverQuery: serverQuery,\n                defaultVars: getDefaultValues(getOperationDefinition(transformed)),\n            };\n            var add = function (doc) {\n                if (doc && !transformCache.has(doc)) {\n                    transformCache.set(doc, cacheEntry_1);\n                }\n            };\n            add(document);\n            add(transformed);\n            add(clientQuery);\n            add(serverQuery);\n        }\n        return transformCache.get(document);\n    };\n    QueryManager.prototype.getVariables = function (document, variables) {\n        return __assign(__assign({}, this.transform(document).defaultVars), variables);\n    };\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'standby', 11) : invariant(options.fetchPolicy !== 'standby', 'client.watchQuery cannot be called with fetchPolicy set to \"standby\"');\n        options.variables = this.getVariables(options.query, options.variables);\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = __assign({}, options);\n        return new ObservableQuery({\n            queryManager: this,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(options.query, 12) : invariant(options.query, 'query option is required. You must specify your GraphQL document ' +\n            'in the query option.');\n        process.env.NODE_ENV === \"production\" ? invariant(options.query.kind === 'Document', 13) : invariant(options.query.kind === 'Document', 'You must wrap the query string in a \"gql\" tag.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.returnPartialData, 14) : invariant(!options.returnPartialData, 'returnPartialData option only supported on watchQuery.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.pollInterval, 15) : invariant(!options.pollInterval, 'pollInterval option only supported on watchQuery.');\n        return new Promise(function (resolve, reject) {\n            var watchedQuery = _this.watchQuery(options, false);\n            _this.fetchQueryRejectFns.set(\"query:\" + watchedQuery.queryId, reject);\n            watchedQuery\n                .result()\n                .then(resolve, reject)\n                .then(function () {\n                return _this.fetchQueryRejectFns.delete(\"query:\" + watchedQuery.queryId);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        return String(this.idCounter++);\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n        this.stopPollingQuery(queryId);\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(queryId);\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var listeners = _a.listeners;\n            listeners.add(listener);\n            return { invalidated: false };\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.dataStore.getCache().watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var cancel = this.getQuery(queryId).cancel;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (cancel)\n            cancel();\n    };\n    QueryManager.prototype.clearStore = function () {\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(process.env.NODE_ENV === \"production\" ? new InvariantError(16) : new InvariantError('Store reset while query was in flight (not completed in link chain)'));\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        return this.dataStore.reset();\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var _this = this;\n        if (includeStandby === void 0) { includeStandby = false; }\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery) {\n                var fetchPolicy = observableQuery.options.fetchPolicy;\n                observableQuery.resetLastResults();\n                if (fetchPolicy !== 'cache-only' &&\n                    (includeStandby || fetchPolicy !== 'standby')) {\n                    observableQueryPromises.push(observableQuery.refetch());\n                }\n                _this.setQuery(queryId, function () { return ({ newData: null }); });\n                _this.invalidate(queryId);\n            }\n        });\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.observeQuery = function (queryId, options, observer) {\n        this.addQueryListener(queryId, this.queryListenerForObserver(queryId, options, observer));\n        return this.fetchQuery(queryId, options);\n    };\n    QueryManager.prototype.startQuery = function (queryId, options, listener) {\n        process.env.NODE_ENV === \"production\" || invariant.warn(\"The QueryManager.startQuery method has been deprecated\");\n        this.addQueryListener(queryId, listener);\n        this.fetchQuery(queryId, options)\n            .catch(function () { return undefined; });\n        return queryId;\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (_a) {\n        var _this = this;\n        var query = _a.query, fetchPolicy = _a.fetchPolicy, variables = _a.variables;\n        query = this.transform(query).document;\n        variables = this.getVariables(query, variables);\n        var makeObservable = function (variables) {\n            return _this.getObservableFromLink(query, {}, variables, false).map(function (result) {\n                if (!fetchPolicy || fetchPolicy !== 'no-cache') {\n                    _this.dataStore.markSubscriptionResult(result, query, variables);\n                    _this.broadcastQueries();\n                }\n                if (graphQLResultHasError(result)) {\n                    throw new ApolloError({\n                        graphQLErrors: result.errors,\n                    });\n                }\n                return result;\n            });\n        };\n        if (this.transform(query).hasClientExports) {\n            var observablePromise_1 = this.localState.addExportedVariables(query, variables).then(makeObservable);\n            return new Observable(function (observer) {\n                var sub = null;\n                observablePromise_1.then(function (observable) { return sub = observable.subscribe(observer); }, observer.error);\n                return function () { return sub && sub.unsubscribe(); };\n            });\n        }\n        return makeObservable(variables);\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        this.fetchQueryRejectFns.delete(\"query:\" + queryId);\n        this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n        this.getQuery(queryId).subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query, fetchPolicy = _a.fetchPolicy, returnPartialData = _a.returnPartialData;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        if (newData && newData.complete) {\n            return { data: newData.result, partial: false };\n        }\n        if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n            return { data: undefined, partial: false };\n        }\n        var _b = this.dataStore.getCache().diff({\n            query: query,\n            variables: variables,\n            previousResult: lastResult ? lastResult.data : undefined,\n            returnPartialData: true,\n            optimistic: optimistic,\n        }), result = _b.result, complete = _b.complete;\n        return {\n            data: (complete || returnPartialData) ? result : void 0,\n            partial: !complete,\n        };\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObserveableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            process.env.NODE_ENV === \"production\" ? invariant(foundObserveableQuery, 17) : invariant(foundObserveableQuery, \"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            observableQuery = foundObserveableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        return {\n            previousResult: this.getCurrentQueryResult(observableQuery, false).data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        var _this = this;\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (info.invalidated) {\n                info.listeners.forEach(function (listener) {\n                    if (listener) {\n                        listener(_this.queryStore.get(id), info.newData);\n                    }\n                });\n            }\n        });\n    };\n    QueryManager.prototype.getLocalState = function () {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableFromLink = function (query, context, variables, deduplication) {\n        var _this = this;\n        if (deduplication === void 0) { deduplication = this.queryDeduplication; }\n        var observable;\n        var serverQuery = this.transform(query).serverQuery;\n        if (serverQuery) {\n            var _a = this, inFlightLinkObservables_1 = _a.inFlightLinkObservables, link = _a.link;\n            var operation = {\n                query: serverQuery,\n                variables: variables,\n                operationName: getOperationName(serverQuery) || void 0,\n                context: this.prepareContext(__assign(__assign({}, context), { forceFetch: !deduplication })),\n            };\n            context = operation.context;\n            if (deduplication) {\n                var byVariables_1 = inFlightLinkObservables_1.get(serverQuery) || new Map();\n                inFlightLinkObservables_1.set(serverQuery, byVariables_1);\n                var varJson_1 = JSON.stringify(variables);\n                observable = byVariables_1.get(varJson_1);\n                if (!observable) {\n                    byVariables_1.set(varJson_1, observable = multiplex(execute(link, operation)));\n                    var cleanup = function () {\n                        byVariables_1.delete(varJson_1);\n                        if (!byVariables_1.size)\n                            inFlightLinkObservables_1.delete(serverQuery);\n                        cleanupSub_1.unsubscribe();\n                    };\n                    var cleanupSub_1 = observable.subscribe({\n                        next: cleanup,\n                        error: cleanup,\n                        complete: cleanup,\n                    });\n                }\n            }\n            else {\n                observable = multiplex(execute(link, operation));\n            }\n        }\n        else {\n            observable = Observable.of({ data: {} });\n            context = this.prepareContext(context);\n        }\n        var clientQuery = this.transform(query).clientQuery;\n        if (clientQuery) {\n            observable = asyncMap(observable, function (result) {\n                return _this.localState.runResolvers({\n                    document: clientQuery,\n                    remoteResult: result,\n                    context: context,\n                    variables: variables,\n                });\n            });\n        }\n        return observable;\n    };\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            var observable = _this.getObservableFromLink(document, options.context, variables);\n            var fqrfId = \"fetchRequest:\" + queryId;\n            _this.fetchQueryRejectFns.set(fqrfId, reject);\n            var cleanup = function () {\n                _this.fetchQueryRejectFns.delete(fqrfId);\n                _this.setQuery(queryId, function (_a) {\n                    var subscriptions = _a.subscriptions;\n                    subscriptions.delete(subscription);\n                });\n            };\n            var subscription = observable.map(function (result) {\n                if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                    _this.queryStore.markQueryResult(queryId, result, fetchMoreForQueryId);\n                    _this.invalidate(queryId);\n                    _this.invalidate(fetchMoreForQueryId);\n                    _this.broadcastQueries();\n                }\n                if (errorPolicy === 'none' && isNonEmptyArray(result.errors)) {\n                    return reject(new ApolloError({\n                        graphQLErrors: result.errors,\n                    }));\n                }\n                if (errorPolicy === 'all') {\n                    errorsFromStore = result.errors;\n                }\n                if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                    resultFromStore = result.data;\n                }\n                else {\n                    var _a = _this.dataStore.getCache().diff({\n                        variables: variables,\n                        query: document,\n                        optimistic: false,\n                        returnPartialData: true,\n                    }), result_1 = _a.result, complete = _a.complete;\n                    if (complete || options.returnPartialData) {\n                        resultFromStore = result_1;\n                    }\n                }\n            }).subscribe({\n                error: function (error) {\n                    cleanup();\n                    reject(error);\n                },\n                complete: function () {\n                    cleanup();\n                    resolve({\n                        data: resultFromStore,\n                        errors: errorsFromStore,\n                        loading: false,\n                        networkStatus: NetworkStatus.ready,\n                        stale: false,\n                    });\n                },\n            });\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                subscriptions.add(subscription);\n            });\n        });\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return (this.queries.get(queryId) || {\n            listeners: new Set(),\n            invalidated: false,\n            document: null,\n            newData: null,\n            lastRequestId: 1,\n            observableQuery: null,\n            subscriptions: new Set(),\n        });\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = __assign(__assign({}, prev), updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (queryId, invalidated) {\n        if (invalidated === void 0) { invalidated = true; }\n        if (queryId) {\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    QueryManager.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var newContext = this.localState.prepareContext(context);\n        return __assign(__assign({}, newContext), { clientAwareness: this.clientAwareness });\n    };\n    QueryManager.prototype.checkInFlight = function (queryId) {\n        var query = this.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== NetworkStatus.ready &&\n            query.networkStatus !== NetworkStatus.error);\n    };\n    QueryManager.prototype.startPollingQuery = function (options, queryId, listener) {\n        var _this = this;\n        var pollInterval = options.pollInterval;\n        process.env.NODE_ENV === \"production\" ? invariant(pollInterval, 18) : invariant(pollInterval, 'Attempted to start a polling query without a polling interval.');\n        if (!this.ssrMode) {\n            var info = this.pollingInfoByQueryId.get(queryId);\n            if (!info) {\n                this.pollingInfoByQueryId.set(queryId, (info = {}));\n            }\n            info.interval = pollInterval;\n            info.options = __assign(__assign({}, options), { fetchPolicy: 'network-only' });\n            var maybeFetch_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    if (_this.checkInFlight(queryId)) {\n                        poll_1();\n                    }\n                    else {\n                        _this.fetchQuery(queryId, info.options, FetchType.poll).then(poll_1, poll_1);\n                    }\n                }\n            };\n            var poll_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    clearTimeout(info.timeout);\n                    info.timeout = setTimeout(maybeFetch_1, info.interval);\n                }\n            };\n            if (listener) {\n                this.addQueryListener(queryId, listener);\n            }\n            poll_1();\n        }\n        return queryId;\n    };\n    QueryManager.prototype.stopPollingQuery = function (queryId) {\n        this.pollingInfoByQueryId.delete(queryId);\n    };\n    return QueryManager;\n}());\n\nvar DataStore = (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !graphQLResultHasError(result);\n        if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        if (!graphQLResultHasError(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    _this.markMutationResult({\n                        mutationId: mutation.mutationId,\n                        result: { data: optimistic_1 },\n                        document: mutation.document,\n                        variables: mutation.variables,\n                        updateQueries: mutation.updateQueries,\n                        update: mutation.update,\n                    });\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        if (!graphQLResultHasError(mutation.result)) {\n            var cacheWrites_1 = [{\n                    result: mutation.result.data,\n                    dataId: 'ROOT_MUTATION',\n                    query: mutation.document,\n                    variables: mutation.variables,\n                }];\n            var updateQueries_1 = mutation.updateQueries;\n            if (updateQueries_1) {\n                Object.keys(updateQueries_1).forEach(function (id) {\n                    var _a = updateQueries_1[id], query = _a.query, updater = _a.updater;\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (complete) {\n                        var nextQueryResult = tryFunctionOrLogError(function () {\n                            return updater(currentQueryResult, {\n                                mutationResult: mutation.result,\n                                queryName: getOperationName(query.document) || undefined,\n                                queryVariables: query.variables,\n                            });\n                        });\n                        if (nextQueryResult) {\n                            cacheWrites_1.push({\n                                result: nextQueryResult,\n                                dataId: 'ROOT_QUERY',\n                                query: query.document,\n                                variables: query.variables,\n                            });\n                        }\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n                var update = mutation.update;\n                if (update) {\n                    tryFunctionOrLogError(function () { return update(c, mutation.result); });\n                }\n            });\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (optimisticResponse) {\n            this.cache.removeOptimistic(mutationId);\n        }\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\n\nvar version = \"2.6.10\";\n\nvar hasSuggestedDevtools = false;\nvar ApolloClient = (function () {\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        var cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions, _d = options.assumeImmutableResults, assumeImmutableResults = _d === void 0 ? false : _d, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link && resolvers) {\n            link = ApolloLink.empty();\n        }\n        if (!link || !cache) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(4) : new InvariantError(\"In order to initialize Apollo Client, you must specify 'link' and 'cache' properties in the options object.\\n\" +\n                \"These options are part of the upgrade requirements when migrating from Apollo Client 1.x to Apollo Client 2.x.\\n\" +\n                \"For more information, please visit: https://www.apollographql.com/docs/tutorial/client.html#apollo-client-setup\");\n        }\n        this.link = link;\n        this.cache = cache;\n        this.store = new DataStore(cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.defaultOptions = defaultOptions || {};\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        var defaultConnectToDevTools = process.env.NODE_ENV !== 'production' &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    if (window.navigator &&\n                        window.navigator.userAgent &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = version;\n        this.localState = new LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher,\n        });\n        this.queryManager = new QueryManager({\n            link: this.link,\n            store: this.store,\n            queryDeduplication: queryDeduplication,\n            ssrMode: ssrMode,\n            clientAwareness: {\n                name: clientAwarenessName,\n                version: clientAwarenessVersion,\n            },\n            localState: this.localState,\n            assumeImmutableResults: assumeImmutableResults,\n            onBroadcast: function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.queryStore.getStore(),\n                            mutations: _this.queryManager.mutationStore.getStore(),\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            },\n        });\n    }\n    ApolloClient.prototype.stop = function () {\n        this.queryManager.stop();\n    };\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = __assign(__assign({}, this.defaultOptions.watchQuery), options);\n        }\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = __assign(__assign({}, this.defaultOptions.query), options);\n        }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'cache-and-network', 5) : invariant(options.fetchPolicy !== 'cache-and-network', 'The cache-and-network fetchPolicy does not work with client.query, because ' +\n            'client.query can only return a single result. Please use client.watchQuery ' +\n            'to receive multiple results from the cache and the network, or consider ' +\n            'using a different fetchPolicy, such as cache-first or network-only.');\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = __assign(__assign({}, this.defaultOptions.mutate), options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readQuery(options, optimistic);\n    };\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readFragment(options, optimistic);\n    };\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.cache.writeQuery(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.cache.writeFragment(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeData = function (options) {\n        var result = this.cache.writeData(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    ApolloClient.prototype.initQueryManager = function () {\n        process.env.NODE_ENV === \"production\" || invariant.warn('Calling the initQueryManager method is no longer necessary, ' +\n            'and it will be removed from ApolloClient in version 3.0.');\n        return this.queryManager;\n    };\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () { return _this.reFetchObservableQueries(); });\n    };\n    ApolloClient.prototype.clearStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); });\n    };\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.onClearStore = function (cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function () {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager.reFetchObservableQueries(includeStandby);\n    };\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.cache.extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.cache.restore(serializedState);\n    };\n    ApolloClient.prototype.addResolvers = function (resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    ApolloClient.prototype.setResolvers = function (resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    ApolloClient.prototype.getResolvers = function () {\n        return this.localState.getResolvers();\n    };\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    return ApolloClient;\n}());\n\nexport default ApolloClient;\nexport { ApolloClient, ApolloError, FetchType, NetworkStatus, ObservableQuery, isApolloError };\n//# sourceMappingURL=bundle.esm.js.map\n"]}}