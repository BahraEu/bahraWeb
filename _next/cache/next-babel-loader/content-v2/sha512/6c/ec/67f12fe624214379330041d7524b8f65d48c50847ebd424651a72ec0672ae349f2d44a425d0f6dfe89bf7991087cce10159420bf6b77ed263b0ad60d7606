{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CloseButton = void 0;\n\nconst react_1 = __importDefault(require(\"react\"));\n\nconst i18n_1 = require(\"../../../i18n\");\n\nconst CloseOnEscape_1 = __importDefault(require(\"./LocaleButton/CloseOnEscape\"));\n\nconst LocaleButton_1 = require(\"./LocaleButton\");\n\nconst utilty_1 = require(\"../../utilty\");\n\nconst theme_1 = __importDefault(require(\"../../styles/theme\"));\n\nconst Typography_1 = require(\"../../styles/Typography\");\n\nexports.CloseButton = theme_1.default.div`\n  position: relative;\n  padding: 0 8px;\n  display: ${props => props.visible ? 'block' : 'none'};\n  font-size: 26px;\n  font-weight: 300;\n  cursor: pointer;\n  bottom:1.2em;\n  right:2.4em;\n`;\nconst PickerButton = theme_1.default.div`\n    color: white;\n    background:\n    transition: background 0.3s, color 0.3s;\n    z-index: 0;\n    cursor: pointer;\n    :hover {\n        background: ${props => props.theme.bg.inset[2]};\n        color: black;\n    }\n`;\nconst Title = theme_1.default.h2`\n    font-size: 1.2rem;\n    margin: 0;\n    color: ${props => props.theme.bg.secondary};\n    white-space: nowrap;\n    display:inline-flex;\n    align-content:center;\n    justify-content:center;\n    span {\n        color: gray;\n        font-size: 0.8em;\n    }\n`;\nconst PickerWrapper = theme_1.default.div`\n    display: ${props => props.DropdownOpen ? 'flex' : 'none'};\n    z-index: 9;\n    justify-content: space-between;\n    position: absolute;\n    top: 22rem;\n    right: 50%;\n    border-radius: 0.65rem;\n    padding: 2rem 4rem;\n    align-self:center;\n    background-color: ${props => props.theme.bg.inset};\n    :hover {\n        background: white;\n        color: black;\n    }\n`;\n\nclass TranslationPickerClass extends react_1.default.Component {\n  constructor() {\n    super(...arguments);\n    this.wrapperRef = react_1.default.createRef();\n    this.state = {\n      DropdownOpen: false\n    };\n\n    this.handleClickOutside = event => {\n      const current = this.wrapperRef.current;\n\n      if (current && !current.contains(event.target)) {\n        this.toggleDropdownOpen(false);\n      }\n    };\n\n    this.toggleDropdownOpen = DropdownOpen => {\n      this.setState({\n        DropdownOpen\n      });\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClickOutside, false);\n    document.addEventListener('touchstart', this.handleClickOutside, false);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('click', this.handleClickOutside, false);\n    document.addEventListener('touchstart', this.handleClickOutside, false);\n  }\n\n  render() {\n    const renderLocaleButtons = activeLanguage => ['English', 'Arabic'].map(lang => /*#__PURE__*/_reactJsxRuntime.jsx(LocaleButton_1.LocaleButton, {\n      lang: lang,\n      isActive: activeLanguage === lang,\n      onClick: () => utilty_1.changeLanguage({\n        lang,\n        currentLanguage\n      })\n    }, lang));\n\n    const {\n      currentLanguage\n    } = this.props;\n    const {\n      DropdownOpen\n    } = this.state;\n    return /*#__PURE__*/_reactJsxRuntime.jsx(_reactJsxRuntime.Fragment, {\n      children: /*#__PURE__*/_reactJsxRuntime.jsxs(PickerButton, {\n        onClick: () => this.toggleDropdownOpen(!DropdownOpen),\n        children: [/*#__PURE__*/_reactJsxRuntime.jsx(Title, {\n          children: i18n_1.i18n.language && i18n_1.i18n.language.split('', 3)\n        }), /*#__PURE__*/_reactJsxRuntime.jsx(CloseOnEscape_1.default, {\n          onEscape: () => this.toggleDropdownOpen(false),\n          children: /*#__PURE__*/_reactJsxRuntime.jsxs(PickerWrapper, {\n            DropdownOpen: DropdownOpen,\n            children: [/*#__PURE__*/_reactJsxRuntime.jsx(exports.CloseButton, {\n              visible: DropdownOpen,\n              children: \"\\xD7\"\n            }), /*#__PURE__*/_reactJsxRuntime.jsx(Typography_1.H6, {\n              children: \"choose your lamguage\"\n            }), renderLocaleButtons(i18n_1.i18n.language)]\n          })\n        })]\n      })\n    });\n  }\n\n}\n\nexports.default = i18n_1.withTranslation('common')(TranslationPickerClass);","map":null,"metadata":{},"sourceType":"script"}