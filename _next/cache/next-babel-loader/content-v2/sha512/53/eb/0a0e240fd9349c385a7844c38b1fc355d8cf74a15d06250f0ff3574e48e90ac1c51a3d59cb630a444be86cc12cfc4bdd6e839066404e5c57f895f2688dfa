{"ast":null,"code":"\"use strict\"; // tslint:disable: no-console\n\nvar _toConsumableArray = require(\"/home/rami/BHARA/BahraPro/BahraPro/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar apollo_client_1 = require(\"apollo-client\");\n\nvar apollo_link_1 = require(\"apollo-link\");\n\nvar apollo_link_context_1 = require(\"apollo-link-context\");\n\nvar apollo_link_error_1 = require(\"apollo-link-error\");\n\nvar apollo_link_http_1 = require(\"apollo-link-http\");\n\nvar apollo_link_logger_1 = __importDefault(require(\"apollo-link-logger\"));\n\nvar createCache_1 = __importDefault(require(\"./createCache\"));\n\nvar config_1 = __importDefault(require(\"../../../config/config\")); //import { WebSocketLink } from \"@apollo/client/link/ws\";\n\n\nvar helpers_1 = require(\"../../utilty/helpers\");\n\nvar parseCookies_1 = __importStar(require(\"../../utilty/parseCookies\"));\n\nvar lodash_1 = require(\"lodash\");\n\nvar link = apollo_link_1.from([].concat(_toConsumableArray(config_1[\"default\"].DEV ? [apollo_link_logger_1[\"default\"]] : []), [// Create Error linking\napollo_link_error_1.onError(function (_ref) {\n  var graphQLErrors = _ref.graphQLErrors,\n      networkError = _ref.networkError;\n\n  if (graphQLErrors) {\n    graphQLErrors.map(function (_ref2) {\n      var message = _ref2.message,\n          locations = _ref2.locations,\n          path = _ref2.path;\n      console.error(\"\\n\\n[GraphQL error]: \".concat(message, \" \\n location: \").concat(JSON.stringify(locations, null, 2), \" \\n path: \").concat(path, \"\\n\\n\"));\n    });\n  }\n\n  if (networkError) {\n    console.error(\"[Network error]: \".concat(JSON.stringify(networkError, null, 2)));\n  }\n}), new apollo_link_http_1.HttpLink({\n  credentials: 'same-origin',\n  useGETForQueries: false,\n  uri: 'https://bahra.eu/admin/index.php?graphql'\n})]));\n\nvar authLink = function authLink(getToken) {\n  return apollo_link_context_1.setContext(function (_, _ref3) {\n    var headers = _ref3.headers;\n    var WP_tokens = getToken();\n    var refreshToken = parseCookies_1[\"default\"]().refreshToken;\n    var IsTokenExpired = helpers_1.checkTokenIsExpired(WP_tokens.WP_authToken);\n    var token = WP_tokens.WP_authToken;\n\n    if (!lodash_1.isEmpty(token)) {\n      return {\n        headers: headers\n      };\n    }\n\n    if (!IsTokenExpired) {\n      return createHeaders(token, headers);\n    } else {\n      try {\n        parseCookies_1.removeMapInCookie(['authToken'], token);\n        var refreshedAccessToken = WP_tokens.WP_refreshTokens.token;\n\n        if (!refreshedAccessToken) {\n          helpers_1.checkTokenIsExpired(refreshToken);\n        } else {\n          throw new Error();\n        }\n\n        return createHeaders(refreshedAccessToken, headers);\n      } catch (error) {\n        return {\n          headers: headers\n        };\n      }\n    }\n  });\n};\n\nfunction createHeaders(token, oldHeaders) {\n  return {\n    headers: Object.assign({\n      Authorization: \"Bearer \".concat(token)\n    }, oldHeaders)\n  };\n}\n\nvar create = function create(initialState, _ref4) {\n  var getToken = _ref4.getToken;\n  return new apollo_client_1.ApolloClient({\n    cache: createCache_1[\"default\"].restore(initialState || {}),\n    connectToDevTools: true,\n    link: authLink(getToken).concat(link),\n    queryDeduplication: true,\n    ssrMode: Boolean(typeof 'process' !== 'undefined' && process && process.versions && Boolean(process.versions.node))\n  });\n};\n\nexports[\"default\"] = create;","map":null,"metadata":{},"sourceType":"script"}