{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) {\n    if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tint = exports.hexa = void 0;\n\n__exportStar(require(\"./helpers\"), exports);\n\nvar hexa = function hexa(hex, alpha) {\n  var r = parseInt(hex.slice(1, 3), 16);\n  var g = parseInt(hex.slice(3, 5), 16);\n  var b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha >= 0) {\n    return \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(alpha, \")\");\n  }\n\n  return \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n};\n\nexports.hexa = hexa;\n\nvar tint = function tint(hex, amount) {\n  var R = parseInt(hex.substring(1, 3), 16);\n  var G = parseInt(hex.substring(3, 5), 16);\n  var B = parseInt(hex.substring(5, 7), 16);\n\n  var getSingle = function getSingle(number) {\n    return (// @ts-ignore\n      parseInt(number * (100 + amount) / 100, 10)\n    );\n  };\n\n  R = getSingle(R);\n  G = getSingle(G);\n  B = getSingle(B);\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n\n  var getDouble = function getDouble(number) {\n    return number.toString(16).length === 1 ? \"0\".concat(number.toString(16)) : number.toString(16);\n  };\n\n  var RR = getDouble(R);\n  var GG = getDouble(G);\n  var BB = getDouble(B);\n  return \"#\".concat(RR).concat(GG).concat(BB);\n};\n\nexports.tint = tint;","map":null,"metadata":{},"sourceType":"script"}