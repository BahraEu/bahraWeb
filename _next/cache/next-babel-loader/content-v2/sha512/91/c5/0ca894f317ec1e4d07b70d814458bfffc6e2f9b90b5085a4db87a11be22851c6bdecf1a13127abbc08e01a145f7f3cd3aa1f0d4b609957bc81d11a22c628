{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nvar _defineProperty = require(\"/Users/bahra/bahra/web-master/dist/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _toConsumableArray = require(\"/Users/bahra/bahra/web-master/dist/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _slicedToArray = require(\"/Users/bahra/bahra/web-master/dist/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar classnames_1 = __importDefault(require(\"classnames\")); // @material-ui/core components\n\n\nvar styles_1 = require(\"@material-ui/core/styles\");\n\nvar Checkbox_1 = __importDefault(require(\"@material-ui/core/Checkbox\"));\n\nvar Tooltip_1 = __importDefault(require(\"@material-ui/core/Tooltip\"));\n\nvar IconButton_1 = __importDefault(require(\"@material-ui/core/IconButton\"));\n\nvar Table_1 = __importDefault(require(\"@material-ui/core/Table\"));\n\nvar TableRow_1 = __importDefault(require(\"@material-ui/core/TableRow\"));\n\nvar TableBody_1 = __importDefault(require(\"@material-ui/core/TableBody\"));\n\nvar TableCell_1 = __importDefault(require(\"@material-ui/core/TableCell\")); // @material-ui/icons\n\n\nvar Edit_1 = __importDefault(require(\"@material-ui/icons/Edit\"));\n\nvar Close_1 = __importDefault(require(\"@material-ui/icons/Close\"));\n\nvar Check_1 = __importDefault(require(\"@material-ui/icons/Check\")); // core components\n\n\nvar tasksStyle_1 = __importDefault(require(\"./tasksStyle\"));\n\nvar useStyles = styles_1.makeStyles(tasksStyle_1[\"default\"]);\n\nfunction Tasks(props) {\n  var classes = useStyles();\n\n  var _react_1$default$useS = react_1[\"default\"].useState(_toConsumableArray(props.checkedIndexes)),\n      _react_1$default$useS2 = _slicedToArray(_react_1$default$useS, 2),\n      checked = _react_1$default$useS2[0],\n      setChecked = _react_1$default$useS2[1];\n\n  var handleToggle = function handleToggle(value) {\n    var currentIndex = checked.indexOf(value);\n\n    var newChecked = _toConsumableArray(checked);\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  var tasksIndexes = props.tasksIndexes,\n      tasks = props.tasks,\n      rtlActive = props.rtlActive;\n  var tableCellClasses = classnames_1[\"default\"](classes.tableCell, _defineProperty({}, classes.tableCellRTL, rtlActive));\n  return /*#__PURE__*/_reactJsxRuntime.jsx(Table_1[\"default\"], {\n    className: classes.table,\n    children: /*#__PURE__*/_reactJsxRuntime.jsx(TableBody_1[\"default\"], {\n      children: tasksIndexes.map(function (value) {\n        return /*#__PURE__*/_reactJsxRuntime.jsxs(TableRow_1[\"default\"], {\n          className: classes.tableRow,\n          children: [/*#__PURE__*/_reactJsxRuntime.jsx(TableCell_1[\"default\"], {\n            className: tableCellClasses,\n            children: /*#__PURE__*/_reactJsxRuntime.jsx(Checkbox_1[\"default\"], {\n              checked: checked.indexOf(value) !== -1,\n              tabIndex: -1,\n              onClick: function onClick() {\n                return handleToggle(value);\n              },\n              checkedIcon: /*#__PURE__*/_reactJsxRuntime.jsx(Check_1[\"default\"], {\n                className: classes.checkedIcon\n              }),\n              icon: /*#__PURE__*/_reactJsxRuntime.jsx(Check_1[\"default\"], {\n                className: classes.uncheckedIcon\n              }),\n              classes: {\n                checked: classes.checked,\n                root: classes.root\n              }\n            })\n          }), /*#__PURE__*/_reactJsxRuntime.jsx(TableCell_1[\"default\"], {\n            className: tableCellClasses,\n            children: tasks[value]\n          }), /*#__PURE__*/_reactJsxRuntime.jsxs(TableCell_1[\"default\"], {\n            className: classes.tableActions,\n            children: [/*#__PURE__*/_reactJsxRuntime.jsx(Tooltip_1[\"default\"], {\n              id: \"tooltip-top\",\n              title: \"Edit Task\",\n              placement: \"top\",\n              classes: {\n                tooltip: classes.tooltip\n              },\n              children: /*#__PURE__*/_reactJsxRuntime.jsx(IconButton_1[\"default\"], {\n                \"aria-label\": \"Edit\",\n                className: classes.tableActionButton,\n                children: /*#__PURE__*/_reactJsxRuntime.jsx(Edit_1[\"default\"], {\n                  className: classes.tableActionButtonIcon + \" \" + classes.edit\n                })\n              })\n            }), /*#__PURE__*/_reactJsxRuntime.jsx(Tooltip_1[\"default\"], {\n              id: \"tooltip-top-start\",\n              title: \"Remove\",\n              placement: \"top\",\n              classes: {\n                tooltip: classes.tooltip\n              },\n              children: /*#__PURE__*/_reactJsxRuntime.jsx(IconButton_1[\"default\"], {\n                \"aria-label\": \"Close\",\n                className: classes.tableActionButton,\n                children: /*#__PURE__*/_reactJsxRuntime.jsx(Close_1[\"default\"], {\n                  className: classes.tableActionButtonIcon + \" \" + classes.close\n                })\n              })\n            })]\n          })]\n        }, value);\n      })\n    })\n  });\n}\n\nexports[\"default\"] = Tasks;","map":null,"metadata":{},"sourceType":"script"}