{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/bahra/bahra/web-master/dist/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/bahra/bahra/web-master/dist/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useStore = exports.initializeStore = void 0;\n\nvar react_1 = require(\"react\");\n\nvar mobx_state_tree_1 = require(\"mobx-state-tree\");\n\nvar userStore_1 = require(\"./userStore\");\n\nvar shopStore_1 = require(\"./shopStore\");\n\nvar store;\n\nvar mobx_devtools_mst_1 = __importDefault(require(\"mobx-devtools-mst\"));\n\nvar Store = mobx_state_tree_1.types.model('RootStore', {\n  identifier: mobx_state_tree_1.types.optional(mobx_state_tree_1.types.identifier, 'RootStore'),\n  userStore: mobx_state_tree_1.types.optional(userStore_1.UserStore, function () {\n    return userStore_1.UserStore.create({\n      users: {}\n    });\n  }),\n  shopStore: mobx_state_tree_1.types.optional(shopStore_1.ShopStore, function () {\n    return shopStore_1.ShopStore.create({});\n  })\n}).actions(function (self) {\n  return {\n    afterCreate: function afterCreate() {\n      self.shopStore.prodocts;\n    },\n    save: function save() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var transformedSnapshot, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                transformedSnapshot = mobx_state_tree_1.getSnapshot(self);\n                json = JSON.stringify(transformedSnapshot);\n                _context.next = 5;\n                return localStorage.setItem('appStatePersistenceKey', json);\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.warn('unexpected error ' + _context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    }\n  };\n});\n\nfunction initializeStore() {\n  var snapshot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _store = store !== null && store !== void 0 ? store : Store.create({\n    userStore: {}\n  });\n\n  mobx_devtools_mst_1[\"default\"](store); // If your page has Next.js data fetching methods that use a Mobx store, it will\n  // get hydrated here, check `pages/ssg.tsx` and `pages/ssr.tsx` for more details\n\n  if (snapshot) {\n    console.log('snapshot');\n    mobx_state_tree_1.applySnapshot(_store, snapshot);\n  } // For SSG and SSR always create a new store\n\n\n  if (false) return _store; // Create the store once in the client\n\n  console.log('Create the store once in the client');\n  if (!store) store = _store;\n  return store;\n}\n\nexports.initializeStore = initializeStore;\n\nfunction useStore(initialState) {\n  var store = react_1.useMemo(function () {\n    return initializeStore(initialState);\n  }, [initialState]);\n  return store;\n}\n\nexports.useStore = useStore;","map":null,"metadata":{},"sourceType":"script"}