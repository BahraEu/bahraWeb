{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/bahra/bahra/BahraPro/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProdoctStore = exports.Prodoct = void 0;\n\nvar mobx_1 = require(\"mobx\");\n\nvar mobx_state_tree_1 = require(\"mobx-state-tree\");\n\nexports.Prodoct = mobx_state_tree_1.types.model('Prodoct', {\n  id: mobx_state_tree_1.types.identifier,\n  name: mobx_state_tree_1.types.string,\n  author: mobx_state_tree_1.types.string,\n  series_t: mobx_state_tree_1.types.optional(mobx_state_tree_1.types.string, ''),\n  sequence_i: mobx_state_tree_1.types.number,\n  genre_s: mobx_state_tree_1.types.string,\n  pages_i: mobx_state_tree_1.types.number,\n  price: mobx_state_tree_1.types.number,\n  isAvailable: true\n});\nexports.ProdoctStore = mobx_state_tree_1.types.model('ProdoctStore', {\n  isLoading: true,\n  prodocts: mobx_state_tree_1.types.map(exports.Prodoct)\n}).views(function (self) {\n  return {\n    get shop() {\n      return mobx_state_tree_1.getParent(self);\n    },\n\n    get sortedAvailableProdocts() {\n      return sortProdocts(mobx_1.values(self.prodocts));\n    }\n\n  };\n}).actions(function (self) {\n  function markLoading(loading) {\n    self.isLoading = loading;\n  }\n\n  function updateProdocts(json) {\n    mobx_1.values(self.prodocts).forEach(function (product) {\n      return product.isAvailable = false;\n    });\n    json.forEach(function (prodoctJson) {\n      self.prodocts.put(prodoctJson);\n      self.prodocts.get(prodoctJson.id).isAvailable = true;\n    });\n  }\n\n  var loadProdocts = mobx_state_tree_1.flow( /*#__PURE__*/_regeneratorRuntime.mark(function loadProdocts(json) {\n    return _regeneratorRuntime.wrap(function loadProdocts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              updateProdocts(json);\n              markLoading(false);\n            } catch (err) {\n              console.error('Failed to load prodocts ', err);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, loadProdocts);\n  }));\n  return {\n    updateProdocts: updateProdocts,\n    loadProdocts: loadProdocts\n  };\n});\n\nfunction sortProdocts(prodocts) {\n  return prodocts.filter(function (b) {\n    return b.isAvailable;\n  }).sort(function (a, b) {\n    return a.name > b.name ? 1 : a.name === b.name ? 0 : -1;\n  });\n}","map":null,"metadata":{},"sourceType":"script"}