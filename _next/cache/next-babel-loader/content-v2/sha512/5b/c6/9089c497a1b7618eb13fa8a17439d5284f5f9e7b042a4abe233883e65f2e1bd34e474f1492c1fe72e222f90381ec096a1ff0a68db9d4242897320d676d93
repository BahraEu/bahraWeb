{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nvar _slicedToArray = require(\"/Users/bahra/bahra/BahraPro/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useStore = exports.StoreContext = void 0;\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar use_dark_mode_1 = __importDefault(require(\"use-dark-mode\")); // import { initializeStore } from '../../src/services/stores/store'\n\n\nvar theme_1 = require(\"../../src/styles/theme\");\n\nvar store;\nexports.StoreContext = react_1.createContext(store);\n\nfunction useStore() {\n  var context = react_1.useContext(exports.StoreContext);\n\n  if (context === undefined) {\n    throw new Error('useStore must be used within StoreProvider');\n  }\n\n  return context;\n}\n\nexports.useStore = useStore;\n\nvar BahraProvider = function BahraProvider(props) {\n  // const store = initializeStore()\n  var darkMode = use_dark_mode_1[\"default\"](true);\n\n  var _react_1$default$useS = react_1[\"default\"].useState(theme_1.Light),\n      _react_1$default$useS2 = _slicedToArray(_react_1$default$useS, 2),\n      theme = _react_1$default$useS2[0],\n      setTheme = _react_1$default$useS2[1];\n\n  var _react_1$default$useS3 = react_1[\"default\"].useState(false),\n      _react_1$default$useS4 = _slicedToArray(_react_1$default$useS3, 2),\n      mounted = _react_1$default$useS4[0],\n      setMounted = _react_1$default$useS4[1];\n\n  react_1[\"default\"].useEffect(function () {\n    setTheme(darkMode.value ? theme_1.Dark : theme_1.Light);\n    setMounted(true);\n  }, []);\n\n  var body = /*#__PURE__*/_reactJsxRuntime.jsx(theme_1.ThemeProvider, {\n    theme: theme,\n    children: props.children\n  });\n\n  if (!mounted) {\n    return /*#__PURE__*/_reactJsxRuntime.jsx(\"div\", {\n      children: body\n    });\n  }\n\n  return body;\n};\n\nexports[\"default\"] = BahraProvider;","map":null,"metadata":{},"sourceType":"script"}