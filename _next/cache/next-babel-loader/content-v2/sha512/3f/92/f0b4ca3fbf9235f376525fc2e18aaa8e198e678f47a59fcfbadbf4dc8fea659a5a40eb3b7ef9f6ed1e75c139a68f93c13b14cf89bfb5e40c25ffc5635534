{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ViewStore = void 0;\n\nconst mobx_state_tree_1 = require(\"mobx-state-tree\");\n\nexports.ViewStore = mobx_state_tree_1.types.model({\n  page: 'prodocts',\n  selectedProdoctId: ''\n}).views(self => ({\n  get shop() {\n    return mobx_state_tree_1.getParent(self);\n  },\n\n  get isLoading() {\n    return self.shop.isLoading;\n  },\n\n  get currentUrl() {\n    switch (self.page) {\n      case 'prodocts':\n        return '/';\n\n      case 'prodoct':\n        return '/prodoct/' + self.selectedProdoctId;\n\n      case 'cart':\n        return '/cart';\n\n      default:\n        return '/404';\n    }\n  },\n\n  get selectedProdoct() {\n    return self.isLoading || !self.selectedProdoctId ? null : self.shop.prodocts.get(self.selectedProdoctId);\n  }\n\n})).actions(self => ({\n  openProdoctsPage() {\n    self.page = 'prodocts';\n    self.selectedProdoctId = '';\n  },\n\n  openProdoctPage(prodoct) {\n    self.page = 'prodoct';\n    self.selectedProdoctId = prodoct.id;\n  },\n\n  openProdoctPageById(id) {\n    self.page = 'prodoct';\n    self.selectedProdoctId = id;\n  },\n\n  openCartPage() {\n    self.page = 'cart';\n    self.selectedProdoctId = '';\n  }\n\n}));","map":null,"metadata":{},"sourceType":"script"}