{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst isomorphic_unfetch_1 = __importDefault(require(\"isomorphic-unfetch\"));\n\nconst createClient_1 = __importDefault(require(\"./createClient\"));\n\nconst isBrowser = false; // Polyfill fetch() on the server (used by apollo-client)\n\nif (!isBrowser) {\n  global.fetch = isomorphic_unfetch_1.default;\n}\n\nlet apolloClient;\n\nfunction initApollo(initialState, options) {\n  // Make sure to create a new client for every server-side request so that data\n  // isn't shared between connections (which would be bad)\n  if (!isBrowser) {\n    return createClient_1.default(initialState, options);\n  } // Reuse client on the client-side\n\n\n  if (!apolloClient) {\n    apolloClient = createClient_1.default(initialState, options);\n  }\n\n  return apolloClient;\n}\n\nexports.default = initApollo;","map":null,"metadata":{},"sourceType":"script"}