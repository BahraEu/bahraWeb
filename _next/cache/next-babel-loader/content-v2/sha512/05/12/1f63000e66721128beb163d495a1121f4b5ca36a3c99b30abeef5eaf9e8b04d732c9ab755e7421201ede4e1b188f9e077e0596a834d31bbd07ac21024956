{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = __importStar(require(\"react\"));\n\nconst auth_functions_1 = require(\"../../src/utilty/auth-functions\");\n\nconst spinner_1 = __importDefault(require(\"../../src/styles/spinner/spinner\"));\n\nconst context_1 = require(\"../../src/utilty/context\");\n\nconst cookie_1 = __importDefault(require(\"cookie\"));\n\nconst parseCookies_1 = __importDefault(require(\"../../src/utilty/parseCookies\"));\n\nconst utilty_1 = require(\"../../src/utilty\");\n\nconst bahraProviders_1 = __importDefault(require(\"./bahraProviders\"));\n\nconst index_1 = require(\"../../src/styles/theme/index\");\n\nconst AuthProvider = props => {\n  const initialLoginState = {\n    isLoading: true,\n    userID: null,\n    token: null,\n    RefreshToken: null,\n    user: props.user\n  }; // const client = useApolloClient()\n\n  const loginReducer = (prevState, action) => {\n    switch (action.type) {\n      case 'USER':\n        return Object.assign(Object.assign({}, prevState), {\n          user: action.setUser,\n          isLoading: false\n        });\n\n      case 'RETRIEVE_TOKEN':\n        return Object.assign(Object.assign({}, prevState), {\n          token: action.token,\n          RefreshToken: action.RefreshToken,\n          userID: action.userID,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return Object.assign(Object.assign({}, prevState), {\n          userID: action.userID,\n          token: action.token,\n          RefreshToken: action.RefreshToken,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return Object.assign(Object.assign({}, prevState), {\n          userID: null,\n          authToken: null,\n          RefreshToken: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return Object.assign(Object.assign({}, prevState), {\n          userID: action.userID,\n          token: action.jwtAuthToken,\n          RefreshToken: action.RefreshToken,\n          isLoading: false\n        });\n    }\n  };\n\n  const [loginState, dispatch] = react_1.default.useReducer(loginReducer, initialLoginState);\n  const [user, setUser] = react_1.useState(props.user);\n  const authContext = react_1.default.useMemo(() => ({\n    user,\n    // setUser: async ( userID:string) => {\n    //     if (!isEmpty(userID)) {\n    //         async (userID)=>{\n    //                 await props.apolloClient.query({ query:WP_USER,\n    //                   variables:{id:userID},\n    //                 }).then( async(data) => {\n    //                   console.log('ddddddddddddddddddddddddddddd',data)\n    //                   const wpUser = data.user;\n    //                   console.log('wpUser', wpUser);\n    //                   setUser({user:wpUser})\n    //                   return wpUser\n    //                 }).catch((err)=>console.error(err)\n    //                 )\n    //         }\n    //     }\n    //     dispatch({ type: 'USER', user: user });\n    // },\n    logIn: async user => {\n      if (!auth_functions_1.isEmpty(user)) {\n        try {\n          await setUser;\n          setUser(user);\n          document.cookie = cookie_1.default.serialize('authToken', user.jwtAuthToken, {\n            maxAge: 30 * 24 * 60 * 60\n          });\n          document.cookie = cookie_1.default.serialize('refreshToken', user.jwtRefreshToken, {\n            maxAge: 30 * 24 * 60 * 60\n          });\n          document.cookie = cookie_1.default.serialize('userID', user.id, {\n            maxAge: 30 * 24 * 60 * 60\n          });\n          document.cookie = cookie_1.default.serialize('username', user.username, {\n            maxAge: 30 * 24 * 60 * 60\n          });\n          await localStorage.setItem('authToken', user.jwtAuthToken);\n          await localStorage.setItem('refreshToken', user.jwtRefreshToken);\n          await localStorage.setItem('userID', user.id);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n\n      dispatch({\n        type: 'LOGIN',\n        userID: user.id,\n        token: user.jwtAuthToken\n      });\n    },\n    logOut: async () => {\n      try {\n        await localStorage.removeItem('authToken');\n        await localStorage.removeItem('refreshToken');\n        await localStorage.removeItem('userID');\n      } catch (e) {\n        console.log(e);\n      }\n\n      dispatch({\n        type: 'LOGOUT'\n      });\n    },\n    signUp: async user => {\n      if (!auth_functions_1.isEmpty(user)) {\n        try {\n          setUser(user);\n          await localStorage.setItem('authToken', user.jwtAuthToken);\n          await localStorage.setItem('refreshToken', user.jwtRefreshToken);\n          await localStorage.setItem('userID', user.id);\n        } catch (e) {\n          console.log(e);\n        }\n      } // console.log('user token: ', authToken);\n\n\n      dispatch({\n        type: 'LOGIN',\n        id: user.id,\n        token: user.jwtAuthToken\n      });\n    }\n  }), []);\n\n  if (!auth_functions_1.isEmpty(props.user)) {} else {\n    react_1.useEffect(() => {\n      setTimeout(async () => {\n        let authToken = null;\n        let userID = null;\n        let RToken = null;\n\n        try {\n          authToken = utilty_1.isServer ? parseCookies_1.default().authToken : await localStorage.getItem('authToken');\n          RToken = await localStorage.getItem('refreshToken');\n          userID = utilty_1.isServer ? parseCookies_1.default().userID : await localStorage.getItem('userID');\n        } catch (e) {\n          console.log(e);\n        }\n\n        console.log(authToken);\n        dispatch({\n          type: 'RETRIEVE_TOKEN',\n          userID: userID,\n          RefreshToken: RToken,\n          token: authToken\n        });\n      }, 1000);\n    }, []);\n  }\n\n  if (loginState.isLoading) {\n    return /*#__PURE__*/_reactJsxRuntime.jsx(\"div\", {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_reactJsxRuntime.jsx(spinner_1.default, {})\n    });\n  }\n\n  const Component = props.Component;\n  const pageProps = props.pageProps;\n  return /*#__PURE__*/_reactJsxRuntime.jsx(context_1.AuthContext.Provider, {\n    value: authContext,\n    children: /*#__PURE__*/_reactJsxRuntime.jsxs(bahraProviders_1.default, _objectSpread(_objectSpread({}, props.children), {}, {\n      children: [/*#__PURE__*/_reactJsxRuntime.jsx(index_1.GlobalStyle, {}), loginState.token && loginState.userID !== null ? /*#__PURE__*/_reactJsxRuntime.jsx(Component, _objectSpread(_objectSpread({}, pageProps), {}, {\n        user: props.user\n      })) : /*#__PURE__*/_reactJsxRuntime.jsx(Component, _objectSpread({}, pageProps))]\n    }))\n  });\n};\n\nexports.default = AuthProvider;","map":null,"metadata":{},"sourceType":"script"}