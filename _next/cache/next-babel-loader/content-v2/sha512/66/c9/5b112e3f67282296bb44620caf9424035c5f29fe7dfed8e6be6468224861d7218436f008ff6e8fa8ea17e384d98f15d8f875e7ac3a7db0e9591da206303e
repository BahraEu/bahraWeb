{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/rami/BHARA/BahraPro/BahraPro/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/rami/BHARA/BahraPro/BahraPro/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _defineProperty = require(\"/home/rami/BHARA/BahraPro/BahraPro/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nvar _classCallCheck = require(\"/home/rami/BHARA/BahraPro/BahraPro/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/rami/BHARA/BahraPro/BahraPro/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/rami/BHARA/BahraPro/BahraPro/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"/home/rami/BHARA/BahraPro/BahraPro/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/rami/BHARA/BahraPro/BahraPro/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar PropTypes = __importStar(require(\"prop-types\"));\n\nvar React = __importStar(require(\"react\"));\n\nvar react_apollo_1 = require(\"react-apollo\");\n\nvar head_1 = __importDefault(require(\"next/head\"));\n\nvar initApollo_1 = __importDefault(require(\"./initApollo\"));\n\nvar parseCookies_1 = __importDefault(require(\"../../utilty/parseCookies\"));\n\nexports[\"default\"] = function (App) {\n  // let disableStylesGeneration = true;\n  var _a;\n\n  App.displayName = 'BAHRA App';\n  return _a = /*#__PURE__*/function (_React$Component) {\n    _inherits(WithData, _React$Component);\n\n    var _super = _createSuper(WithData);\n\n    function WithData(props) {\n      var _this;\n\n      _classCallCheck(this, WithData);\n\n      _this = _super.call(this, props);\n      _this.pageContext = null; // `getDataFromTree` renders the component first, the client is passed off as a property.\n      // After that rendering is done using Next's normal rendering pipeline\n\n      _this.apolloClient = initApollo_1[\"default\"](props.apolloState, {\n        getToken: function getToken() {\n          var WP_refreshToken = parseCookies_1[\"default\"]().refreshToken;\n          var WP_authToken = parseCookies_1[\"default\"]().authToken;\n          return {\n            WP_authToken: WP_authToken,\n            WP_refreshToken: WP_refreshToken\n          };\n        }\n      });\n      return _this;\n    }\n\n    _createClass(WithData, [{\n      key: \"render\",\n      value: function render() {\n        return /*#__PURE__*/_reactJsxRuntime.jsx(App, _objectSpread(_objectSpread({}, this.props), {}, {\n          apolloClient: this.apolloClient\n        }));\n      }\n    }], [{\n      key: \"getInitialProps\",\n      value: function () {\n        var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n          var Component, router, req, res, apollo, appProps, apolloState;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  Component = ctx.Component, router = ctx.router, req = ctx.req, res = ctx.res;\n                  apollo = initApollo_1[\"default\"]({}, {\n                    getToken: function getToken() {\n                      var refreshToken = parseCookies_1[\"default\"](req).refreshToken;\n                      console.log('authToken', refreshToken);\n                      var authToken = parseCookies_1[\"default\"](req).authToken;\n                      console.log('authToken', authToken);\n                      return {\n                        authToken: authToken,\n                        refreshToken: refreshToken\n                      };\n                    }\n                  });\n                  ctx.apolloClient = apollo;\n                  appProps = {};\n\n                  if (!App.getInitialProps) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 7;\n                  return App.getInitialProps(ctx);\n\n                case 7:\n                  appProps = _context.sent;\n\n                case 8:\n                  if (!(res && res.finished)) {\n                    _context.next = 10;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", {});\n\n                case 10:\n                  if (!(typeof 'process' !== 'undefined' && process && process.versions && Boolean(process.versions.node))) {\n                    _context.next = 20;\n                    break;\n                  }\n\n                  _context.prev = 11;\n                  _context.next = 14;\n                  return react_apollo_1.getDataFromTree( /*#__PURE__*/_reactJsxRuntime.jsx(App, _objectSpread(_objectSpread({}, appProps), {}, {\n                    Component: Component,\n                    router: router,\n                    apolloClient: apollo\n                  })));\n\n                case 14:\n                  _context.next = 19;\n                  break;\n\n                case 16:\n                  _context.prev = 16;\n                  _context.t0 = _context[\"catch\"](11);\n                  // Prevent Apollo Client GraphQL errors from crashing SSR.\n                  // Handle them in components via the data.error prop:\n                  // https://www.apollographql.com/docs/react/api/react-apollo.html#graphql-query-data-error\n                  // tslint:disable-next-line:no-console\n                  console.error('Error while running `getDataFromTree`', _context.t0);\n\n                case 19:\n                  // getDataFromTree does not call componentWillUnmount\n                  // head side effect therefore need to be cleared manually\n                  head_1[\"default\"].rewind();\n\n                case 20:\n                  // Extract query data from the Apollo's store\n                  apolloState = apollo.cache.extract();\n                  return _context.abrupt(\"return\", Object.assign(Object.assign({}, appProps), {\n                    apolloState: apolloState\n                  }));\n\n                case 22:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[11, 16]]);\n        }));\n\n        function getInitialProps(_x) {\n          return _getInitialProps.apply(this, arguments);\n        }\n\n        return getInitialProps;\n      }()\n    }]);\n\n    return WithData;\n  }(React.Component), _a.displayName = \"WithData(\".concat(App.displayName, \")\"), _a.propTypes = {\n    apolloState: PropTypes.object.isRequired\n  }, _a;\n};","map":null,"metadata":{},"sourceType":"script"}