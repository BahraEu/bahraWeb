{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/bahra/bahra/BahraPro/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/bahra/bahra/BahraPro/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUser = exports.isUserValidated = exports.isEmpty = void 0;\n\nvar config_1 = __importDefault(require(\"../../config/config\"));\n\nvar parseCookies_1 = __importDefault(require(\"./parseCookies\"));\n\nvar _1 = require(\".\");\n\nvar wp_user_1 = require(\"../graphql/queries/wp-user\"); // import { User } from '../types/User';\n\n/**\n * Returns true if the value is undefined/null/empty object/empty string.\n *\n * @param value\n * @return {boolean}\n */\n\n\nvar isEmpty = function isEmpty(value) {\n  return value === undefined || value === null || typeof value === 'object' && Object.keys(value).length === 0 || typeof value === 'string' && value.trim().length === 0;\n};\n\nexports.isEmpty = isEmpty;\n/**\n * Check if user is logged in.\n *\n * @return {object} Auth Object containing token and user data, false on failure.\n */\n\nvar isUserValidated = function isUserValidated() {\n  if (!exports.isEmpty) {\n    var authTokenData = _1.isServer ? parseCookies_1[\"default\"]().authToken : localStorage.getItem(config_1[\"default\"].WP_authToken);\n    var userID = _1.isServer ? parseCookies_1[\"default\"]().userID : localStorage.getItem(config_1[\"default\"].userID);\n    var userLoggedInData = {};\n\n    if (!exports.isEmpty(authTokenData)) {\n      authTokenData = JSON.parse(authTokenData);\n      userID = JSON.parse(userID);\n\n      if (!exports.isEmpty(authTokenData)) {\n        userLoggedInData = {\n          authTokenData: authTokenData,\n          userID: userID\n        };\n      }\n    }\n\n    return userLoggedInData;\n  } else {\n    var _userLoggedInData = {};\n\n    var _authTokenData = _1.isServer ? parseCookies_1[\"default\"]().authToken : parseCookies_1[\"default\"]().authToken;\n\n    var _userID = _1.isServer ? parseCookies_1[\"default\"]().userID : parseCookies_1[\"default\"]().userID;\n\n    if (!exports.isEmpty(_authTokenData)) {\n      _authTokenData = JSON.parse(_authTokenData);\n      _userID = JSON.parse(_userID);\n\n      if (!exports.isEmpty(_authTokenData)) {\n        _userLoggedInData = {\n          authTokenData: _authTokenData,\n          userID: _userID\n        };\n      }\n\n      return _userLoggedInData;\n    }\n  }\n};\n\nexports.isUserValidated = isUserValidated;\n/**\n * Logout the user.\n *\n * @param {string} urlToRedirect URL where user needs to be redirected after logout.\n *\n * @return {void}\n */\n\nvar getUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(client, userID) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return client.query({\n              query: wp_user_1.WP_USER,\n              variables: {\n                id: userID\n              }\n            }).then( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n                var wpUser, loading;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        console.log('ddddddddddddddddddddddddddddd', data);\n                        wpUser = data.data.user;\n                        loading = data.loading;\n                        console.log('wpUser', wpUser, loading);\n\n                        if (!exports.isEmpty(wpUser)) {//   await userStore.createUser(wpUser)\n                        }\n\n                        return _context.abrupt(\"return\", {\n                          wpUser: wpUser,\n                          loading: loading\n                        });\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x3) {\n                return _ref2.apply(this, arguments);\n              };\n            }())[\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.getUser = getUser; // export const getUsers = async(client)=>\n//  await client.query({query:GET_ALL_WP_USERS}).then( async(data) => {\n//    const wpUsers=!isEmpty(data.users) ?data.users.nodes:null\n//    console.log('ddddddddddddddddddddddddddddd wpUsers',data.data.users.nodes,wpUsers)\n// return wpUsers\n//  }).catch((err)=>console.error(err)\n//  )","map":null,"metadata":{},"sourceType":"script"}