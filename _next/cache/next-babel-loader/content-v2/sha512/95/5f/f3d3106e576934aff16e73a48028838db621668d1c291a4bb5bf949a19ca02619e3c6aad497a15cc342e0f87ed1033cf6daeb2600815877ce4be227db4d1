{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\n\nvar _jsxFileName = \"/home/rami/BHARA/BahraPro/BahraPro/src/services/i18n/TranslationPicker.jsx\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CloseButton = void 0;\n\nconst react_1 = __importDefault(require(\"react\"));\n\nconst i18n_1 = require(\"../../../i18n\");\n\nconst CloseOnEscape_1 = __importDefault(require(\"./LocaleButton/CloseOnEscape\"));\n\nconst LocaleButton_1 = require(\"./LocaleButton\");\n\nconst utilty_1 = require(\"../../utilty\");\n\nconst theme_1 = __importDefault(require(\"../../styles/theme\"));\n\nconst Typography_1 = require(\"../../styles/Typography\");\n\nexports.CloseButton = theme_1.default.div`\n  position: relative;\n  padding: 0 8px;\n  display: ${props => props.visible ? 'block' : 'none'};\n  font-size: 26px;\n  font-weight: 300;\n  cursor: pointer;\n  bottom:1.2em;\n  right:2.4em;\n`;\nconst PickerButton = theme_1.default.div`\n    color: white;\n    background:\n    transition: background 0.3s, color 0.3s;\n    z-index: 0;\n    cursor: pointer;\n    :hover {\n        background: ${props => props.theme.bg.inset[2]};\n        color: black;\n    }\n`;\nconst Title = theme_1.default.h2`\n    font-size: 1.2rem;\n    margin: 0;\n    color: ${props => props.theme.bg.secondary};\n    white-space: nowrap;\n    display:inline-flex;\n    align-content:center;\n    justify-content:center;\n    span {\n        color: gray;\n        font-size: 0.8em;\n    }\n`;\nconst PickerWrapper = theme_1.default.div`\n    display: ${props => props.DropdownOpen ? 'flex' : 'none'};\n    z-index: 9;\n    justify-content: space-between;\n    position: absolute;\n    top: 22rem;\n    right: 50%;\n    border-radius: 0.65rem;\n    padding: 2rem 4rem;\n    align-self:center;\n    background-color: ${props => props.theme.bg.inset};\n    :hover {\n        background: white;\n        color: black;\n    }\n`;\n\nclass TranslationPickerClass extends react_1.default.Component {\n  constructor() {\n    super(...arguments);\n    this.wrapperRef = react_1.default.createRef();\n    this.state = {\n      DropdownOpen: false\n    };\n\n    this.handleClickOutside = event => {\n      const current = this.wrapperRef.current;\n\n      if (current && !current.contains(event.target)) {\n        this.toggleDropdownOpen(false);\n      }\n    };\n\n    this.toggleDropdownOpen = DropdownOpen => {\n      this.setState({\n        DropdownOpen\n      });\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClickOutside, false);\n    document.addEventListener('touchstart', this.handleClickOutside, false);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('click', this.handleClickOutside, false);\n    document.addEventListener('touchstart', this.handleClickOutside, false);\n  }\n\n  render() {\n    const renderLocaleButtons = activeLanguage => ['English', 'Arabic'].map(lang => /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(LocaleButton_1.LocaleButton, {\n      lang: lang,\n      isActive: activeLanguage === lang,\n      onClick: () => utilty_1.changeLanguage({\n        lang,\n        currentLanguage\n      })\n    }, lang, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 92\n    }, this));\n\n    const {\n      currentLanguage\n    } = this.props;\n    const {\n      DropdownOpen\n    } = this.state;\n    return /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(_reactJsxDevRuntime.Fragment, {\n      children: /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(PickerButton, {\n        onClick: () => this.toggleDropdownOpen(!DropdownOpen),\n        children: [/*#__PURE__*/_reactJsxDevRuntime.jsxDEV(Title, {\n          children: i18n_1.i18n.language && i18n_1.i18n.language.split('', 3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(CloseOnEscape_1.default, {\n          onEscape: () => this.toggleDropdownOpen(false),\n          children: /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(PickerWrapper, {\n            DropdownOpen: DropdownOpen,\n            children: [/*#__PURE__*/_reactJsxDevRuntime.jsxDEV(exports.CloseButton, {\n              visible: DropdownOpen,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(Typography_1.H6, {\n              children: \"choose your lamguage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), renderLocaleButtons(i18n_1.i18n.language)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexports.default = i18n_1.withTranslation('common')(TranslationPickerClass);","map":{"version":3,"sources":["../../../../src/services/i18n/TranslationPicker.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloseButton = void 0;\nconst react_1 = __importDefault(require(\"react\"));\nconst i18n_1 = require(\"../../../i18n\");\nconst CloseOnEscape_1 = __importDefault(require(\"./LocaleButton/CloseOnEscape\"));\nconst LocaleButton_1 = require(\"./LocaleButton\");\nconst utilty_1 = require(\"../../utilty\");\nconst theme_1 = __importDefault(require(\"../../styles/theme\"));\nconst Typography_1 = require(\"../../styles/Typography\");\nexports.CloseButton = theme_1.default.div `\n  position: relative;\n  padding: 0 8px;\n  display: ${props => props.visible ? 'block' : 'none'};\n  font-size: 26px;\n  font-weight: 300;\n  cursor: pointer;\n  bottom:1.2em;\n  right:2.4em;\n`;\nconst PickerButton = theme_1.default.div `\n    color: white;\n    background:\n    transition: background 0.3s, color 0.3s;\n    z-index: 0;\n    cursor: pointer;\n    :hover {\n        background: ${props => props.theme.bg.inset[2]};\n        color: black;\n    }\n`;\nconst Title = theme_1.default.h2 `\n    font-size: 1.2rem;\n    margin: 0;\n    color: ${props => props.theme.bg.secondary};\n    white-space: nowrap;\n    display:inline-flex;\n    align-content:center;\n    justify-content:center;\n    span {\n        color: gray;\n        font-size: 0.8em;\n    }\n`;\nconst PickerWrapper = theme_1.default.div `\n    display: ${props => (props.DropdownOpen ? 'flex' : 'none')};\n    z-index: 9;\n    justify-content: space-between;\n    position: absolute;\n    top: 22rem;\n    right: 50%;\n    border-radius: 0.65rem;\n    padding: 2rem 4rem;\n    align-self:center;\n    background-color: ${props => props.theme.bg.inset};\n    :hover {\n        background: white;\n        color: black;\n    }\n`;\nclass TranslationPickerClass extends react_1.default.Component {\n    constructor() {\n        super(...arguments);\n        this.wrapperRef = react_1.default.createRef();\n        this.state = {\n            DropdownOpen: false,\n        };\n        this.handleClickOutside = (event) => {\n            const current = this.wrapperRef.current;\n            if (current && !current.contains(event.target)) {\n                this.toggleDropdownOpen(false);\n            }\n        };\n        this.toggleDropdownOpen = (DropdownOpen) => {\n            this.setState({ DropdownOpen });\n        };\n    }\n    componentDidMount() {\n        document.addEventListener('click', this.handleClickOutside, false);\n        document.addEventListener('touchstart', this.handleClickOutside, false);\n    }\n    componentWillUnmount() {\n        document.addEventListener('click', this.handleClickOutside, false);\n        document.addEventListener('touchstart', this.handleClickOutside, false);\n    }\n    render() {\n        const renderLocaleButtons = (activeLanguage) => ['English', 'Arabic'].map(lang => (<LocaleButton_1.LocaleButton key={lang} lang={lang} isActive={activeLanguage === lang} onClick={() => utilty_1.changeLanguage({ lang, currentLanguage })}/>));\n        const { currentLanguage } = this.props;\n        const { DropdownOpen } = this.state;\n        return (<>\n                <PickerButton onClick={() => this.toggleDropdownOpen(!DropdownOpen)}>\n                    <Title>{i18n_1.i18n.language && i18n_1.i18n.language.split('', 3)}</Title>\n                    <CloseOnEscape_1.default onEscape={() => this.toggleDropdownOpen(false)}>\n                        <PickerWrapper DropdownOpen={DropdownOpen}>\n                            <exports.CloseButton visible={DropdownOpen}>×</exports.CloseButton>\n\n                            <Typography_1.H6>choose your lamguage</Typography_1.H6>\n                            {renderLocaleButtons(i18n_1.i18n.language)}\n                        </PickerWrapper>\n                    </CloseOnEscape_1.default>\n                </PickerButton>\n            </>);\n    }\n}\nexports.default = i18n_1.withTranslation('common')(TranslationPickerClass);\n//# sourceMappingURL=TranslationPicker.jsx.map"]},"metadata":{},"sourceType":"script"}