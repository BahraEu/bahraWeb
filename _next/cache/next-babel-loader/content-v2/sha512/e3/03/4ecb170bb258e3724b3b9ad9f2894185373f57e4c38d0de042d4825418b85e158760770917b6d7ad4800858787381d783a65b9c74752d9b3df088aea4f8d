{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst wp_mutation_1 = require(\"../src/graphql/mutations/wp-mutation\");\n\nconst react_apollo_1 = require(\"react-apollo\");\n\nconst formik_1 = require(\"formik\");\n\nconst blankLayout_1 = __importDefault(require(\"../src/components/Layouts/blankLayout/blankLayout\"));\n\nconst ResetPasswordForm_1 = __importDefault(require(\"../src/components/bahra/Form/ResetPasswordForm\"));\n\nconst Typography_1 = require(\"../src/styles/Typography\"); // import { loginSchema } from '../src/components/bahra/Auth/schema';\n\n\nconst helpers_1 = require(\"../src/utilty/helpers\");\n\nconst react_1 = __importStar(require(\"react\"));\n\nconst context_1 = require(\"../src/utilty/context\");\n\nconst lodash_1 = require(\"lodash\");\n\nconst i18n_1 = require(\"../i18n\");\n\nconst style_1 = require(\"../src/components/bahra/Form/style\");\n\nconst routes_1 = require(\"../src/services/routes/routes\");\n\nconst ResetPassword = ({\n  currentUrl,\n  currentLanguage,\n  t\n}) => {\n  const client = react_apollo_1.useApolloClient();\n  const {\n    logIn\n  } = react_1.useContext(context_1.AuthContext);\n\n  const onCompleted = data => {\n    const user = data.login.user;\n\n    if (!lodash_1.isEmpty(user)) {\n      logIn(user);\n    } else {\n      console.log('wrong');\n    }\n\n    client.cache.reset().then(() => {\n      helpers_1.redirect({\n        user\n      }, '/account');\n    });\n  };\n\n  const onError = error => {\n    // If you want to send error to external service?\n    console.error('loginError', error);\n  };\n\n  const [resetUserPassword, {\n    error\n  }] = react_apollo_1.useMutation(wp_mutation_1.ResetUserPassword, {\n    onCompleted,\n    onError\n  });\n  return /*#__PURE__*/_reactJsxRuntime.jsx(blankLayout_1.default, {\n    currentLanguage: i18n_1.i18n.language,\n    children: /*#__PURE__*/_reactJsxRuntime.jsxs(style_1.LogInWrapper, {\n      children: [/*#__PURE__*/_reactJsxRuntime.jsx(Typography_1.H2, {\n        className: \"mb-2\",\n        children: t('Rest Password')\n      }), /*#__PURE__*/_reactJsxRuntime.jsx(formik_1.Formik, {\n        initialValues: {\n          username: '',\n          password: ''\n        } //   validationSchema={loginSchema}\n        ,\n        onSubmit: async (values, {\n          setSubmitting\n        }) => {\n          await resetUserPassword({\n            variables: values\n          });\n          setSubmitting(false);\n        },\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_reactJsxRuntime.jsx(ResetPasswordForm_1.default, _objectSpread({\n          isSubmitting: isSubmitting,\n          currentUrl: currentUrl,\n          currentLanguage: currentLanguage\n        }, error))\n      }), /*#__PURE__*/_reactJsxRuntime.jsxs(\"div\", {\n        children: [/*#__PURE__*/_reactJsxRuntime.jsx(Typography_1.H3, {\n          children: \"New to BAHRA?\"\n        }), /*#__PURE__*/_reactJsxRuntime.jsx(routes_1.Link, {\n          href: \"./signup\",\n          children: /*#__PURE__*/_reactJsxRuntime.jsx(Typography_1.H1, {\n            children: \"Register\"\n          })\n        }), /*#__PURE__*/_reactJsxRuntime.jsx(routes_1.Link, {\n          href: \"./signup\",\n          children: /*#__PURE__*/_reactJsxRuntime.jsx(Typography_1.H1, {\n            children: \"Forget Password\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nResetPassword.getInitialProps = async pageProps => {\n  const currentLanguage = helpers_1.isServer ? pageProps.req.language : localStorage.getItem('language');\n  const currentUrl = helpers_1.isServer ? pageProps.req.pathName || pageProps.req.path : '';\n  console.log('apolloClient', pageProps.apolloClient);\n  return {\n    namespacesRequired: ['common'],\n    namespaces: 'common',\n    t: undefined,\n    currentUrl,\n    currentLanguage\n  };\n};\n\nexports.default = i18n_1.withTranslation('common')(ResetPassword); // const Container1 = styled.View`\n//   background-color: ${(props) => props.theme.bg.inset2};\n// `;","map":null,"metadata":{},"sourceType":"script"}