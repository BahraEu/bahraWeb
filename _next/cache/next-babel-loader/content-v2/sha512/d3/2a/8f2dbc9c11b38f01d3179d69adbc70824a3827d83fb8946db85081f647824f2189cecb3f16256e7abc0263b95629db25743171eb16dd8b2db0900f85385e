{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = __importDefault(require(\"react\")); // nodejs library to set properties for components\n\n\n// nodejs library that concatenates classes\nconst classnames_1 = __importDefault(require(\"classnames\")); // @material-ui/core components\n\n\nconst styles_1 = require(\"@material-ui/core/styles\");\n\nconst FormControl_1 = __importDefault(require(\"@material-ui/core/FormControl\"));\n\nconst InputLabel_1 = __importDefault(require(\"@material-ui/core/InputLabel\"));\n\nconst Input_1 = __importDefault(require(\"@material-ui/core/Input\"));\n\nconst customInputStyle_1 = __importDefault(require(\"./customInputStyle\"));\n\nconst useStyles = styles_1.makeStyles(customInputStyle_1.default);\n\nfunction CustomInput(props) {\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    white,\n    inputRootCustomClasses,\n    success\n  } = props;\n  const labelClasses = classnames_1.default({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error\n  });\n  const underlineClasses = classnames_1.default({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true,\n    [classes.whiteUnderline]: white\n  });\n  const marginTop = classnames_1.default({\n    [inputRootCustomClasses]: inputRootCustomClasses !== undefined\n  });\n  const inputClasses = classnames_1.default({\n    [classes.input]: true,\n    [classes.whiteInput]: white\n  });\n  var formControlClasses;\n\n  if (formControlProps !== undefined) {\n    formControlClasses = classnames_1.default(formControlProps.className, classes.formControl);\n  } else {\n    formControlClasses = classes.formControl;\n  }\n\n  return /*#__PURE__*/_reactJsxRuntime.jsxs(FormControl_1.default, _objectSpread(_objectSpread({}, formControlProps), {}, {\n    className: formControlClasses,\n    children: [labelText !== undefined ? /*#__PURE__*/_reactJsxRuntime.jsx(InputLabel_1.default, _objectSpread(_objectSpread({\n      className: classes.labelRoot + \" \" + labelClasses,\n      htmlFor: id\n    }, labelProps), {}, {\n      children: labelText\n    })) : null, /*#__PURE__*/_reactJsxRuntime.jsx(Input_1.default, _objectSpread({\n      classes: {\n        input: inputClasses,\n        root: marginTop,\n        disabled: classes.disabled,\n        underline: underlineClasses\n      },\n      id: id\n    }, inputProps))]\n  }));\n}\n\nexports.default = CustomInput;","map":null,"metadata":{},"sourceType":"script"}