{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = __importDefault(require(\"react\"));\n\nconst app_1 = __importDefault(require(\"next/app\"));\n\nconst react_apollo_1 = require(\"react-apollo\");\n\nconst mobx_react_1 = require(\"mobx-react\");\n\nconst i18n_1 = require(\"../i18n\");\n\nconst withData_1 = __importDefault(require(\"../src/services/apollo/withData\"));\n\nconst head_1 = __importDefault(require(\"next/head\"));\n\nconst utilty_1 = require(\"../src/utilty\");\n\nconst auth_functions_1 = require(\"../src/utilty/auth-functions\");\n\nconst parseCookies_1 = __importDefault(require(\"../src/utilty/parseCookies\"));\n\nconst authProvider_1 = __importDefault(require(\"./auth/authProvider\"));\n\nconst store_1 = require(\"../src/services/stores/store\");\n\nconst router_1 = require(\"next/router\");\n\nconst wp_user_1 = require(\"../src/graphql/queries/wp-user\");\n\nconst mobx_react_lite_1 = require(\"mobx-react-lite\"); // there is no window object on the server\n\n\nmobx_react_lite_1.enableStaticRendering(true); // on the server\n\nmobx_react_lite_1.enableStaticRendering(true); // in the browser\n\nmobx_react_lite_1.enableStaticRendering(false);\n\nclass MyApp extends app_1.default {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      users: undefined,\n      isLogedIn: false,\n      width: '',\n      height: ''\n    };\n\n    this.user = async () => {\n      if (!auth_functions_1.isEmpty(this.props.pageProps.userID)) {\n        let id = this.props.pageProps.userID;\n        this.props.apolloClient.query({\n          query: wp_user_1.WP_USER,\n          variables: {\n            id: id\n          }\n        }).then(async res => {\n          const wpUser = res.data.user;\n          await this.mobxStore.userStore.createUser(wpUser);\n          this.setState(true);\n          return {\n            user: wpUser\n          };\n        }).catch(err => console.error(err));\n      } else {\n        undefined;\n      }\n    };\n\n    this.mobxStore = utilty_1.isServer ? props.pageProps.RootState : store_1.initializeStore(props.pageProps.RootState);\n  }\n\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const userID = utilty_1.isServer ? parseCookies_1.default(ctx.req).userID : localStorage.getItem('userID');\n    let Language = utilty_1.isServer ? parseCookies_1.default(ctx.req).language : localStorage.getItem('language'); // create a store with the initial state\n\n    const mobxStore = store_1.initializeStore();\n    ctx.mobxStore = mobxStore;\n    const basePageProps = {\n      Language,\n      userID: userID,\n      RootState: mobxStore,\n      router: router_1.Router\n    };\n    let pageProps = Object.assign({}, basePageProps);\n\n    if (Component.getInitialProps) {\n      // inject the basePageProps in the parameters of getInitialProps\n      pageProps = await Component.getInitialProps(Object.assign(Object.assign({}, basePageProps), ctx)); // return the basePageProps inside the pageProps\n\n      pageProps = Object.assign(Object.assign({}, basePageProps), pageProps);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  handleResize() {\n    // Set window width/height to state\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n\n  async componentDidMount() {\n    let user = this.state.user;\n\n    if (auth_functions_1.isEmpty(user)) {\n      this.user();\n    } else {\n      this.setState({\n        isLogedIn: true\n      });\n    }\n\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles && jssStyles.parentNode) jssStyles.parentNode.removeChild(jssStyles);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      apolloClient\n    } = this.props;\n    console.log('MyApp this.mobxStore', this.mobxStore);\n    console.log('MyApp this.props', this.props);\n    console.log('MyApp State', this.state);\n\n    const FaviconImage = require(\"../public/images/icons/bahra-icon-120x120.png\");\n\n    return /*#__PURE__*/_reactJsxRuntime.jsxs(_reactJsxRuntime.Fragment, {\n      children: [/*#__PURE__*/_reactJsxRuntime.jsxs(head_1.default, {\n        children: [/*#__PURE__*/_reactJsxRuntime.jsx(\"title\", {\n          children: \"Hello, BAHRA\"\n        }), /*#__PURE__*/_reactJsxRuntime.jsx(\"link\", {\n          rel: \"shortcut icon\",\n          href: FaviconImage\n        })]\n      }), /*#__PURE__*/_reactJsxRuntime.jsx(mobx_react_1.Provider, {\n        store: this.mobxStore,\n        children: /*#__PURE__*/_reactJsxRuntime.jsx(react_apollo_1.ApolloProvider, {\n          client: apolloClient,\n          children: /*#__PURE__*/_reactJsxRuntime.jsx(authProvider_1.default, _objectSpread(_objectSpread({\n            user: this.state.user\n          }, pageProps), {}, {\n            Component: Component,\n            pageProps: pageProps\n          }))\n        })\n      })]\n    });\n  }\n\n}\n\nexports.default = withData_1.default(i18n_1.appWithTranslation(MyApp));","map":null,"metadata":{},"sourceType":"script"}