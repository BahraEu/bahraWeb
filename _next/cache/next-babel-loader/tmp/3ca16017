{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nvar _defineProperty = require(\"/Users/bahra/bahra/web-master/dist/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"/Users/bahra/bahra/web-master/dist/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\")); // nodejs library that concatenates classes\n\n\nvar classnames_1 = __importDefault(require(\"classnames\")); // nodejs library to set properties for components\n\n\n// @material-ui/core components\nvar styles_1 = require(\"@material-ui/core/styles\"); // core components\n\n\nvar parallaxStyle_1 = __importDefault(require(\"./parallaxStyle\"));\n\nvar useStyles = styles_1.makeStyles(parallaxStyle_1[\"default\"]);\n\nfunction Parallax(props) {\n  var _classnames_1$default;\n\n  var windowScrollTop;\n\n  if (window.innerWidth >= 768) {\n    windowScrollTop = window.pageYOffset / 3;\n  } else {\n    windowScrollTop = 0;\n  }\n\n  var _react_1$default$useS = react_1[\"default\"].useState(\"translate3d(0,\" + windowScrollTop + \"px,0)\"),\n      _react_1$default$useS2 = _slicedToArray(_react_1$default$useS, 2),\n      transform = _react_1$default$useS2[0],\n      setTransform = _react_1$default$useS2[1];\n\n  react_1[\"default\"].useEffect(function () {\n    if (window.innerWidth >= 768) {\n      window.addEventListener(\"scroll\", resetTransform);\n    }\n\n    return function cleanup() {\n      if (window.innerWidth >= 768) {\n        window.removeEventListener(\"scroll\", resetTransform);\n      }\n    };\n  });\n\n  var resetTransform = function resetTransform() {\n    var windowScrollTop = window.pageYOffset / 3;\n    setTransform(\"translate3d(0,\" + windowScrollTop + \"px,0)\");\n  };\n\n  var filter = props.filter,\n      className = props.className,\n      children = props.children,\n      style = props.style,\n      image = props.image,\n      small = props.small;\n  var classes = useStyles();\n  var parallaxClasses = classnames_1[\"default\"]((_classnames_1$default = {}, _defineProperty(_classnames_1$default, classes.parallax, true), _defineProperty(_classnames_1$default, classes.filter, filter), _defineProperty(_classnames_1$default, classes.small, small), _defineProperty(_classnames_1$default, className, className !== undefined), _classnames_1$default));\n  return /*#__PURE__*/_reactJsxRuntime.jsx(\"div\", {\n    className: parallaxClasses,\n    style: Object.assign(Object.assign({}, style), {\n      backgroundImage: \"url(\" + image + \")\",\n      transform: transform\n    }),\n    children: children\n  });\n}\n\nexports[\"default\"] = Parallax;","map":null,"metadata":{},"sourceType":"script"}