{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = __importDefault(require(\"react\")); // nodejs library that concatenates classes\n\n\nconst classnames_1 = __importDefault(require(\"classnames\")); // nodejs library to set properties for components\n\n\n// @material-ui/core components\nconst styles_1 = require(\"@material-ui/core/styles\"); // core components\n\n\nconst parallaxStyle_1 = __importDefault(require(\"./parallaxStyle\"));\n\nconst useStyles = styles_1.makeStyles(parallaxStyle_1.default);\n\nfunction Parallax(props) {\n  let windowScrollTop;\n\n  if (window.innerWidth >= 768) {\n    windowScrollTop = window.pageYOffset / 3;\n  } else {\n    windowScrollTop = 0;\n  }\n\n  const [transform, setTransform] = react_1.default.useState(\"translate3d(0,\" + windowScrollTop + \"px,0)\");\n  react_1.default.useEffect(() => {\n    if (window.innerWidth >= 768) {\n      window.addEventListener(\"scroll\", resetTransform);\n    }\n\n    return function cleanup() {\n      if (window.innerWidth >= 768) {\n        window.removeEventListener(\"scroll\", resetTransform);\n      }\n    };\n  });\n\n  const resetTransform = () => {\n    var windowScrollTop = window.pageYOffset / 3;\n    setTransform(\"translate3d(0,\" + windowScrollTop + \"px,0)\");\n  };\n\n  const {\n    filter,\n    className,\n    children,\n    style,\n    image,\n    small\n  } = props;\n  const classes = useStyles();\n  const parallaxClasses = classnames_1.default({\n    [classes.parallax]: true,\n    [classes.filter]: filter,\n    [classes.small]: small,\n    [className]: className !== undefined\n  });\n  return /*#__PURE__*/_reactJsxRuntime.jsx(\"div\", {\n    className: parallaxClasses,\n    style: Object.assign(Object.assign({}, style), {\n      backgroundImage: \"url(\" + image + \")\",\n      transform: transform\n    }),\n    children: children\n  });\n}\n\nexports.default = Parallax;","map":null,"metadata":{},"sourceType":"script"}